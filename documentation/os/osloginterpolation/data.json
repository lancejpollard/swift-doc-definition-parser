{
  "path": "/documentation/os/osloginterpolation",
  "type": "Structure",
  "name": "OSLogInterpolation",
  "desc": "A container for the elements of a log message.",
  "items": [
    {
      "name": "init(literalCapacity: Int, interpolationCount: Int)",
      "desc": "Creates a log interpolation."
    },
    {
      "name": "typealias OSLogInterpolation.StringLiteralType",
      "desc": "A string literal for an interpolated value."
    },
    {
      "name": "func appendInterpolation(() -> String, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated string."
    },
    {
      "name": "func appendInterpolation(() -> String, align: OSLogStringAlignment, privacy: OSLogPrivacy, attributes: String)",
      "desc": "Appends an interpolated string with the specified attributes."
    },
    {
      "name": "func appendLiteral(String)",
      "desc": "Appends a string literal."
    },
    {
      "name": "func appendInterpolation(() -> Int, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated integer."
    },
    {
      "name": "func appendInterpolation(() -> Int8, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated 8-bit integer."
    },
    {
      "name": "func appendInterpolation(() -> Int16, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated 16-bit integer."
    },
    {
      "name": "func appendInterpolation(() -> Int32, format: OSLogInt32ExtendedFormat, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated 32-bit integer."
    },
    {
      "name": "func appendInterpolation(() -> Int32, format: OSLogInt32ExtendedFormat, privacy: OSLogPrivacy, attributes: String)",
      "desc": "Appends an interpolated 32-bit integer with the specified attributes."
    },
    {
      "name": "func appendInterpolation(() -> Int32, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated 32-bit integer with the specified alignment."
    },
    {
      "name": "func appendInterpolation(() -> Int64, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated 64-bit integer."
    },
    {
      "name": "func appendInterpolation(() -> UInt, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated unsigned integer."
    },
    {
      "name": "func appendInterpolation(() -> UInt8, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated unsigned 8-bit integer."
    },
    {
      "name": "func appendInterpolation(() -> UInt16, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated unsigned 16-bit integer."
    },
    {
      "name": "func appendInterpolation(() -> UInt32, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated unsigned 32-bit integer."
    },
    {
      "name": "func appendInterpolation(() -> UInt64, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated unsigned 64-bit integer."
    },
    {
      "name": "func appendInterpolation(() -> Double, format: OSLogFloatFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated double."
    },
    {
      "name": "func appendInterpolation(() -> Double, format: OSLogFloatFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy, attributes: String)",
      "desc": "Appends an interpolated double with the specified attributes."
    },
    {
      "name": "func appendInterpolation(() -> Float, format: OSLogFloatFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated float."
    },
    {
      "name": "func appendInterpolation(() -> Float, format: OSLogFloatFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy, attributes: String)",
      "desc": "Appends an interpolated float with the specified attributes."
    },
    {
      "name": "func appendInterpolation(() -> Bool, format: OSLogBoolFormat, privacy: OSLogPrivacy)",
      "desc": "Adds a Boolean argument to the message."
    },
    {
      "name": "func appendInterpolation<T>(() -> T, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated textual representation of a type."
    },
    {
      "name": "func appendInterpolation<T>(() -> T, align: OSLogStringAlignment, privacy: OSLogPrivacy, attributes: String)",
      "desc": "Appends an interpolated textual representation of a type using the specified attributes."
    },
    {
      "name": "func appendInterpolation<T>(() -> T, format: OSLogIntegerFormatting, align: OSLogStringAlignment, privacy: OSLogPrivacy, attributes: String)",
      "desc": "Appends an interpolated numeric type using the specified attributes."
    },
    {
      "name": "func appendInterpolation(() -> Any.Type, align: OSLogStringAlignment, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated type description."
    },
    {
      "name": "func appendInterpolation(() -> Any.Type, align: OSLogStringAlignment, privacy: OSLogPrivacy, attributes: String)",
      "desc": "Appends an interpolated type description with the specified attributes."
    },
    {
      "name": "func appendInterpolation(() -> UnsafeRawPointer, bytes () -> Int, format: OSLogPointerFormat, privacy: OSLogPrivacy)",
      "desc": "Appends interpolated pointer data."
    },
    {
      "name": "func appendInterpolation(() -> UnsafeRawPointer, bytes () -> Int, format: OSLogPointerFormat, privacy: OSLogPrivacy, attributes: String)",
      "desc": "Appends interpolated pointer data with the specified attributes."
    },
    {
      "name": "func appendInterpolation(() -> UnsafeRawBufferPointer, format: OSLogPointerFormat, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated collection of raw bytes."
    },
    {
      "name": "func appendInterpolation(() -> UnsafeRawBufferPointer, format: OSLogPointerFormat, privacy: OSLogPrivacy, attributes: String)",
      "desc": "Appends an interpolated collection of raw bytes with the specified attributes."
    },
    {
      "name": "func appendInterpolation(() -> NSObject, privacy: OSLogPrivacy)",
      "desc": "Appends an interpolated object description."
    },
    {
      "name": "func appendInterpolation(() -> NSObject, privacy: OSLogPrivacy, attributes: String)",
      "desc": "Appends an interpolated object description with the specified attributes."
    },
    {
      "name": "func appendInterpolation(() -> Int, format: OSLogIntExtendedFormat, privacy: OSLogPrivacy, attributes: String)"
    }
  ],
  "declaration": "@frozen struct OSLogInterpolation",
  "conformsTo": [
    "StringInterpolationProtocol"
  ]
}