{
  "path": "/documentation/os/ossignposter",
  "type": "Structure",
  "name": "OSSignposter",
  "desc": "An object for measuring task performance using the unified logging system.",
  "items": [
    {
      "name": "init()",
      "desc": "Creates a signposter that uses the default subsystem."
    },
    {
      "name": "init(subsystem: String, category: String)",
      "desc": "Creates a signposter that uses the specified subsystem and category."
    },
    {
      "name": "init(subsystem: String, category: OSLog.Category)",
      "desc": "Creates a signposter that uses the specified subsystem and system-defined log category."
    },
    {
      "name": "init(logger: Logger)",
      "desc": "Creates a signposter that uses the subsystem and category of an existing logger."
    },
    {
      "name": "init(logHandle: OSLog)",
      "desc": "Creates a signposter that uses the subsystem and category of an existing log."
    },
    {
      "name": "static var disabled: OSSignposter",
      "desc": "A shared signposter that doesn’t emit signposts at runtime."
    },
    {
      "name": "var isEnabled: Bool",
      "desc": "A Boolean value that indicates whether the signposter can emit signposts."
    },
    {
      "name": "func makeSignpostID() -> OSSignpostID",
      "desc": "Returns an identifier that’s unique within the scope of the signposter."
    },
    {
      "name": "func makeSignpostID(from: AnyObject) -> OSSignpostID",
      "desc": "Returns an identifier that the signposter derives from the specified object."
    },
    {
      "name": "struct OSSignpostID",
      "desc": "An identifier that disambiguates signposted intervals."
    },
    {
      "name": "func beginInterval(StaticString, id: OSSignpostID) -> OSSignpostIntervalState",
      "desc": "Begins a signposted interval."
    },
    {
      "name": "func beginInterval(StaticString, id: OSSignpostID, SignpostMetadata) -> OSSignpostIntervalState",
      "desc": "Begins a signposted interval and attaches the specified message."
    },
    {
      "name": "func beginAnimationInterval(StaticString, id: OSSignpostID) -> OSSignpostIntervalState",
      "desc": "Begins a signposted interval for measuring an animation."
    },
    {
      "name": "func beginAnimationInterval(StaticString, id: OSSignpostID, SignpostMetadata) -> OSSignpostIntervalState",
      "desc": "Begins a signposted interval for measuring an animation, and attaches a message."
    },
    {
      "name": "class OSSignpostIntervalState",
      "desc": "An object that tracks the state of a signposted interval."
    },
    {
      "name": "typealias SignpostMetadata",
      "desc": "The type that represents a message you attach to a signpost."
    },
    {
      "name": "func endInterval(StaticString, OSSignpostIntervalState)",
      "desc": "Ends the signposted interval that corresponds to the specified name and state."
    },
    {
      "name": "func endInterval(StaticString, OSSignpostIntervalState, SignpostMetadata)",
      "desc": "Ends a signposted interval and attaches the specified message."
    },
    {
      "name": "func withIntervalSignpost<T>(StaticString, id: OSSignpostID, around: () -> T) -> T",
      "desc": "Measures the execution of the specified closure."
    },
    {
      "name": "func withIntervalSignpost<T>(StaticString, id: OSSignpostID, SignpostMetadata, around: () -> T) -> T",
      "desc": "Measures the execution of a closure and attaches the specified message."
    },
    {
      "name": "func emitEvent(StaticString, id: OSSignpostID)",
      "desc": "Marks a point of interest in time."
    },
    {
      "name": "func emitEvent(StaticString, id: OSSignpostID, SignpostMetadata)",
      "desc": "Marks a point of interest in time and attaches the specified message."
    }
  ],
  "declaration": "struct OSSignposter"
}