{
  "path": "/documentation/combine/publishers/breakpoint",
  "type": "Structure",
  "name": "Publishers.Breakpoint",
  "desc": "A publisher that raises a debugger signal when a provided closure needs to stop the process in the debugger.",
  "items": [
    {
      "name": "init(upstream: Upstream, receiveSubscription: ((Subscription) -> Bool)?, receiveOutput: ((Upstream.Output) -> Bool)?, receiveCompletion: ((Subscribers.Completion<Publishers.Breakpoint<Upstream>.Failure>) -> Bool)?)",
      "desc": "Creates a breakpoint publisher with the provided upstream publisher and breakpoint-raising closures."
    },
    {
      "name": "typealias Output",
      "desc": "The kind of values published by this publisher."
    },
    {
      "name": "typealias Failure",
      "desc": "The kind of errors this publisher might publish."
    },
    {
      "name": "let upstream: Upstream",
      "desc": "The publisher from which this publisher receives elements."
    },
    {
      "name": "let receiveSubscription: ((Subscription) -> Bool)?",
      "desc": "A closure that executes when the publisher receives a subscription, and can raise a debugger signal by returning a true Boolean value."
    },
    {
      "name": "let receiveOutput: ((Upstream.Output) -> Bool)?",
      "desc": "A closure that executes when the publisher receives output from the upstream publisher, and can raise a debugger signal by returning a true Boolean value."
    },
    {
      "name": "let receiveCompletion: ((Subscribers.Completion<Publishers.Breakpoint<Upstream>.Failure>) -> Bool)?",
      "desc": "A closure that executes when the publisher receives completion, and can raise a debugger signal by returning a true Boolean value."
    }
  ],
  "declaration": "struct Breakpoint<Upstream> where Upstream : Publisher",
  "conformsTo": [
    "Publisher"
  ]
}