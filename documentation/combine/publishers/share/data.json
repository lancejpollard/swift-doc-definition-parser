{
  "path": "/documentation/combine/publishers/share",
  "type": "Class",
  "name": "Publishers.Share",
  "desc": "A publisher that shares the output of an upstream publisher with multiple subscribers.",
  "items": [
    {
      "name": "init(upstream: Upstream)",
      "desc": "Creates a publisher that shares the output of an upstream publisher with multiple subscribers."
    },
    {
      "name": "typealias Output",
      "desc": "The kind of values published by this publisher."
    },
    {
      "name": "typealias Failure",
      "desc": "The kind of errors this publisher might publish."
    },
    {
      "name": "let upstream: Upstream",
      "desc": "The publisher from which this publisher receives elements."
    },
    {
      "name": "static func == (Publishers.Share<Upstream>, Publishers.Share<Upstream>) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two publishers are equivalent."
    },
    {
      "name": "static func != (Self, Self) -> Bool"
    }
  ],
  "declaration": "final class Share<Upstream> where Upstream : Publisher",
  "conformsTo": [
    "Equatable",
    "Publisher"
  ]
}