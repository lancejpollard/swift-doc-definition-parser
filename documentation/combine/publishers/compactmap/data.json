{
  "path": "/documentation/combine/publishers/compactmap",
  "type": "Structure",
  "name": "Publishers.CompactMap",
  "desc": "A publisher that republishes all non-nil results of calling a closure with each received element.",
  "items": [
    {
      "name": "init(upstream: Upstream, transform: (Upstream.Output) -> Output?)",
      "desc": "Creates a publisher that republishes all non-nil results of calling a closure with each received element."
    },
    {
      "name": "struct Output",
      "desc": "A publisher that publishes elements specified by a range in the sequence of published elements."
    },
    {
      "name": "typealias Failure",
      "desc": "The kind of errors this publisher might publish."
    },
    {
      "name": "let upstream: Upstream",
      "desc": "The publisher from which this publisher receives elements."
    },
    {
      "name": "let transform: (Upstream.Output) -> Output?",
      "desc": "A closure that receives values from the upstream publisher and returns optional values."
    }
  ],
  "declaration": "struct CompactMap<Upstream, Output> where Upstream : Publisher",
  "conformsTo": [
    "Publisher"
  ]
}