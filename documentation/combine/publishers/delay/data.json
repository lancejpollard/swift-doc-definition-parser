{
  "path": "/documentation/combine/publishers/delay",
  "type": "Structure",
  "name": "Publishers.Delay",
  "desc": "A publisher that delays delivery of elements and completion to the downstream receiver.",
  "items": [
    {
      "name": "init(upstream: Upstream, interval: Context.SchedulerTimeType.Stride, tolerance: Context.SchedulerTimeType.Stride, scheduler: Context, options: Context.SchedulerOptions?)",
      "desc": "Creates a publisher that delays delivery of elements and completion to the downstream receiver."
    },
    {
      "name": "typealias Output",
      "desc": "The kind of values published by this publisher."
    },
    {
      "name": "typealias Failure",
      "desc": "The kind of errors this publisher might publish."
    },
    {
      "name": "let upstream: Upstream",
      "desc": "The publisher from which this publisher receives its elements."
    },
    {
      "name": "let interval: Context.SchedulerTimeType.Stride",
      "desc": "The amount of time to delay."
    },
    {
      "name": "let tolerance: Context.SchedulerTimeType.Stride",
      "desc": "The allowed tolerance in firing delayed events."
    },
    {
      "name": "let scheduler: Context",
      "desc": "The scheduler to deliver the delayed events."
    },
    {
      "name": "let options: Context.SchedulerOptions?",
      "desc": "Options relevant to the schedulerâ€™s behavior."
    }
  ],
  "declaration": "struct Delay<Upstream, Context> where Upstream : Publisher, Context : Scheduler",
  "conformsTo": [
    "Publisher"
  ]
}