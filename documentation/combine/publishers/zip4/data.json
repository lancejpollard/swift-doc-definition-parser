{
  "path": "/documentation/combine/publishers/zip4",
  "type": "Structure",
  "name": "Publishers.Zip4",
  "desc": "A publisher created by applying the zip function to four upstream publishers.",
  "items": [
    {
      "name": "init(A, B, C, D)",
      "desc": "Creates a publisher created by applying the zip function to four upstream publishers."
    },
    {
      "name": "typealias Output",
      "desc": "The kind of values published by this publisher."
    },
    {
      "name": "typealias Failure",
      "desc": "The kind of errors this publisher might publish."
    },
    {
      "name": "let a: A",
      "desc": "A publisher to zip."
    },
    {
      "name": "let b: B",
      "desc": "A second publisher to zip."
    },
    {
      "name": "let c: C",
      "desc": "A third publisher to zip."
    },
    {
      "name": "let d: D",
      "desc": "A fourth publisher to zip."
    },
    {
      "name": "static func == (Publishers.Zip4<A, B, C, D>, Publishers.Zip4<A, B, C, D>) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two publishers are equivalent."
    },
    {
      "name": "static func != (Self, Self) -> Bool"
    }
  ],
  "declaration": "struct Zip4<A, B, C, D> where A : Publisher, B : Publisher, C : Publisher, D : Publisher, A.Failure == B.Failure, B.Failure == C.Failure, C.Failure == D.Failure",
  "conformsTo": [
    "Equatable",
    "Publisher"
  ]
}