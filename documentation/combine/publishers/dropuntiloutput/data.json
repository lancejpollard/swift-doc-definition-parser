{
  "path": "/documentation/combine/publishers/dropuntiloutput",
  "type": "Structure",
  "name": "Publishers.DropUntilOutput",
  "desc": "A publisher that ignores elements from the upstream publisher until it receives an element from second publisher.",
  "items": [
    {
      "name": "init(upstream: Upstream, other: Other)",
      "desc": "Creates a publisher that ignores elements from the upstream publisher until it receives an element from another publisher."
    },
    {
      "name": "typealias Output",
      "desc": "The kind of values published by this publisher."
    },
    {
      "name": "typealias Failure",
      "desc": "The kind of errors this publisher might publish."
    },
    {
      "name": "let upstream: Upstream",
      "desc": "The publisher from which this publisher receives its elements."
    },
    {
      "name": "let other: Other",
      "desc": "A publisher to monitor for its first emitted element."
    },
    {
      "name": "static func == (Publishers.DropUntilOutput<Upstream, Other>, Publishers.DropUntilOutput<Upstream, Other>) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two publishers are equivalent."
    },
    {
      "name": "static func != (Self, Self) -> Bool"
    }
  ],
  "declaration": "struct DropUntilOutput<Upstream, Other> where Upstream : Publisher, Other : Publisher, Upstream.Failure == Other.Failure",
  "conformsTo": [
    "Equatable",
    "Publisher"
  ]
}