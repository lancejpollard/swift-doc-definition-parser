{
  "path": "/documentation/combine/subscriber",
  "type": "Protocol",
  "name": "Subscriber",
  "desc": "A protocol that declares a type that can receive input from a publisher.",
  "items": [
    {
      "name": "associatedtype Input",
      "desc": "The kind of values this subscriber receives."
    },
    {
      "name": "associatedtype Failure : Error",
      "desc": "The kind of errors this subscriber might receive."
    },
    {
      "name": "func receive(Self.Input) -> Subscribers.Demand",
      "desc": "Tells the subscriber that the publisher has produced an element."
    },
    {
      "name": "func receive() -> Subscribers.Demand",
      "desc": "Tells the subscriber that a publisher of void elements is ready to receive further requests."
    },
    {
      "name": "func receive(subscription: Subscription)",
      "desc": "Tells the subscriber that it has successfully subscribed to the publisher and may request items."
    },
    {
      "name": "func receive(completion: Subscribers.Completion<Self.Failure>)",
      "desc": "Tells the subscriber that the publisher has completed publishing, either normally or with an error."
    },
    {
      "name": "enum Completion",
      "desc": "A signal that a publisher doesnâ€™t produce additional elements, either due to normal completion or an error."
    }
  ],
  "declaration": "protocol Subscriber : CustomCombineIdentifierConvertible",
  "inheritsFrom": [
    "CustomCombineIdentifierConvertible"
  ]
}