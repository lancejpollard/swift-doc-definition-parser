{
  "path": "/documentation/Combine/ObservableObject",
  "type": "Protocol",
  "name": "ObservableObject",
  "desc": "A type of object with a publisher that emits before the object has changed.",
  "items": [
    {
      "name": "var objectWillChange: Self.ObjectWillChangePublisher",
      "desc": "A publisher that emits before the object has changed."
    },
    {
      "name": "associatedtype ObjectWillChangePublisher : Publisher = ObservableObjectPublisher",
      "desc": "The type of publisher that emits before the object has changed."
    }
  ],
  "declaration": "protocol ObservableObject : AnyObject"
}