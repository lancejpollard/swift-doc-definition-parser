{
  "path": "/documentation/swiftui/alignment",
  "type": "Structure",
  "name": "Alignment",
  "desc": "An alignment in both axes.",
  "items": [
    {
      "name": "static let topLeading: Alignment",
      "desc": "A guide marking the top and leading edges of the view."
    },
    {
      "name": "static let top: Alignment",
      "desc": "A guide marking the top edge of the view."
    },
    {
      "name": "static let topTrailing: Alignment",
      "desc": "A guide marking the top and trailing edges of the view."
    },
    {
      "name": "static let leading: Alignment",
      "desc": "A guide marking the leading edge of the view."
    },
    {
      "name": "static let center: Alignment",
      "desc": "A guide marking the center of the view."
    },
    {
      "name": "static let trailing: Alignment",
      "desc": "A guide marking the trailing edge of the view."
    },
    {
      "name": "static let bottomTrailing: Alignment",
      "desc": "A guide marking the bottom and trailing edges of the view."
    },
    {
      "name": "static let bottom: Alignment",
      "desc": "A guide marking the bottom edge of the view."
    },
    {
      "name": "static let bottomLeading: Alignment",
      "desc": "A guide marking the bottom and leading edges of the view."
    },
    {
      "name": "init(horizontal: HorizontalAlignment, vertical: VerticalAlignment)",
      "desc": "Creates an instance with the given horizontal and vertical alignments."
    },
    {
      "name": "var horizontal: HorizontalAlignment",
      "desc": "The alignment on the horizontal axis."
    },
    {
      "name": "var vertical: VerticalAlignment",
      "desc": "The alignment on the vertical axis."
    },
    {
      "name": "static func == (Alignment, Alignment) -> Bool",
      "desc": "Indicates whether two alignments are equal."
    },
    {
      "name": "static func != (Self, Self) -> Bool",
      "desc": "Indicates whether two alignments are unequal."
    }
  ],
  "declaration": "@frozen struct Alignment",
  "conformsTo": [
    "Equatable",
    "Sendable"
  ]
}