{
  "path": "/documentation/swiftui/font/textstyle",
  "type": "Enumeration",
  "name": "Font.TextStyle",
  "desc": "A dynamic text style to use for fonts.",
  "items": [
    {
      "name": "case body",
      "desc": "The font used for body text."
    },
    {
      "name": "case callout",
      "desc": "The font used for callouts."
    },
    {
      "name": "case caption",
      "desc": "The font used for standard captions."
    },
    {
      "name": "case caption2",
      "desc": "The font used for alternate captions."
    },
    {
      "name": "case footnote",
      "desc": "The font used in footnotes."
    },
    {
      "name": "case headline",
      "desc": "The font used for headings."
    },
    {
      "name": "case largeTitle",
      "desc": "The font style for large titles."
    },
    {
      "name": "case subheadline",
      "desc": "The font used for subheadings."
    },
    {
      "name": "case title",
      "desc": "The font used for first level hierarchical headings."
    },
    {
      "name": "case title2",
      "desc": "The font used for second level hierarchical headings."
    },
    {
      "name": "case title3",
      "desc": "The font used for third level hierarchical headings."
    },
    {
      "name": "static var allCases: [Font.TextStyle]",
      "desc": "A collection of all values of this type."
    },
    {
      "name": "typealias AllCases",
      "desc": "A type that can represent a collection of all values of this type."
    },
    {
      "name": "static func == (Font.TextStyle, Font.TextStyle) -> Bool",
      "desc": "Indicates whether two text styles are equal."
    },
    {
      "name": "static func != (Self, Self) -> Bool",
      "desc": "Indicates whether two text styles are unequal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the text style by passing them into the given hash function."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hashed value of the text style."
    }
  ],
  "declaration": "enum TextStyle",
  "conformsTo": [
    "CaseIterable",
    "Equatable",
    "Hashable"
  ]
}