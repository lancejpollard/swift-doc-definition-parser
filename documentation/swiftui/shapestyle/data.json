{
  "path": "/documentation/swiftui/shapestyle",
  "type": "Protocol",
  "name": "ShapeStyle",
  "desc": "A color or pattern to use when rendering a shape.",
  "items": [
    {
      "name": "static var black: Color",
      "desc": "A black color suitable for use in UI elements."
    },
    {
      "name": "static var blue: Color",
      "desc": "A context-dependent blue color suitable for use in UI elements."
    },
    {
      "name": "static var brown: Color",
      "desc": "A context-dependent brown color suitable for use in UI elements."
    },
    {
      "name": "static var clear: Color",
      "desc": "A clear color suitable for use in UI elements."
    },
    {
      "name": "static var cyan: Color",
      "desc": "A context-dependent cyan color suitable for use in UI elements."
    },
    {
      "name": "static var gray: Color",
      "desc": "A context-dependent gray color suitable for use in UI elements."
    },
    {
      "name": "static var green: Color",
      "desc": "A context-dependent green color suitable for use in UI elements."
    },
    {
      "name": "static var indigo: Color",
      "desc": "A context-dependent indigo color suitable for use in UI elements."
    },
    {
      "name": "static var mint: Color",
      "desc": "A context-dependent mint color suitable for use in UI elements."
    },
    {
      "name": "static var orange: Color",
      "desc": "A context-dependent orange color suitable for use in UI elements."
    },
    {
      "name": "static var pink: Color",
      "desc": "A context-dependent pink color suitable for use in UI elements."
    },
    {
      "name": "static var purple: Color",
      "desc": "A context-dependent purple color suitable for use in UI elements."
    },
    {
      "name": "static var red: Color",
      "desc": "A context-dependent red color suitable for use in UI elements."
    },
    {
      "name": "static var teal: Color",
      "desc": "A context-dependent teal color suitable for use in UI elements."
    },
    {
      "name": "static var white: Color",
      "desc": "A white color suitable for use in UI elements."
    },
    {
      "name": "static var yellow: Color",
      "desc": "A context-dependent yellow color suitable for use in UI elements."
    },
    {
      "name": "static func angularGradient(Gradient, center: UnitPoint, startAngle: Angle, endAngle: Angle) -> AngularGradient",
      "desc": "An angular gradient, which applies the color function as the angle changes between the start and end angles, and anchored to a relative center point within the filled shape."
    },
    {
      "name": "static func angularGradient(colors: [Color], center: UnitPoint, startAngle: Angle, endAngle: Angle) -> AngularGradient",
      "desc": "An angular gradient defined by a collection of colors."
    },
    {
      "name": "static func angularGradient(stops: [Gradient.Stop], center: UnitPoint, startAngle: Angle, endAngle: Angle) -> AngularGradient",
      "desc": "An angular gradient defined by a collection of color stops."
    },
    {
      "name": "static func conicGradient(Gradient, center: UnitPoint, angle: Angle) -> AngularGradient",
      "desc": "A conic gradient that completes a full turn, optionally starting from a given angle and anchored to a relative center point within the filled shape."
    },
    {
      "name": "static func conicGradient(colors: [Color], center: UnitPoint, angle: Angle) -> AngularGradient",
      "desc": "A conic gradient defined by a collection of colors that completes a full turn."
    },
    {
      "name": "static func conicGradient(stops: [Gradient.Stop], center: UnitPoint, angle: Angle) -> AngularGradient",
      "desc": "A conic gradient defined by a collection of color stops that completes a full turn."
    },
    {
      "name": "static func ellipticalGradient(Gradient, center: UnitPoint, startRadiusFraction: CGFloat, endRadiusFraction: CGFloat) -> EllipticalGradient",
      "desc": "A radial gradient that draws an ellipse."
    },
    {
      "name": "static func ellipticalGradient(colors: [Color], center: UnitPoint, startRadiusFraction: CGFloat, endRadiusFraction: CGFloat) -> EllipticalGradient",
      "desc": "A radial gradient that draws an ellipse defined by a collection of colors."
    },
    {
      "name": "static func ellipticalGradient(stops: [Gradient.Stop], center: UnitPoint, startRadiusFraction: CGFloat, endRadiusFraction: CGFloat) -> EllipticalGradient",
      "desc": "A radial gradient that draws an ellipse defined by a collection of color stops."
    },
    {
      "name": "static func linearGradient(Gradient, startPoint: UnitPoint, endPoint: UnitPoint) -> LinearGradient",
      "desc": "A linear gradient."
    },
    {
      "name": "static func linearGradient(colors: [Color], startPoint: UnitPoint, endPoint: UnitPoint) -> LinearGradient",
      "desc": "A linear gradient defined by a collection of colors."
    },
    {
      "name": "static func linearGradient(stops: [Gradient.Stop], startPoint: UnitPoint, endPoint: UnitPoint) -> LinearGradient",
      "desc": "A linear gradient defined by a collection of color stops."
    },
    {
      "name": "static func radialGradient(Gradient, center: UnitPoint, startRadius: CGFloat, endRadius: CGFloat) -> RadialGradient",
      "desc": "A radial gradient."
    },
    {
      "name": "static func radialGradient(colors: [Color], center: UnitPoint, startRadius: CGFloat, endRadius: CGFloat) -> RadialGradient",
      "desc": "A radial gradient defined by a collection of colors."
    },
    {
      "name": "static func radialGradient(stops: [Gradient.Stop], center: UnitPoint, startRadius: CGFloat, endRadius: CGFloat) -> RadialGradient",
      "desc": "A radial gradient defined by a collection of color stops."
    },
    {
      "name": "static var ultraThinMaterial: Material",
      "desc": "A mostly translucent material."
    },
    {
      "name": "static var thinMaterial: Material",
      "desc": "A material that’s more translucent than opaque."
    },
    {
      "name": "static var regularMaterial: Material",
      "desc": "A material that’s somewhat translucent."
    },
    {
      "name": "static var thickMaterial: Material",
      "desc": "A material that’s more opaque than translucent."
    },
    {
      "name": "static var ultraThickMaterial: Material",
      "desc": "A mostly opaque material."
    },
    {
      "name": "static var bar: Material",
      "desc": "A material matching the style of system toolbars."
    },
    {
      "name": "static func image(Image, sourceRect: CGRect, scale: CGFloat) -> ImagePaint",
      "desc": "A shape style that fills a shape by repeating a region of an image."
    },
    {
      "name": "static var primary: HierarchicalShapeStyle",
      "desc": "A shape style that maps to the first level of the current content style."
    },
    {
      "name": "static var secondary: HierarchicalShapeStyle",
      "desc": "A shape style that maps to the second level of the current content style."
    },
    {
      "name": "static var tertiary: HierarchicalShapeStyle",
      "desc": "A shape style that maps to the third level of the current content style."
    },
    {
      "name": "static var quaternary: HierarchicalShapeStyle",
      "desc": "A shape style that maps to the fourth level of the current content style."
    },
    {
      "name": "static var foreground: ForegroundStyle",
      "desc": "The foreground style in the current context."
    },
    {
      "name": "static var background: BackgroundStyle",
      "desc": "The background style in the current context."
    },
    {
      "name": "static var selection: SelectionShapeStyle",
      "desc": "A style used to visually indicate selection following platform conventional colors and behaviors."
    },
    {
      "name": "static var separator: SeparatorShapeStyle",
      "desc": "A style appropriate for foreground separator or border lines."
    },
    {
      "name": "static var tint: TintShapeStyle",
      "desc": "A style that reflects the current tint color."
    },
    {
      "name": "func `in`(CGRect) -> some ShapeStyle",
      "desc": "Maps a shape style’s unit-space coordinates to the absolute coordinates of a given rectangle."
    },
    {
      "name": "var body: _ShapeView<Rectangle, Self>",
      "desc": "A rectangular view that’s filled with the shape style."
    }
  ],
  "declaration": "protocol ShapeStyle"
}