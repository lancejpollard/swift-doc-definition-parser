{
  "path": "/documentation/SwiftUI/UIHostingController",
  "type": "Class",
  "name": "UIHostingController",
  "desc": "A UIKit view controller that manages a SwiftUI view hierarchy.",
  "items": [
    {
      "name": "init(rootView: Content)",
      "desc": "Creates a hosting controller object that wraps the specified SwiftUI view."
    },
    {
      "name": "init?(coder: NSCoder, rootView: Content)",
      "desc": "Creates a hosting controller object from an archive and the specified SwiftUI view."
    },
    {
      "name": "init?(coder: NSCoder)",
      "desc": "Creates a hosting controller object from the contents of the specified archive."
    },
    {
      "name": "var rootView: Content",
      "desc": "The root view of the SwiftUI view hierarchy managed by this view controller."
    },
    {
      "name": "func loadView()"
    },
    {
      "name": "func viewWillAppear(Bool)",
      "desc": "Notifies the view controller that its view is about to be added to a view hierarchy."
    },
    {
      "name": "func viewDidAppear(Bool)",
      "desc": "Notifies the view controller that its view has been added to a view hierarchy."
    },
    {
      "name": "func viewWillDisappear(Bool)",
      "desc": "Notifies the view controller that its view will be removed from a view hierarchy."
    },
    {
      "name": "func viewDidDisappear(Bool)"
    },
    {
      "name": "func willMove(toParent: UIViewController?)"
    },
    {
      "name": "func didMove(toParent: UIViewController?)"
    },
    {
      "name": "func viewWillTransition(to: CGSize, with: UIViewControllerTransitionCoordinator)"
    },
    {
      "name": "func viewWillLayoutSubviews()"
    },
    {
      "name": "func target(forAction: Selector, withSender: Any?) -> Any?"
    },
    {
      "name": "func sizeThatFits(in: CGSize) -> CGSize",
      "desc": "Calculates and returns the most appropriate size for the current view."
    },
    {
      "name": "var preferredStatusBarStyle: UIStatusBarStyle",
      "desc": "The preferred status bar style for the view controller."
    },
    {
      "name": "var preferredStatusBarUpdateAnimation: UIStatusBarAnimation",
      "desc": "The animation style to use when hiding or showing the status bar for this view controller."
    },
    {
      "name": "var prefersStatusBarHidden: Bool",
      "desc": "A Boolean value that indicates whether the view controller prefers the status bar to be hidden or shown."
    },
    {
      "name": "var childForStatusBarHidden: UIViewController?"
    },
    {
      "name": "func preferredContentSizeDidChange(forChildContentContainer: UIContentContainer)"
    },
    {
      "name": "var preferredUserInterfaceStyle: UIUserInterfaceStyle",
      "desc": "The preferred interface style for this view controller."
    },
    {
      "name": "var isModalInPresentation: Bool"
    },
    {
      "name": "var keyCommands: [UIKeyCommand]?"
    }
  ],
  "declaration": "class UIHostingController<Content> where Content : View",
  "inheritsFrom": [
    "UIViewController"
  ],
  "conformsTo": [
    "CVarArg",
    "CustomDebugStringConvertible",
    "CustomStringConvertible",
    "Equatable",
    "Hashable",
    "NSCoding",
    "NSExtensionRequestHandling",
    "NSObjectProtocol",
    "NSTouchBarProvider",
    "UIActivityItemsConfigurationProviding",
    "UIAppearanceContainer",
    "UIContentContainer",
    "UIFocusEnvironment",
    "UIPasteConfigurationSupporting",
    "UIResponderStandardEditActions",
    "UIStateRestoring",
    "UITraitEnvironment",
    "UIUserActivityRestoring"
  ]
}