{
  "path": "/documentation/swiftui/label",
  "type": "Structure",
  "name": "Label",
  "desc": "A standard label for user interface items, consisting of an icon with a title.",
  "items": [
    {
      "name": "init(LocalizedStringKey, image: String)",
      "desc": "Creates a label with an icon image and a title generated from a localized string."
    },
    {
      "name": "init<S>(S, image: String)",
      "desc": "Creates a label with an icon image and a title generated from a string."
    },
    {
      "name": "init(LocalizedStringKey, systemImage: String)",
      "desc": "Creates a label with a system icon image and a title generated from a localized string."
    },
    {
      "name": "init<S>(S, systemImage: String)",
      "desc": "Creates a label with a system icon image and a title generated from a string."
    },
    {
      "name": "init(title: () -> Title, icon: () -> Icon)",
      "desc": "Creates a label with a custom title and icon."
    },
    {
      "name": "init(LabelStyleConfiguration)",
      "desc": "Creates a label representing the configuration of a style."
    },
    {
      "name": "struct LabelStyleConfiguration",
      "desc": "The properties of a label."
    },
    {
      "name": "init(ApplicationToken)",
      "desc": "Creates a label representing a family activity application."
    },
    {
      "name": "init(WebDomainToken)",
      "desc": "Creates a label representing a family activity web domain."
    },
    {
      "name": "init(ActivityCategoryToken)",
      "desc": "Creates a label representing a family activity category."
    },
    {
      "name": "func labelStyle<S>(S) -> some View",
      "desc": "Sets the style for labels within this view."
    },
    {
      "name": "protocol LabelStyle",
      "desc": "A type that applies a custom appearance to all labels within a view."
    },
    {
      "name": "var body: some View",
      "desc": "The content and behavior of the view."
    },
    {
      "name": "typealias Body",
      "desc": "The type of view representing the body of this view."
    }
  ],
  "declaration": "struct Label<Title, Icon> where Title : View, Icon : View",
  "conformsTo": [
    "View"
  ]
}