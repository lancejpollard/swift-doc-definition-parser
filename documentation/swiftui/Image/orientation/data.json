{
  "path": "/documentation/swiftui/image/orientation",
  "type": "Enumeration",
  "name": "Image.Orientation",
  "desc": "The orientation of an image.",
  "items": [
    {
      "name": "case up",
      "desc": "A value that indicates the original pixel data matches the image’s intended display orientation."
    },
    {
      "name": "case down",
      "desc": "A value that indicates a 180° rotation of the image from the orientation of its original pixel data."
    },
    {
      "name": "case left",
      "desc": "A value that indicates a 90° counterclockwise rotation from the orientation of its original pixel data."
    },
    {
      "name": "case right",
      "desc": "A value that indicates a 90° clockwise rotation of the image from the orientation of its original pixel data."
    },
    {
      "name": "case upMirrored",
      "desc": "A value that indicates a horizontal flip of the image from the orientation of its original pixel data."
    },
    {
      "name": "case downMirrored",
      "desc": "A value that indicates a vertical flip of the image from the orientation of its original pixel data."
    },
    {
      "name": "case leftMirrored",
      "desc": "A value that indicates a 90° clockwise rotation and horizontal flip of the image from the orientation of its original pixel data."
    },
    {
      "name": "case rightMirrored",
      "desc": "A value that indicates a 90° counterclockwise rotation and horizontal flip from the orientation of its original pixel data."
    },
    {
      "name": "static var allCases: [Image.Orientation]",
      "desc": "A collection of all values of this type."
    },
    {
      "name": "typealias AllCases",
      "desc": "A type that can represent a collection of all values of this type."
    },
    {
      "name": "init?(rawValue: UInt8)",
      "desc": "Creates a new instance with the specified raw value."
    },
    {
      "name": "var rawValue: UInt8",
      "desc": "The corresponding value of the raw type."
    },
    {
      "name": "typealias RawValue",
      "desc": "The raw type that can be used to represent all values of the conforming type."
    },
    {
      "name": "static func == (Image, Image) -> Bool",
      "desc": "Indicates whether two images are equal."
    },
    {
      "name": "static func != (Self, Self) -> Bool",
      "desc": "Indicates whether two orientations are unequal."
    }
  ],
  "declaration": "@frozen enum Orientation",
  "conformsTo": [
    "CaseIterable",
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}