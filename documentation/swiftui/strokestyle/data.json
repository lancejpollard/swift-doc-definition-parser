{
  "path": "/documentation/SwiftUI/StrokeStyle",
  "type": "Structure",
  "name": "StrokeStyle",
  "desc": "The characteristics of a stroke that traces a path.",
  "items": [
    {
      "name": "init(lineWidth: CGFloat, lineCap: CGLineCap, lineJoin: CGLineJoin, miterLimit: CGFloat, dash: [CGFloat], dashPhase: CGFloat)",
      "desc": "Creates a new stroke style from the given components."
    },
    {
      "name": "var lineWidth: CGFloat",
      "desc": "The width of the stroked path."
    },
    {
      "name": "var lineCap: CGLineCap",
      "desc": "The endpoint style of a line."
    },
    {
      "name": "var lineJoin: CGLineJoin",
      "desc": "The join type of a line."
    },
    {
      "name": "var miterLimit: CGFloat",
      "desc": "A threshold used to determine whether to use a bevel instead of a miter at a join."
    },
    {
      "name": "var dash: [CGFloat]",
      "desc": "The lengths of painted and unpainted segments used to make a dashed line."
    },
    {
      "name": "var dashPhase: CGFloat",
      "desc": "How far into the dash pattern the line starts."
    },
    {
      "name": "var animatableData: StrokeStyle.AnimatableData",
      "desc": "The data to animate."
    },
    {
      "name": "typealias AnimatableData",
      "desc": "The type defining the data to animate."
    },
    {
      "name": "static func == (StrokeStyle, StrokeStyle) -> Bool",
      "desc": "Indicates whether two stroke styles are equal."
    },
    {
      "name": "static func != (Self, Self) -> Bool",
      "desc": "Indicates whether two stroke styles are unequal."
    }
  ],
  "declaration": "@frozen struct StrokeStyle",
  "conformsTo": [
    "Animatable",
    "Equatable",
    "Sendable"
  ]
}