{
  "path": "/documentation/swiftui/list",
  "type": "Structure",
  "name": "List",
  "desc": "A container that presents rows of data arranged in a single column, optionally providing the ability to select one or more members.",
  "items": [
    {
      "name": "init(content: () -> Content)",
      "desc": "Creates a list with the given content."
    },
    {
      "name": "init(selection: Binding<SelectionValue?>?, content: () -> Content)",
      "desc": "Creates a list with the given content that supports selecting a single row."
    },
    {
      "name": "init(selection: Binding<Set<SelectionValue>>?, content: () -> Content)",
      "desc": "Creates a list with the given content that supports selecting multiple rows."
    },
    {
      "name": "init<RowContent>(Range<Int>, rowContent: (Int) -> RowContent)",
      "desc": "Creates a list that computes its views on demand over a constant range."
    },
    {
      "name": "init<RowContent>(Range<Int>, selection: Binding<SelectionValue?>?, rowContent: (Int) -> RowContent)",
      "desc": "Creates a list that computes its views on demand over a constant range, optionally allowing users to select a single row."
    },
    {
      "name": "init<RowContent>(Range<Int>, selection: Binding<Set<SelectionValue>>?, rowContent: (Int) -> RowContent)",
      "desc": "Creates a list that computes its views on demand over a constant range, optionally allowing users to select multiple rows."
    },
    {
      "name": "init<Data, ID, RowContent>(Data, id: KeyPath<Data.Element, ID>, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a list that identifies its rows based on a key path to the identifier of the underlying data."
    },
    {
      "name": "init<Data, ID, RowContent>(Data, id: KeyPath<Data.Element, ID>, selection: Binding<SelectionValue?>?, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a list that identifies its rows based on a key path to the identifier of the underlying data, optionally allowing users to select a single row."
    },
    {
      "name": "init<Data, ID, RowContent>(Data, id: KeyPath<Data.Element, ID>, selection: Binding<Set<SelectionValue>>?, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a list that identifies its rows based on a key path to the identifier of the underlying data, optionally allowing users to select multiple rows."
    },
    {
      "name": "init<Data, RowContent>(Data, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a list that computes its rows on demand from an underlying collection of identifiable data."
    },
    {
      "name": "init<Data, RowContent>(Data, selection: Binding<SelectionValue?>?, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a list that computes its rows on demand from an underlying collection of identifiable data, optionally allowing users to select a single row."
    },
    {
      "name": "init<Data, RowContent>(Data, selection: Binding<Set<SelectionValue>>?, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a list that computes its rows on demand from an underlying collection of identifiable data, optionally allowing users to select multiple rows."
    },
    {
      "name": "init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a list that identifies its rows based on a key path to the identifier of the underlying data."
    },
    {
      "name": "init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, selection: Binding<SelectionValue?>?, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a list that identifies its rows based on a key path to the identifier of the underlying data, optionally allowing users to select a single row."
    },
    {
      "name": "init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, selection: Binding<Set<SelectionValue>>?, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a list that identifies its rows based on a key path to the identifier of the underlying data, optionally allowing users to select multiple rows."
    },
    {
      "name": "init<Data, RowContent>(Binding<Data>, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a list that computes its rows on demand from an underlying collection of identifiable data."
    },
    {
      "name": "init<Data, RowContent>(Binding<Data>, selection: Binding<SelectionValue?>?, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a list that computes its rows on demand from an underlying collection of identifiable data, optionally allowing users to select a single row."
    },
    {
      "name": "init<Data, RowContent>(Binding<Data>, selection: Binding<Set<SelectionValue>>?, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a list that computes its rows on demand from an underlying collection of identifiable data, optionally allowing users to select multiple rows."
    },
    {
      "name": "init<Data, ID, RowContent>(Data, id: KeyPath<Data.Element, ID>, children: KeyPath<Data.Element, Data?>, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a hierarchical list that identifies its rows based on a key path to the identifier of the underlying data."
    },
    {
      "name": "init<Data, ID, RowContent>(Data, id: KeyPath<Data.Element, ID>, children: KeyPath<Data.Element, Data?>, selection: Binding<SelectionValue?>?, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a hierarchical list that identifies its rows based on a key path to the identifier of the underlying data, optionally allowing users to select a single row."
    },
    {
      "name": "init<Data, ID, RowContent>(Data, id: KeyPath<Data.Element, ID>, children: KeyPath<Data.Element, Data?>, selection: Binding<Set<SelectionValue>>?, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a hierarchical list that identifies its rows based on a key path to the identifier of the underlying data, optionally allowing users to select multiple rows."
    },
    {
      "name": "init<Data, RowContent>(Data, children: KeyPath<Data.Element, Data?>, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a hierarchical list that computes its rows on demand from an underlying collection of identifiable data."
    },
    {
      "name": "init<Data, RowContent>(Data, children: KeyPath<Data.Element, Data?>, selection: Binding<SelectionValue?>?, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a hierarchical list that computes its rows on demand from an underlying collection of identifiable data, optionally allowing users to select a single row."
    },
    {
      "name": "init<Data, RowContent>(Data, children: KeyPath<Data.Element, Data?>, selection: Binding<Set<SelectionValue>>?, rowContent: (Data.Element) -> RowContent)",
      "desc": "Creates a hierarchical list that computes its rows on demand from an underlying collection of identifiable data, optionally allowing users to select multiple rows."
    },
    {
      "name": "init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, children: WritableKeyPath<Data.Element, Data?>, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a hierarchical list that identifies its rows based on a key path to the identifier of the underlying data."
    },
    {
      "name": "init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, children: WritableKeyPath<Data.Element, Data?>, selection: Binding<SelectionValue?>?, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a hierarchical list that identifies its rows based on a key path to the identifier of the underlying data, optionally allowing users to select a single row."
    },
    {
      "name": "init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, children: WritableKeyPath<Data.Element, Data?>, selection: Binding<Set<SelectionValue>>?, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a hierarchical list that identifies its rows based on a key path to the identifier of the underlying data, optionally allowing users to select multiple rows."
    },
    {
      "name": "init<Data, RowContent>(Binding<Data>, children: WritableKeyPath<Data.Element, Data?>, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a hierarchical list that computes its rows on demand from a binding to an underlying collection of identifiable data."
    },
    {
      "name": "init<Data, RowContent>(Binding<Data>, children: WritableKeyPath<Data.Element, Data?>, selection: Binding<SelectionValue?>?, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a hierarchical list that computes its rows on demand from a binding to an underlying collection of identifiable data, optionally allowing users to select a single row."
    },
    {
      "name": "init<Data, RowContent>(Binding<Data>, children: WritableKeyPath<Data.Element, Data?>, selection: Binding<Set<SelectionValue>>?, rowContent: (Binding<Data.Element>) -> RowContent)",
      "desc": "Creates a hierarchical list that computes its rows on demand from a binding to an underlying collection of identifiable data, optionally allowing users to select multiple rows."
    },
    {
      "name": "func listStyle<S>(S) -> some View",
      "desc": "Sets the style for lists within this view."
    },
    {
      "name": "protocol ListStyle",
      "desc": "A protocol that describes the behavior and appearance of a list."
    },
    {
      "name": "var body: some View",
      "desc": "The content of the list."
    },
    {
      "name": "typealias Body",
      "desc": "The type of view representing the body of this view."
    }
  ],
  "declaration": "struct List<SelectionValue, Content> where SelectionValue : Hashable, Content : View",
  "conformsTo": [
    "View"
  ]
}