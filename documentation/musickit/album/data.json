{
  "path": "/documentation/musickit/album",
  "type": "Structure",
  "name": "Album",
  "desc": "A music item that represents an album.",
  "items": [
    {
      "name": "static func == (Album, Album) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    },
    {
      "name": "var appearsOn: MusicItemCollection<Playlist>?",
      "desc": "A collection of playlists that include tracks from the album."
    },
    {
      "name": "var artistName: String",
      "desc": "The artist’s name."
    },
    {
      "name": "var artistURL: URL?",
      "desc": "The artist’s URL."
    },
    {
      "name": "var artists: MusicItemCollection<Artist>?",
      "desc": "The album’s associated artists."
    },
    {
      "name": "var artwork: Artwork?",
      "desc": "The album artwork."
    },
    {
      "name": "var contentRating: ContentRating?",
      "desc": "The rating of the content."
    },
    {
      "name": "var copyright: String?",
      "desc": "The copyright text for the album."
    },
    {
      "name": "var editorialNotes: EditorialNotes?",
      "desc": "The notes about the album that appear in the Music app."
    },
    {
      "name": "var genreNames: [String]",
      "desc": "The names of the album’s associated genres."
    },
    {
      "name": "var genres: MusicItemCollection<Genre>?",
      "desc": "The genres for the album."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "let id: MusicItemID",
      "desc": "The unique identifier for the album."
    },
    {
      "name": "var isCompilation: Bool?",
      "desc": "A Boolean value that indicates whether the album is a compilation."
    },
    {
      "name": "var isComplete: Bool?",
      "desc": "A Boolean value that indicates whether the album is complete."
    },
    {
      "name": "var isSingle: Bool?",
      "desc": "A Boolean value that indicates whether the album consists of a single song."
    },
    {
      "name": "var otherVersions: MusicItemCollection<Album>?",
      "desc": "A collection of other versions of the album."
    },
    {
      "name": "var playParameters: PlayParameters?",
      "desc": "The parameters to use to play the tracks of the album."
    },
    {
      "name": "var recordLabelName: String?",
      "desc": "The name of the album’s record label."
    },
    {
      "name": "var recordLabels: MusicItemCollection<RecordLabel>?",
      "desc": "The record labels for the album."
    },
    {
      "name": "var relatedAlbums: MusicItemCollection<Album>?",
      "desc": "A collection of related albums."
    },
    {
      "name": "var relatedVideos: MusicItemCollection<MusicVideo>?",
      "desc": "A collection of the album’s music videos."
    },
    {
      "name": "var releaseDate: Date?",
      "desc": "The release date (or expected prerelease date) for the album."
    },
    {
      "name": "var title: String",
      "desc": "The title of the album."
    },
    {
      "name": "var trackCount: Int",
      "desc": "The number of tracks for the album."
    },
    {
      "name": "var tracks: MusicItemCollection<Track>?",
      "desc": "The tracks on the album."
    },
    {
      "name": "var upc: String?",
      "desc": "The universal product code (UPC) for the album."
    },
    {
      "name": "var url: URL?",
      "desc": "The URL for the album."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "typealias ID",
      "desc": "A type representing the stable identity of the entity associated with an instance."
    }
  ],
  "declaration": "struct Album",
  "conformsTo": [
    "CustomDebugStringConvertible",
    "CustomStringConvertible",
    "Decodable",
    "Encodable",
    "Equatable",
    "FilterableMusicItem",
    "Hashable",
    "Identifiable",
    "MusicCatalogSearchable",
    "MusicItem",
    "MusicPropertyContainer",
    "PlayableMusicItem"
  ]
}