{
  "path": "/documentation/musickit/artist",
  "type": "Structure",
  "name": "Artist",
  "desc": "A music item that represents an artist.",
  "items": [
    {
      "name": "static func == (Artist, Artist) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    },
    {
      "name": "var albums: MusicItemCollection<Album>?",
      "desc": "The artist’s associated albums."
    },
    {
      "name": "var appearsOnAlbums: MusicItemCollection<Album>?",
      "desc": "A collection of albums from other artists that this artist appears on."
    },
    {
      "name": "var compilationAlbums: MusicItemCollection<Album>?",
      "desc": "A collection of compilation albums that include tracks by the artist."
    },
    {
      "name": "var editorialNotes: EditorialNotes?",
      "desc": "The notes about the artist that appear in the Music catalog."
    },
    {
      "name": "var featuredAlbums: MusicItemCollection<Album>?",
      "desc": "A collection of featured albums of the artist."
    },
    {
      "name": "var featuredPlaylists: MusicItemCollection<Playlist>?",
      "desc": "A collection of the artist’s associated playlists."
    },
    {
      "name": "var fullAlbums: MusicItemCollection<Album>?",
      "desc": "A collection of the artist’s full-release albums."
    },
    {
      "name": "var genreNames: [String]?",
      "desc": "The names of this artist’s associated genres."
    },
    {
      "name": "var genres: MusicItemCollection<Genre>?",
      "desc": "The artist’s associated genres."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "let id: MusicItemID",
      "desc": "The unique identifier for the artist."
    },
    {
      "name": "var latestRelease: Album?",
      "desc": "The artist’s most recent album."
    },
    {
      "name": "var liveAlbums: MusicItemCollection<Album>?",
      "desc": "A collection of the artist’s live albums."
    },
    {
      "name": "var musicVideos: MusicItemCollection<MusicVideo>?",
      "desc": "The artist’s associated music videos."
    },
    {
      "name": "var name: String",
      "desc": "The name of the artist."
    },
    {
      "name": "var playlists: MusicItemCollection<Playlist>?",
      "desc": "The artist’s associated playlists."
    },
    {
      "name": "var similarArtists: MusicItemCollection<Artist>?",
      "desc": "A collection of artists similar to this artist."
    },
    {
      "name": "var singles: MusicItemCollection<Album>?",
      "desc": "A collection of the artist’s associated albums in the singles category."
    },
    {
      "name": "var station: Station?",
      "desc": "The artist’s associated station."
    },
    {
      "name": "var topMusicVideos: MusicItemCollection<MusicVideo>?",
      "desc": "A collection of the artist’s top music videos."
    },
    {
      "name": "var topSongs: MusicItemCollection<Song>?",
      "desc": "A collection of the artist’s top songs."
    },
    {
      "name": "var url: URL?",
      "desc": "The URL for the artist."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "typealias ID",
      "desc": "A type representing the stable identity of the entity associated with an instance."
    }
  ],
  "declaration": "struct Artist",
  "conformsTo": [
    "CustomDebugStringConvertible",
    "CustomStringConvertible",
    "Decodable",
    "Encodable",
    "Equatable",
    "FilterableMusicItem",
    "Hashable",
    "Identifiable",
    "MusicCatalogSearchable",
    "MusicItem",
    "MusicPropertyContainer"
  ]
}