{
  "path": "/documentation/MusicKit/Artwork",
  "type": "Structure",
  "name": "Artwork",
  "desc": "An object that represents artwork for a music item.",
  "items": [
    {
      "name": "static func == (Artwork, Artwork) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    },
    {
      "name": "let alternateText: String?",
      "desc": "A textual description for the image."
    },
    {
      "name": "let backgroundColor: CGColor?",
      "desc": "The average background color of the image."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "let maximumHeight: Int",
      "desc": "The maximum height available for the image."
    },
    {
      "name": "let maximumWidth: Int",
      "desc": "The maximum width available for the image."
    },
    {
      "name": "let primaryTextColor: CGColor?",
      "desc": "The primary text color to use when displaying the background color."
    },
    {
      "name": "let quaternaryTextColor: CGColor?",
      "desc": "The final posttertiary text color to use when displaying the background color."
    },
    {
      "name": "let secondaryTextColor: CGColor?",
      "desc": "The secondary text color to use when displaying the background color."
    },
    {
      "name": "let tertiaryTextColor: CGColor?",
      "desc": "The tertiary text color to use when displaying the background color."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "func url(width: Int, height: Int) -> URL?",
      "desc": "Returns a URL to request the image asset for a specified width and height."
    }
  ],
  "declaration": "struct Artwork",
  "conformsTo": [
    "CustomDebugStringConvertible",
    "CustomStringConvertible",
    "Decodable",
    "Encodable",
    "Equatable",
    "Hashable"
  ]
}