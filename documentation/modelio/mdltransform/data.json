{
  "path": "/documentation/modelio/mdltransform",
  "type": "Class",
  "name": "MDLTransform",
  "desc": "A description of the local coordinate space transformations for a 3D object.",
  "items": [
    {
      "name": "init(matrix: matrix_float4x4)",
      "desc": "Initializes a transform object with the specified transform matrix."
    },
    {
      "name": "init(transformComponent: MDLTransformComponent)",
      "desc": "Initializes a transform object to match the specified transform component."
    },
    {
      "name": "init(matrix: matrix_float4x4, resetsTransform: Bool)"
    },
    {
      "name": "init(transformComponent: MDLTransformComponent, resetsTransform: Bool)"
    },
    {
      "name": "var translation: vector_float3",
      "desc": "The x-, y-, and z-axis offsets of the transform relative to its parent coordinate space."
    },
    {
      "name": "var rotation: vector_float3",
      "desc": "The orientation, as a vector of Euler angles in radians, of the transform relative to its parent coordinate space."
    },
    {
      "name": "var scale: vector_float3",
      "desc": "The x-, y-, and z-axis scale factors of the transform relative to its parent coordinate space."
    },
    {
      "name": "var shear: vector_float3",
      "desc": "The x-, y-, and z-axis shear factors of the transform relative to its parent coordinate space."
    },
    {
      "name": "func setIdentity()",
      "desc": "Sets all factors of the transform to those of the identity transformation."
    },
    {
      "name": "func translation(atTime: TimeInterval) -> vector_float3",
      "desc": "Returns the x-, y-, and z-axis offsets of the transform relative to its parent coordinate space, as of the specified time sample."
    },
    {
      "name": "func setTranslation(vector_float3, forTime: TimeInterval)",
      "desc": "Sets the x-, y-, and z-axis offsets of the transform for the specified time sample."
    },
    {
      "name": "func rotation(atTime: TimeInterval) -> vector_float3",
      "desc": "Returns the orientation of the transform relative to its parent coordinate space, as of the specified time sample."
    },
    {
      "name": "func rotationMatrix(atTime: TimeInterval) -> matrix_float4x4",
      "desc": "Returns the orientation of the transform as a rotation matrix, as of the specified time sample."
    },
    {
      "name": "func setRotation(vector_float3, forTime: TimeInterval)",
      "desc": "Sets the orientation of the transform for the specified time sample."
    },
    {
      "name": "func scale(atTime: TimeInterval) -> vector_float3",
      "desc": "Returns the x-, y-, and z-axis scale factors of the transform relative to its parent coordinate space, as of the specified time sample."
    },
    {
      "name": "func setScale(vector_float3, forTime: TimeInterval)",
      "desc": "Sets the x-, y-, and z-axis scale factors of the transform for the specified time sample."
    },
    {
      "name": "func shear(atTime: TimeInterval) -> vector_float3",
      "desc": "Returns the x-, y-, and z-axis shear factors of the transform relative to its parent coordinate space, as of the specified time sample."
    },
    {
      "name": "func setShear(vector_float3, forTime: TimeInterval)",
      "desc": "Sets the x-, y-, and z-axis shear factors of the transform for the specified time sample."
    },
    {
      "name": "func setMatrix(matrix_float4x4, forTime: TimeInterval)"
    },
    {
      "name": "init()"
    }
  ],
  "declaration": "class MDLTransform : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "MDLTransformComponent",
    "NSCopying"
  ]
}