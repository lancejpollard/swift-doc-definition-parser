{
  "path": "/documentation/modelio/mdlmaterialproperty",
  "type": "Class",
  "name": "MDLMaterialProperty",
  "desc": "A definition for one specific aspect of the rendering parameters for a material.",
  "items": [
    {
      "name": "init(name: String, semantic: MDLMaterialSemantic)",
      "desc": "Initializes a material property without a value."
    },
    {
      "name": "init(name: String, semantic: MDLMaterialSemantic, string: String?)",
      "desc": "Initializes a material property with a string value."
    },
    {
      "name": "init(name: String, semantic: MDLMaterialSemantic, url: URL?)",
      "desc": "Initializes a material property with a URL value."
    },
    {
      "name": "init(name: String, semantic: MDLMaterialSemantic, textureSampler: MDLTextureSampler?)",
      "desc": "Initializes a material property with a texture sampler object."
    },
    {
      "name": "init(name: String, semantic: MDLMaterialSemantic, color: CGColor)",
      "desc": "Initializes a material property with a color value."
    },
    {
      "name": "init(name: String, semantic: MDLMaterialSemantic, float: Float)",
      "desc": "Initializes a material property with a scalar value."
    },
    {
      "name": "init(name: String, semantic: MDLMaterialSemantic, float2: vector_float2)",
      "desc": "Initializes a material property with a 2-component vector value."
    },
    {
      "name": "init(name: String, semantic: MDLMaterialSemantic, float3: vector_float3)",
      "desc": "Initializes a material property with a 3-component vector value."
    },
    {
      "name": "init(name: String, semantic: MDLMaterialSemantic, float4: vector_float4)",
      "desc": "Initializes a material property with a 4-component vector value."
    },
    {
      "name": "init(name: String, semantic: MDLMaterialSemantic, matrix4x4: matrix_float4x4)",
      "desc": "Initializes a material property with a 4 x 4 matrix value."
    },
    {
      "name": "var name: String",
      "desc": "A descriptive name for the material property."
    },
    {
      "name": "var semantic: MDLMaterialSemantic",
      "desc": "The semantic meaning for the material property’s value."
    },
    {
      "name": "var type: MDLMaterialPropertyType",
      "desc": "The data type stored in the material property’s value."
    },
    {
      "name": "var stringValue: String?",
      "desc": "The string value for the material."
    },
    {
      "name": "var urlValue: URL?",
      "desc": "The URL value for the material property—typically, the URL to a texture image."
    },
    {
      "name": "var textureSamplerValue: MDLTextureSampler?",
      "desc": "A texture sampler object that provides the texture image value for the material property."
    },
    {
      "name": "var color: CGColor?",
      "desc": "The color value for the material property."
    },
    {
      "name": "var floatValue: Float",
      "desc": "The scalar floating-point value for the material property."
    },
    {
      "name": "var float2Value: vector_float2",
      "desc": "The 2-component floating-point vector value for the material property."
    },
    {
      "name": "var float3Value: vector_float3",
      "desc": "The 3-component floating-point vector value for the material property."
    },
    {
      "name": "var float4Value: vector_float4",
      "desc": "The 4-component floating-point vector value for the material property."
    },
    {
      "name": "var matrix4x4: matrix_float4x4",
      "desc": "The 4 x 4 floating-point matrix value for the material property."
    },
    {
      "name": "func setProperties(MDLMaterialProperty)",
      "desc": "Sets the material property’s attributes to those of the specified material property."
    },
    {
      "name": "enum MDLMaterialSemantic",
      "desc": "Options for the semantic use of a material property’s value in rendering a particular surface appearance; used by the semantic property."
    },
    {
      "name": "enum MDLMaterialPropertyType",
      "desc": "Options for the data type of a material property, used by the type property."
    },
    {
      "name": "var luminance: Float"
    }
  ],
  "declaration": "class MDLMaterialProperty : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "MDLNamed",
    "NSCopying"
  ]
}