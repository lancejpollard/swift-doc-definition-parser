{
  "path": "/documentation/mapkit/mkmapviewdelegate",
  "type": "Protocol",
  "name": "MKMapViewDelegate",
  "desc": "Optional methods that you use to receive map-related update messages.",
  "items": [
    {
      "name": "func mapView(MKMapView, regionWillChangeAnimated: Bool)",
      "desc": "Tells the delegate that the region displayed by the map view is about to change."
    },
    {
      "name": "func mapViewDidChangeVisibleRegion(MKMapView)",
      "desc": "Tells the delegate that the map view's visible region changed."
    },
    {
      "name": "func mapView(MKMapView, regionDidChangeAnimated: Bool)",
      "desc": "Tells the delegate that the region displayed by the map view just changed."
    },
    {
      "name": "func mapViewWillStartLoadingMap(MKMapView)",
      "desc": "Tells the delegate that the specified map view is about to retrieve some map data."
    },
    {
      "name": "func mapViewDidFinishLoadingMap(MKMapView)",
      "desc": "Tells the delegate that the specified map view successfully loaded the needed map data."
    },
    {
      "name": "func mapViewDidFailLoadingMap(MKMapView, withError: Error)",
      "desc": "Tells the delegate that the specified view was unable to load the map data."
    },
    {
      "name": "func mapViewWillStartRenderingMap(MKMapView)",
      "desc": "Tells the delegate that the map view is about to start rendering some of its tiles."
    },
    {
      "name": "func mapViewDidFinishRenderingMap(MKMapView, fullyRendered: Bool)",
      "desc": "Tells the delegate that the map view has finished rendering all visible tiles."
    },
    {
      "name": "func mapViewWillStartLocatingUser(MKMapView)",
      "desc": "Tells the delegate that the map view will start tracking the user’s position."
    },
    {
      "name": "func mapViewDidStopLocatingUser(MKMapView)",
      "desc": "Tells the delegate that the map view stopped tracking the user’s location."
    },
    {
      "name": "func mapView(MKMapView, didUpdate: MKUserLocation)",
      "desc": "Tells the delegate that the location of the user was updated."
    },
    {
      "name": "func mapView(MKMapView, didFailToLocateUserWithError: Error)",
      "desc": "Tells the delegate that an attempt to locate the user’s position failed."
    },
    {
      "name": "func mapView(MKMapView, didChange: MKUserTrackingMode, animated: Bool)",
      "desc": "Tells the delegate that the user tracking mode changed."
    },
    {
      "name": "func mapView(MKMapView, viewFor: MKAnnotation) -> MKAnnotationView?",
      "desc": "Returns the view associated with the specified annotation object."
    },
    {
      "name": "func mapView(MKMapView, didAdd: [MKAnnotationView])",
      "desc": "Tells the delegate that one or more annotation views were added to the map."
    },
    {
      "name": "func mapView(MKMapView, annotationView: MKAnnotationView, calloutAccessoryControlTapped: UIControl)",
      "desc": "Tells the delegate that the user tapped one of the annotation view’s accessory buttons."
    },
    {
      "name": "func mapView(MKMapView, clusterAnnotationForMemberAnnotations: [MKAnnotation]) -> MKClusterAnnotation",
      "desc": "Asks the delegate to provide a cluster annotation object for the specified annotations."
    },
    {
      "name": "func mapView(MKMapView, annotationView: MKAnnotationView, didChange: MKAnnotationView.DragState, fromOldState: MKAnnotationView.DragState)",
      "desc": "Tells the delegate that the drag state of one of its annotation views changed."
    },
    {
      "name": "func mapView(MKMapView, didSelect: MKAnnotationView)",
      "desc": "Tells the delegate that one of its annotation views was selected."
    },
    {
      "name": "func mapView(MKMapView, didDeselect: MKAnnotationView)",
      "desc": "Tells the delegate that one of its annotation views was deselected."
    },
    {
      "name": "func mapView(MKMapView, rendererFor: MKOverlay) -> MKOverlayRenderer",
      "desc": "Asks the delegate for a renderer object to use when drawing the specified overlay."
    },
    {
      "name": "func mapView(MKMapView, didAdd: [MKOverlayRenderer])",
      "desc": "Tells the delegate that one or more renderer objects were added to the map."
    }
  ],
  "declaration": "protocol MKMapViewDelegate",
  "inheritsFrom": [
    "NSObjectProtocol"
  ]
}