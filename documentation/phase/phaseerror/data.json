{
  "path": "/documentation/phase/phaseerror",
  "type": "Structure",
  "name": "PHASEError",
  "desc": "An error that PHASE reports.",
  "items": [
    {
      "name": "init(Code, userInfo: [String : Any])",
      "desc": "Initializes an error."
    },
    {
      "name": "enum PHASEError.Code",
      "desc": "Codes that identify errors in PHASE."
    },
    {
      "name": "static func == (PHASEError, PHASEError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    },
    {
      "name": "static func != (PHASEError, PHASEError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values aren't equal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of a value by feeding them into the given hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "The error user info dictionary."
    },
    {
      "name": "var userInfo: [String : Any]",
      "desc": "The user info dictionary."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A string that contains a description of the error."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "A unique error domain for the framework."
    },
    {
      "name": "var code: Code",
      "desc": "A code that indicates the cause of the error."
    },
    {
      "name": "var errorCode: Int",
      "desc": "An integer value for an error."
    },
    {
      "name": "static var initializeFailed: PHASEError.Code",
      "desc": "An error that indicates the engine failed to initialize."
    }
  ],
  "declaration": "struct PHASEError"
}