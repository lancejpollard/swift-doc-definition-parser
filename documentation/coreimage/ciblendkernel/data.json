{
  "path": "/documentation/coreimage/ciblendkernel",
  "type": "Class",
  "name": "CIBlendKernel",
  "desc": "A GPU-based image processing routine that is optimized for blending two images.",
  "items": [
    {
      "name": "func apply(foreground: CIImage, background: CIImage) -> CIImage?",
      "desc": "Creates a new image using the blend kernel and specified foreground and background images."
    },
    {
      "name": "class var clear: CIBlendKernel",
      "desc": "A blend kernel that returns a clear color."
    },
    {
      "name": "class var color: CIBlendKernel",
      "desc": "A blend kernel that uses the luminance values of the background with the hue and saturation values of the foreground image."
    },
    {
      "name": "class var colorBurn: CIBlendKernel",
      "desc": "A blend kernel that darkens the background image samples to reflect the foreground image samples."
    },
    {
      "name": "class var colorDodge: CIBlendKernel",
      "desc": "A blend kernel that brightens the background image samples to reflect the foreground image samples."
    },
    {
      "name": "class var componentAdd: CIBlendKernel",
      "desc": "A blend kernel that adds color components to achieve a brightening effect."
    },
    {
      "name": "class var componentMax: CIBlendKernel",
      "desc": "A blend kernel that creates an image using the maximum values of two input images."
    },
    {
      "name": "class var componentMin: CIBlendKernel",
      "desc": "A blend kernel that creates an image using the minimum values of two input images."
    },
    {
      "name": "class var componentMultiply: CIBlendKernel",
      "desc": "A blend kernel that multiplies the color components of its input images."
    },
    {
      "name": "class var darken: CIBlendKernel",
      "desc": "A blend kernel that creates an image using the darker values of two input images."
    },
    {
      "name": "class var darkerColor: CIBlendKernel",
      "desc": "A blend kernel that creates an image using the darker color of two input images."
    },
    {
      "name": "class var destination: CIBlendKernel",
      "desc": "A blend kernel that returns the background input image."
    },
    {
      "name": "class var destinationAtop: CIBlendKernel",
      "desc": "A blend kernel that places the background over the foreground and crops based on the visibility of the foreground."
    },
    {
      "name": "class var destinationIn: CIBlendKernel",
      "desc": "A blend kernel that places the background over the foreground and crops based on the visibility of both."
    },
    {
      "name": "class var destinationOut: CIBlendKernel",
      "desc": "A blend kernel that uses the background image to define what to take out of the foreground image."
    },
    {
      "name": "class var destinationOver: CIBlendKernel",
      "desc": "A blend kernel that places the background image over the input foreground image."
    },
    {
      "name": "class var difference: CIBlendKernel",
      "desc": "A blend kernel that creates an image using the difference between the background and foreground images."
    },
    {
      "name": "class var divide: CIBlendKernel",
      "desc": "A blend kernel that divides the background image sample color with the foreground image sample color."
    },
    {
      "name": "class var exclusion: CIBlendKernel",
      "desc": "A blend kernel that produces an effect similar to difference blending but with lower contrast."
    },
    {
      "name": "class var exclusiveOr: CIBlendKernel",
      "desc": "A blend kernel that returns either the foreground or background image if the other contains a clear color."
    },
    {
      "name": "class var hardLight: CIBlendKernel",
      "desc": "A blend kernel that either multiplies or screens colors, depending on the source image sample color."
    },
    {
      "name": "class var hardMix: CIBlendKernel",
      "desc": "A blend kernel that adds two images together, setting each color channel value to either 0 or 1."
    },
    {
      "name": "class var hue: CIBlendKernel",
      "desc": "A blend kernel that uses the luminance and saturation values of the background image with the hue of the foreground image."
    },
    {
      "name": "class var lighten: CIBlendKernel",
      "desc": "A blend kernel that creates an image using the lighter values of two input images."
    },
    {
      "name": "class var lighterColor: CIBlendKernel",
      "desc": "A blend kernel that creates an image using the lighter color of two input images."
    },
    {
      "name": "class var linearBurn: CIBlendKernel",
      "desc": "A blend kernel that darkens the background image samples to reflect the foreground image samples while also increasing contrast."
    },
    {
      "name": "class var linearDodge: CIBlendKernel",
      "desc": "A blend kernel that lightens the background image samples to reflect the foreground image samples while also increasing contrast."
    },
    {
      "name": "class var linearLight: CIBlendKernel",
      "desc": "A blend kernel that burns or dodges colors by changing brightness, depending on the blend color."
    },
    {
      "name": "class var luminosity: CIBlendKernel",
      "desc": "A blend kernel that uses the hue and saturation of the background image with the luminance of the foreground image."
    },
    {
      "name": "class var multiply: CIBlendKernel",
      "desc": "A blend kernel that multiplies the background image sample color with the foreground image sample color."
    },
    {
      "name": "class var overlay: CIBlendKernel",
      "desc": "A blend kernel that either multiplies or screens the foreground image samples with the background image samples, depending on the background color."
    },
    {
      "name": "class var pinLight: CIBlendKernel",
      "desc": "A blend kernel that conditionally replaces background image samples with source image samples depending on the brightness of the source image samples."
    },
    {
      "name": "class var saturation: CIBlendKernel",
      "desc": "A blend kernel that uses the luminance and hue values of the background image with the saturation of the foreground image."
    },
    {
      "name": "class var screen: CIBlendKernel",
      "desc": "A blend kernel that multiplies the inverse of the foreground image samples with the inverse of the background image samples."
    },
    {
      "name": "class var softLight: CIBlendKernel",
      "desc": "A blend kernel that either darkens or lightens colors, depending on the foreground image sample color."
    },
    {
      "name": "class var source: CIBlendKernel",
      "desc": "A blend kernel that returns the foreground input image."
    },
    {
      "name": "class var sourceAtop: CIBlendKernel",
      "desc": "A blend kernel that places the foreground over the background and crops based on the visibility of the background."
    },
    {
      "name": "class var sourceIn: CIBlendKernel",
      "desc": "A blend kernel that places the foreground over the background and crops based on the visibility of both."
    },
    {
      "name": "class var sourceOut: CIBlendKernel",
      "desc": "A blend kernel that uses the foreground image to define what to take out of the background image."
    },
    {
      "name": "class var sourceOver: CIBlendKernel",
      "desc": "A blend kernel that places the foreground image over the input background image."
    },
    {
      "name": "class var subtract: CIBlendKernel",
      "desc": "A blend kernel that subtracts the background image sample color from the foreground image sample color."
    },
    {
      "name": "class var vividLight: CIBlendKernel",
      "desc": "A blend kernel that burns or dodges colors by changing contrast, depending on the blend color."
    },
    {
      "name": "func apply(foreground: CIImage, background: CIImage, colorSpace: CGColorSpace) -> CIImage?"
    }
  ],
  "declaration": "class CIBlendKernel : CIColorKernel",
  "inheritsFrom": [
    "CIColorKernel"
  ]
}