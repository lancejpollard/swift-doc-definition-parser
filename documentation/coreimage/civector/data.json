{
  "path": "/documentation/coreimage/civector",
  "type": "Class",
  "name": "CIVector",
  "desc": "A container for coordinate values, direction vectors, matrices, and other non-scalar values, typically used in Core Image for filter parameters.",
  "items": [
    {
      "name": "init(values: UnsafePointer<CGFloat>, count: Int)",
      "desc": "Initializes a vector with the provided values."
    },
    {
      "name": "init(x: CGFloat)",
      "desc": "Initializes the first position of a vector with the provided values."
    },
    {
      "name": "init(x: CGFloat, y: CGFloat)",
      "desc": "Initializes the first two positions of a vector with the provided values."
    },
    {
      "name": "init(x: CGFloat, y: CGFloat, z: CGFloat)",
      "desc": "Initializes the first three positions of a vector with the provided values."
    },
    {
      "name": "init(x: CGFloat, y: CGFloat, z: CGFloat, w: CGFloat)",
      "desc": "Initializes four positions of a vector with the provided values."
    },
    {
      "name": "init(string: String)",
      "desc": "Initializes a vector with values provided in a string representation."
    },
    {
      "name": "init(cgAffineTransform: CGAffineTransform)",
      "desc": "Initializes a vector that is initialized with values provided by a CGAffineTransform structure."
    },
    {
      "name": "init(cgPoint: CGPoint)",
      "desc": "Initializes a vector that is initialized with values provided by a CGPoint structure."
    },
    {
      "name": "init(cgRect: CGRect)",
      "desc": "Initializes a vector that is initialized with values provided by a CGRect structure."
    },
    {
      "name": "func value(at: Int) -> CGFloat",
      "desc": "Returns a value from a specific position in the vector."
    },
    {
      "name": "var count: Int",
      "desc": "The number of items in the vector."
    },
    {
      "name": "var x: CGFloat",
      "desc": "The value located in the first position in the vector."
    },
    {
      "name": "var y: CGFloat",
      "desc": "The value located in the second position in the vector."
    },
    {
      "name": "var z: CGFloat",
      "desc": "The value located in the third position in the vector."
    },
    {
      "name": "var w: CGFloat",
      "desc": "The value located in the fourth position in the vector."
    },
    {
      "name": "var stringRepresentation: String",
      "desc": "The string representation of the vector."
    },
    {
      "name": "var cgAffineTransformValue: CGAffineTransform",
      "desc": "The values in the vector represented as an affine transform."
    },
    {
      "name": "var cgPointValue: CGPoint",
      "desc": "The values in the vector as a Core Graphics point structure."
    },
    {
      "name": "var cgRectValue: CGRect",
      "desc": "The values in the vector as a Core Graphics rectangle structure."
    }
  ],
  "declaration": "class CIVector : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSSecureCoding"
  ]
}