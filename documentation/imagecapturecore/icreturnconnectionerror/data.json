{
  "path": "/documentation/imagecapturecore/icreturnconnectionerror",
  "type": "Structure",
  "name": "ICReturnConnectionError",
  "desc": "A connection error returned from ImageCaptureCore.",
  "items": [
    {
      "name": "var errorCode: Int",
      "desc": "A code for the error."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "Information about the error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized, human-readable explanation of the error."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The domain for the error."
    },
    {
      "name": "let ICErrorDomain: String",
      "desc": "An error returned by the ImageCaptureCore framework."
    },
    {
      "name": "static var closedSessionSuddenly: ICReturnConnectionError.Code",
      "desc": "Device closed session without request."
    },
    {
      "name": "static var driverExited: ICReturnConnectionError.Code",
      "desc": "Device driver exited without request."
    },
    {
      "name": "static var ejectFailed: ICReturnConnectionError.Code",
      "desc": "Device reports eject has failed."
    },
    {
      "name": "static var ejectedSuddenly: ICReturnConnectionError.Code",
      "desc": "Device ejected without request."
    },
    {
      "name": "static var failedToOpen: ICReturnConnectionError.Code",
      "desc": "Failed to open a connection to the device."
    },
    {
      "name": "static var failedToOpenDevice: ICReturnConnectionError.Code",
      "desc": "Failed to open the device."
    },
    {
      "name": "static var sessionAlreadyOpen: ICReturnConnectionError.Code",
      "desc": "Device reports session is already open."
    },
    {
      "name": "enum ICReturnConnectionError.Code"
    },
    {
      "name": "static func != (ICReturnConnectionError, ICReturnConnectionError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two error values are not equal."
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "static var notAuthorizedToOpenDevice: ICReturnConnectionError.Code"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func == (ICReturnConnectionError, ICReturnConnectionError) -> Bool"
    }
  ],
  "declaration": "struct ICReturnConnectionError"
}