{
  "path": "/documentation/imagecapturecore/icreturndownloaderror",
  "type": "Structure",
  "name": "ICReturnDownloadError",
  "desc": "A download error returned from ImageCaptureCore.",
  "items": [
    {
      "name": "var errorCode: Int",
      "desc": "A code for the error."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "Information about the error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized, human-readable explanation of the error."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The domain for the error."
    },
    {
      "name": "let ICErrorDomain: String",
      "desc": "An error returned by the ImageCaptureCore framework."
    },
    {
      "name": "static var fileWritable: ICReturnDownloadError.Code",
      "desc": "The destination file is not writable."
    },
    {
      "name": "static var pathInvalid: ICReturnDownloadError.Code",
      "desc": "The destination path is invalid."
    },
    {
      "name": "enum ICReturnDownloadError.Code"
    },
    {
      "name": "static func != (ICReturnDownloadError, ICReturnDownloadError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two error values are not equal."
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func == (ICReturnDownloadError, ICReturnDownloadError) -> Bool"
    }
  ],
  "declaration": "struct ICReturnDownloadError"
}