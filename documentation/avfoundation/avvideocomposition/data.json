{
  "path": "/documentation/avfoundation/avvideocomposition",
  "type": "Class",
  "name": "AVVideoComposition",
  "desc": "An object that represents an immutable video composition.",
  "items": [
    {
      "name": "init(propertiesOf: AVAsset)",
      "desc": "Creates a video composition object configured to present the video tracks of the specified asset."
    },
    {
      "name": "init(asset: AVAsset, applyingCIFiltersWithHandler: (AVAsynchronousCIImageFilteringRequest) -> Void)",
      "desc": "Creates a video composition configured to apply Core Image filters to each video frame of the specified asset."
    },
    {
      "name": "class AVAsynchronousCIImageFilteringRequest",
      "desc": "An object that supprts using Core Image filters to process an individual video frame in a video composition."
    },
    {
      "name": "var frameDuration: CMTime",
      "desc": "A time interval for which the video composition should render composed video frames."
    },
    {
      "name": "var renderSize: CGSize",
      "desc": "The size at which the video composition should render."
    },
    {
      "name": "var renderScale: Float",
      "desc": "The scale at which the video composition should render."
    },
    {
      "name": "var animationTool: AVVideoCompositionCoreAnimationTool?",
      "desc": "A video composition tool to use with Core Animation in offline rendering."
    },
    {
      "name": "var customVideoCompositorClass: AVVideoCompositing.Type?",
      "desc": "A custom compositor class to use."
    },
    {
      "name": "var colorPrimaries: String?",
      "desc": "The color primaries used for video composition."
    },
    {
      "name": "var colorTransferFunction: String?",
      "desc": "The transfer function used for video composition."
    },
    {
      "name": "var colorYCbCrMatrix: String?",
      "desc": "The YCbCr matrix used for video composition."
    },
    {
      "name": "func isValid(for: AVAsset?, timeRange: CMTimeRange, validationDelegate: AVVideoCompositionValidationHandling?) -> Bool",
      "desc": "Indicates whether the time ranges of the compositionâ€™s instructions conform to validation requirements."
    },
    {
      "name": "protocol AVVideoCompositionValidationHandling",
      "desc": "Methods you can implement to indicate whether validation of a video composition should continue after specific errors are found."
    },
    {
      "name": "var instructions: [AVVideoCompositionInstructionProtocol]",
      "desc": "The video composition instructions."
    },
    {
      "name": "protocol AVVideoCompositionInstructionProtocol",
      "desc": "A protocol that defines the interface for a video composition instruction."
    },
    {
      "name": "var sourceTrackIDForFrameTiming: CMPersistentTrackID",
      "desc": "An identifier of the source track from which the video composition derives frame timing."
    },
    {
      "name": "var sourceSampleDataTrackIDs: [CMPersistentTrackID]",
      "desc": "The identifiers of source sample data tracks in the composition that the object requires to compose frames."
    }
  ],
  "declaration": "class AVVideoComposition : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSMutableCopying"
  ]
}