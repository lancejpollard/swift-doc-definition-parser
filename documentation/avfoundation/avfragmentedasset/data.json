{
  "path": "/documentation/avfoundation/avfragmentedasset",
  "type": "Class",
  "name": "AVFragmentedAsset",
  "desc": "An asset with a duration that the system can extend without modifying its existing media data.",
  "items": [
    {
      "name": "static var tracks: AVAsyncProperty<Root, [AVFragmentedAssetTrack]>",
      "desc": "The tracks an asset contains."
    },
    {
      "name": "func loadTrack(withTrackID: CMPersistentTrackID, completionHandler: (AVFragmentedAssetTrack?, Error?) -> Void)",
      "desc": "Loads a track that contains the specified identifier."
    },
    {
      "name": "func loadTracks(withMediaType: AVMediaType, completionHandler: ([AVFragmentedAssetTrack]?, Error?) -> Void)",
      "desc": "Loads tracks that contain media of a specified type."
    },
    {
      "name": "func loadTracks(withMediaCharacteristic: AVMediaCharacteristic, completionHandler: ([AVFragmentedAssetTrack]?, Error?) -> Void)",
      "desc": "Loads tracks that contain media of a specified characteristic."
    },
    {
      "name": "var tracks: [AVFragmentedAssetTrack]",
      "desc": "The tracks an asset contains."
    },
    {
      "name": "func track(withTrackID: CMPersistentTrackID) -> AVFragmentedAssetTrack?",
      "desc": "Returns a track that contains the specified identifier."
    },
    {
      "name": "func tracks(withMediaType: AVMediaType) -> [AVFragmentedAssetTrack]",
      "desc": "Returns tracks that present media of a specified type."
    },
    {
      "name": "func tracks(withMediaCharacteristic: AVMediaCharacteristic) -> [AVFragmentedAssetTrack]",
      "desc": "Returns tracks that present media of a specified characteristic."
    }
  ],
  "declaration": "class AVFragmentedAsset : AVURLAsset",
  "inheritsFrom": [
    "AVURLAsset"
  ],
  "conformsTo": [
    "AVFragmentMinding"
  ]
}