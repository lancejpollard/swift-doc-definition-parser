{
  "path": "/documentation/webkit/domrange",
  "type": "Class",
  "name": "DOMRange",
  "desc": "No overview available.",
  "items": [
    {
      "name": "var collapsed: Bool"
    },
    {
      "name": "var commonAncestorContainer: DOMNode!"
    },
    {
      "name": "var endContainer: DOMNode!"
    },
    {
      "name": "var endOffset: Int32"
    },
    {
      "name": "var markupString: String!",
      "desc": "A string in markup format corresponding to the content in the range."
    },
    {
      "name": "var startContainer: DOMNode!"
    },
    {
      "name": "var startOffset: Int32"
    },
    {
      "name": "var text: String!"
    },
    {
      "name": "var webArchive: WebArchive!",
      "desc": "A web archive of the content in the range."
    },
    {
      "name": "func cloneContents() -> DOMDocumentFragment!"
    },
    {
      "name": "func clone() -> DOMRange!"
    },
    {
      "name": "func collapse(Bool)"
    },
    {
      "name": "func compareBoundaryPoints(UInt16, sourceRange: DOMRange!) -> Int16"
    },
    {
      "name": "func compare(DOMNode!) -> Int16"
    },
    {
      "name": "func comparePoint(DOMNode!, offset: Int32) -> Int16"
    },
    {
      "name": "func createContextualFragment(String!) -> DOMDocumentFragment!"
    },
    {
      "name": "func deleteContents()"
    },
    {
      "name": "func detach()"
    },
    {
      "name": "func extractContents() -> DOMDocumentFragment!"
    },
    {
      "name": "func insert(DOMNode!)"
    },
    {
      "name": "func intersects(DOMNode!) -> Bool"
    },
    {
      "name": "func isPoint(inRange: DOMNode!, offset: Int32) -> Bool"
    },
    {
      "name": "func select(DOMNode!)"
    },
    {
      "name": "func selectNodeContents(DOMNode!)"
    },
    {
      "name": "func setEnd(DOMNode!, offset: Int32)"
    },
    {
      "name": "func setEndAfter(DOMNode!)"
    },
    {
      "name": "func setEndBefore(DOMNode!)"
    },
    {
      "name": "func setStart(DOMNode!, offset: Int32)"
    },
    {
      "name": "func setStartAfter(DOMNode!)"
    },
    {
      "name": "func setStartBefore(DOMNode!)"
    },
    {
      "name": "func surroundContents(DOMNode!)"
    },
    {
      "name": "func toString() -> String!"
    }
  ],
  "declaration": "class DOMRange : DOMObject",
  "inheritsFrom": [
    "DOMObject"
  ]
}