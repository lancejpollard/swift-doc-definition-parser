{
  "path": "/documentation/webkit/domdocument",
  "type": "Class",
  "name": "DOMDocument",
  "desc": "No overview available.",
  "items": [
    {
      "name": "var url: String!"
    },
    {
      "name": "var activeElement: DOMElement!"
    },
    {
      "name": "var anchors: DOMHTMLCollection!"
    },
    {
      "name": "var applets: DOMHTMLCollection!"
    },
    {
      "name": "var body: DOMHTMLElement!"
    },
    {
      "name": "var characterSet: String!"
    },
    {
      "name": "var charset: String!"
    },
    {
      "name": "var cookie: String!"
    },
    {
      "name": "var defaultCharset: String!"
    },
    {
      "name": "var defaultView: DOMAbstractView!"
    },
    {
      "name": "var doctype: DOMDocumentType!"
    },
    {
      "name": "var documentElement: DOMElement!"
    },
    {
      "name": "var documentURI: String!"
    },
    {
      "name": "var domain: String!"
    },
    {
      "name": "var forms: DOMHTMLCollection!"
    },
    {
      "name": "var images: DOMHTMLCollection!"
    },
    {
      "name": "var implementation: DOMImplementation!"
    },
    {
      "name": "var inputEncoding: String!"
    },
    {
      "name": "var lastModified: String!"
    },
    {
      "name": "var links: DOMHTMLCollection!"
    },
    {
      "name": "var preferredStylesheetSet: String!"
    },
    {
      "name": "var readyState: String!"
    },
    {
      "name": "var referrer: String!"
    },
    {
      "name": "var selectedStylesheetSet: String!"
    },
    {
      "name": "var styleSheets: DOMStyleSheetList!"
    },
    {
      "name": "var title: String!"
    },
    {
      "name": "var webFrame: WebFrame!",
      "desc": "The web frame associated with the DOM document."
    },
    {
      "name": "var xmlEncoding: String!"
    },
    {
      "name": "var xmlStandalone: Bool"
    },
    {
      "name": "var xmlVersion: String!"
    },
    {
      "name": "func url(withAttributeString: String!) -> URL!",
      "desc": "Constructs a URL given an attribute string."
    },
    {
      "name": "func adoptNode(DOMNode!) -> DOMNode!"
    },
    {
      "name": "func createAttribute(String!) -> DOMAttr!"
    },
    {
      "name": "func createAttributeNS(String!, qualifiedName: String!) -> DOMAttr!"
    },
    {
      "name": "func createCDATASection(String!) -> DOMCDATASection!"
    },
    {
      "name": "func createCSSStyleDeclaration() -> DOMCSSStyleDeclaration!"
    },
    {
      "name": "func createComment(String!) -> DOMComment!"
    },
    {
      "name": "func createDocumentFragment() -> DOMDocumentFragment!"
    },
    {
      "name": "func createElement(String!) -> DOMElement!"
    },
    {
      "name": "func createElementNS(String!, qualifiedName: String!) -> DOMElement!"
    },
    {
      "name": "func createEntityReference(String!) -> DOMEntityReference!"
    },
    {
      "name": "func createEvent(String!) -> DOMEvent!"
    },
    {
      "name": "func createExpression(String!, resolver: DOMXPathNSResolver!) -> DOMXPathExpression!"
    },
    {
      "name": "func createNSResolver(DOMNode!) -> DOMXPathNSResolver!"
    },
    {
      "name": "func createNodeIterator(DOMNode!, whatToShow: UInt32, filter: DOMNodeFilter!, expandEntityReferences: Bool) -> DOMNodeIterator!"
    },
    {
      "name": "func createProcessingInstruction(String!, data: String!) -> DOMProcessingInstruction!"
    },
    {
      "name": "func createRange() -> DOMRange!"
    },
    {
      "name": "func createTextNode(String!) -> DOMText!"
    },
    {
      "name": "func createTreeWalker(DOMNode!, whatToShow: UInt32, filter: DOMNodeFilter!, expandEntityReferences: Bool) -> DOMTreeWalker!"
    },
    {
      "name": "func element(fromPoint: Int32, y: Int32) -> DOMElement!"
    },
    {
      "name": "func evaluate(String!, contextNode: DOMNode!, resolver: DOMXPathNSResolver!, type: UInt16, in: DOMXPathResult!) -> DOMXPathResult!"
    },
    {
      "name": "func execCommand(String!) -> Bool"
    },
    {
      "name": "func execCommand(String!, userInterface: Bool) -> Bool"
    },
    {
      "name": "func execCommand(String!, userInterface: Bool, value: String!) -> Bool"
    },
    {
      "name": "func getComputedStyle(DOMElement!, pseudoElement: String!) -> DOMCSSStyleDeclaration!"
    },
    {
      "name": "func getElementById(String!) -> DOMElement!"
    },
    {
      "name": "func getElementsByClassName(String!) -> DOMNodeList!"
    },
    {
      "name": "func getElementsByName(String!) -> DOMNodeList!"
    },
    {
      "name": "func getElementsByTagName(String!) -> DOMNodeList!"
    },
    {
      "name": "func getElementsByTagNameNS(String!, localName: String!) -> DOMNodeList!"
    },
    {
      "name": "func getMatchedCSSRules(DOMElement!, pseudoElement: String!) -> DOMCSSRuleList!"
    },
    {
      "name": "func getMatchedCSSRules(DOMElement!, pseudoElement: String!, authorOnly: Bool) -> DOMCSSRuleList!"
    },
    {
      "name": "func getOverrideStyle(DOMElement!, pseudoElement: String!) -> DOMCSSStyleDeclaration!"
    },
    {
      "name": "func hasFocus() -> Bool"
    },
    {
      "name": "func `import`(DOMNode!, deep: Bool) -> DOMNode!"
    },
    {
      "name": "func queryCommandEnabled(String!) -> Bool"
    },
    {
      "name": "func queryCommandIndeterm(String!) -> Bool"
    },
    {
      "name": "func queryCommandState(String!) -> Bool"
    },
    {
      "name": "func queryCommandSupported(String!) -> Bool"
    },
    {
      "name": "func queryCommandValue(String!) -> String!"
    },
    {
      "name": "func querySelector(String!) -> DOMElement!"
    },
    {
      "name": "func querySelectorAll(String!) -> DOMNodeList!"
    },
    {
      "name": "func webkitCancelFullScreen()"
    }
  ],
  "declaration": "class DOMDocument : DOMNode",
  "inheritsFrom": [
    "DOMNode"
  ]
}