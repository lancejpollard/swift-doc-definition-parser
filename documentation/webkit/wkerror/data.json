{
  "path": "/documentation/webkit/wkerror",
  "type": "Structure",
  "name": "WKError",
  "desc": "Possible error values that WebKit APIs can return.",
  "items": [
    {
      "name": "static var unknown: WKError.Code",
      "desc": "An error that indicates an unknown issue occurred."
    },
    {
      "name": "static var webContentProcessTerminated: WKError.Code",
      "desc": "An error that indicates the web process that contains the content is no longer running."
    },
    {
      "name": "static var webViewInvalidated: WKError.Code",
      "desc": "An error that indicates the web view was invalidated."
    },
    {
      "name": "static var javaScriptExceptionOccurred: WKError.Code",
      "desc": "An error that indicates a JavaScript exception occurred."
    },
    {
      "name": "static var javaScriptResultTypeIsUnsupported: WKError.Code",
      "desc": "An error that indicates the result of JavaScript execution could not be returned."
    },
    {
      "name": "static var contentRuleListStoreCompileFailed: WKError.Code",
      "desc": "An error that indicates the compilation of a rule list failed."
    },
    {
      "name": "static var contentRuleListStoreLookUpFailed: WKError.Code",
      "desc": "An error that indicates a content rule list data store didnâ€™t find a rule list with the specified identifier."
    },
    {
      "name": "static var contentRuleListStoreRemoveFailed: WKError.Code",
      "desc": "An error that indicates a failure to remove a content rule list from the rule list data store object."
    },
    {
      "name": "static var contentRuleListStoreVersionMismatch: WKError.Code",
      "desc": "An error that indicates the rule list version is outdated and cannot be read."
    },
    {
      "name": "static var attributedStringContentFailedToLoad: WKError.Code",
      "desc": "An error that indicates the failure to navigate to web content from an attributed string."
    },
    {
      "name": "static var attributedStringContentLoadTimedOut: WKError.Code",
      "desc": "An error that indicates a timeout occurred while trying to load web content from an attributed string."
    },
    {
      "name": "static var javaScriptInvalidFrameTarget: WKError.Code",
      "desc": "An error that indicates your content referenced an invalid web frame."
    },
    {
      "name": "static var navigationAppBoundDomain: WKError.Code",
      "desc": "An error that indicates navigation failed due to an app-bound domain restriction."
    },
    {
      "name": "static var javaScriptAppBoundDomain: WKError.Code",
      "desc": "An error that indicates JavaScript execution failed due to an app-bound domain restriction."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The domain for WebKit errors."
    },
    {
      "name": "var errorCode: Int",
      "desc": "The error code."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "A dictionary that contains additional error-related details."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized error string."
    },
    {
      "name": "static func != (WKError, WKError) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are not equal."
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func == (WKError, WKError) -> Bool"
    },
    {
      "name": "enum WKError.Code",
      "desc": "Possible error values that WebKit APIs can return."
    }
  ],
  "declaration": "struct WKError"
}