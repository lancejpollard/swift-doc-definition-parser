{
  "path": "/documentation/webkit/wkwebviewconfiguration",
  "type": "Class",
  "name": "WKWebViewConfiguration",
  "desc": "A collection of properties that you use to initialize a web view.",
  "items": [
    {
      "name": "var websiteDataStore: WKWebsiteDataStore",
      "desc": "The object you use to get and set the site’s cookies and to track the cached data objects."
    },
    {
      "name": "var userContentController: WKUserContentController",
      "desc": "The object that coordinates interactions between your app’s native code and the webpage’s scripts and other content."
    },
    {
      "name": "var processPool: WKProcessPool",
      "desc": "The object that coordinates the processes the web view uses to render its web content and execute scripts."
    },
    {
      "name": "var applicationNameForUserAgent: String?",
      "desc": "The app name that appears in the user agent string."
    },
    {
      "name": "var limitsNavigationsToAppBoundDomains: Bool",
      "desc": "A Boolean value that indicates whether the web view limits navigation to pages within the app’s domain."
    },
    {
      "name": "var preferences: WKPreferences",
      "desc": "The object that manages the preference-related settings for the web view."
    },
    {
      "name": "var defaultWebpagePreferences: WKWebpagePreferences!",
      "desc": "The default preferences to use when loading and rendering content."
    },
    {
      "name": "func setURLSchemeHandler(WKURLSchemeHandler?, forURLScheme: String)",
      "desc": "Registers an object to load resources associated with the specified URL scheme."
    },
    {
      "name": "func urlSchemeHandler(forURLScheme: String) -> WKURLSchemeHandler?",
      "desc": "Returns the currently registered handler object for the specified URL scheme."
    },
    {
      "name": "var ignoresViewportScaleLimits: Bool",
      "desc": "A Boolean value that determines whether a web view allows scaling of the webpage."
    },
    {
      "name": "var suppressesIncrementalRendering: Bool",
      "desc": "A Boolean value that indicates whether the web view suppresses content rendering until the content is fully loaded into memory."
    },
    {
      "name": "var allowsInlineMediaPlayback: Bool",
      "desc": "A Boolean value that indicates whether HTML5 videos play inline or use the native full-screen controller."
    },
    {
      "name": "var allowsAirPlayForMediaPlayback: Bool",
      "desc": "A Boolean value that indicates whether the web view allows media playback over AirPlay."
    },
    {
      "name": "var allowsPictureInPictureMediaPlayback: Bool",
      "desc": "A Boolean value that indicates whether HTML5 videos can play Picture in Picture."
    },
    {
      "name": "var mediaTypesRequiringUserActionForPlayback: WKAudiovisualMediaTypes",
      "desc": "The media types that require a user gesture to begin playing."
    },
    {
      "name": "struct WKAudiovisualMediaTypes",
      "desc": "The media types that require a user gesture to begin playing."
    },
    {
      "name": "var dataDetectorTypes: WKDataDetectorTypes",
      "desc": "The types of data detectors to apply to the web view’s content."
    },
    {
      "name": "struct WKDataDetectorTypes",
      "desc": "The data detector types."
    },
    {
      "name": "var selectionGranularity: WKSelectionGranularity",
      "desc": "The level of granularity with which the user can interactively select web view content."
    },
    {
      "name": "enum WKSelectionGranularity",
      "desc": "The granularity with which the user can select and modify web view content."
    },
    {
      "name": "var userInterfaceDirectionPolicy: WKUserInterfaceDirectionPolicy",
      "desc": "The directionality of user interface elements."
    },
    {
      "name": "enum WKUserInterfaceDirectionPolicy",
      "desc": "The policy that determines the directionality of user interface elements in a web view."
    },
    {
      "name": "var upgradeKnownHostsToHTTPS: Bool"
    }
  ],
  "declaration": "class WKWebViewConfiguration : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSSecureCoding"
  ]
}