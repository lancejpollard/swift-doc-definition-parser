{
  "path": "/documentation/carekit/ockanyoutcomestore",
  "type": "Protocol",
  "name": "OCKAnyOutcomeStore",
  "desc": "A custom store that performs read/write operations on an outcome data type.",
  "items": [
    {
      "name": "func addAnyOutcome(OCKAnyOutcome, callbackQueue: DispatchQueue, completion: OCKResultClosure<OCKAnyOutcome>?)",
      "desc": "Adds an outcome asynchronously to the store."
    },
    {
      "name": "func addAnyOutcomes([OCKAnyOutcome], callbackQueue: DispatchQueue, completion: OCKResultClosure<[OCKAnyOutcome]>?)",
      "desc": "Adds an array of outcomes asynchronously to the store."
    },
    {
      "name": "func updateAnyOutcome(OCKAnyOutcome, callbackQueue: DispatchQueue, completion: OCKResultClosure<OCKAnyOutcome>?)",
      "desc": "Updates an outcome asynchronously in the store."
    },
    {
      "name": "func updateAnyOutcomes([OCKAnyOutcome], callbackQueue: DispatchQueue, completion: OCKResultClosure<[OCKAnyOutcome]>?)",
      "desc": "Updates an array of outcomes asynchronously in the store."
    },
    {
      "name": "func deleteAnyOutcome(OCKAnyOutcome, callbackQueue: DispatchQueue, completion: OCKResultClosure<OCKAnyOutcome>?)",
      "desc": "Deletes an outcome asynchronously from the store."
    },
    {
      "name": "func deleteAnyOutcomes([OCKAnyOutcome], callbackQueue: DispatchQueue, completion: OCKResultClosure<[OCKAnyOutcome]>?)",
      "desc": "Deletes an array of outcomes asynchronously from the store."
    }
  ],
  "declaration": "protocol OCKAnyOutcomeStore",
  "inheritsFrom": [
    "OCKAnyReadOnlyOutcomeStore"
  ]
}