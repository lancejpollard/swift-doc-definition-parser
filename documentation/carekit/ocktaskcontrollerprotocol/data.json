{
  "path": "/documentation/carekit/ocktaskcontrollerprotocol",
  "type": "Protocol",
  "name": "OCKTaskControllerProtocol",
  "desc": "A protocol that tracks and updates the state of a task.",
  "items": [
    {
      "name": "var objectWillChange: CurrentValueSubject<OCKTaskEvents?, Never>",
      "desc": "A publisher that publishes when tasks change in the store."
    },
    {
      "name": "var store: OCKAnyOutcomeStore",
      "desc": "A reference to the store that fetches and updates events."
    },
    {
      "name": "func appendOutcomeValue(withType: OCKOutcomeValueUnderlyingType, at: IndexPath, completion: ((Result<OCKAnyOutcome, Error>) -> Void)?)",
      "desc": "Adds an outcome value to the array of outcomes for an event."
    },
    {
      "name": "func eventFor(indexPath: IndexPath) -> OCKAnyEvent?",
      "desc": "Returns the event at a specific index path from a task view controllerâ€™s collection view."
    },
    {
      "name": "func initiateDeletionForOutcomeValue(atIndex: Int, eventIndexPath: IndexPath, deletionCompletion: ((Result<OCKAnyOutcome, Error>) -> Void)?) -> UIAlertController",
      "desc": "Returns an alert controller with localized text, that confirms deleting an outcome."
    },
    {
      "name": "func initiateDetailsViewController(forIndexPath: IndexPath) -> OCKDetailViewController",
      "desc": "Returns a detail view controller to display, for the task the user selected."
    },
    {
      "name": "func makeOutcomeFor(event: OCKAnyEvent, withValues: [OCKOutcomeValue]) -> OCKAnyOutcome",
      "desc": "Creates and returns an outcome for a specific event."
    },
    {
      "name": "func setEvent(atIndexPath: IndexPath, isComplete: Bool, completion: ((Result<OCKAnyOutcome, Error>) -> Void)?)",
      "desc": "Sets a specific event for a task view controller, and creates an outcome value if the task is complete."
    },
    {
      "name": "func validatedEvent(forIndexPath: IndexPath) -> OCKAnyEvent"
    },
    {
      "name": "func validatedViewModel() -> OCKTaskEvents"
    }
  ],
  "declaration": "protocol OCKTaskControllerProtocol : AnyObject"
}