{
  "path": "/documentation/carekit/ockcareplanquery",
  "type": "Structure",
  "name": "OCKCarePlanQuery",
  "desc": "A query that limits which care plans the store returns, when you are fetching.",
  "items": [
    {
      "name": "init(OCKAnyCarePlanQuery)",
      "desc": "Creates a new care plan query from a specific query."
    },
    {
      "name": "init(dateInterval: DateInterval)",
      "desc": "Creates a care plan query with a specific date interval."
    },
    {
      "name": "init(for: Date)",
      "desc": "Creates a care plan query with a specific date."
    },
    {
      "name": "var patientIDs: [String]",
      "desc": "An array of patient identifiers you can use to match care plans in the query-returned results."
    },
    {
      "name": "var patientVersionIDs: [OCKLocalVersionID]",
      "desc": "An array of patient version identifiers you can use to match care plans in the query-returned results."
    },
    {
      "name": "var patientRemoteIDs: [String]",
      "desc": "An array of patient remote identifiers you can use to match care plans in the query-returned results."
    },
    {
      "name": "var dateInterval: DateInterval?",
      "desc": "A date interval for entities that match the query."
    },
    {
      "name": "var groupIdentifiers: [String]",
      "desc": "An array of group identifers that match the query."
    },
    {
      "name": "var ids: [String]",
      "desc": "An array of unique identifiers that belong to the entities that match the query."
    },
    {
      "name": "var offset: Int",
      "desc": "An integer value that indicates how much to offset the query results, and which can be used to paginate results."
    },
    {
      "name": "var remoteIDs: [String]",
      "desc": "An array of remote IDs for entities that match the query."
    },
    {
      "name": "var tags: [String]",
      "desc": "An array of tags by which to limit the query results."
    },
    {
      "name": "var versionIDs: [OCKLocalVersionID]",
      "desc": "An array of version identifiers by which to limit the query results."
    },
    {
      "name": "var limit: Int?",
      "desc": "The maximum number of results the query returns."
    },
    {
      "name": "var sortDescriptors: [OCKCarePlanSortDescriptor]",
      "desc": "The order in which you want to sort the query results."
    },
    {
      "name": "enum OCKCarePlanSortDescriptor",
      "desc": "The values that indicate how you want to sort queried care plans."
    },
    {
      "name": "init()"
    },
    {
      "name": "init(OCKEntityQuery)"
    },
    {
      "name": "init(id: String)"
    },
    {
      "name": "static func != (OCKCarePlanQuery, OCKCarePlanQuery) -> Bool"
    }
  ],
  "declaration": "struct OCKCarePlanQuery",
  "conformsTo": [
    "Equatable",
    "OCKAnyCarePlanQuery"
  ]
}