{
  "path": "/documentation/carekit/ockevent",
  "type": "Generic Structure",
  "name": "OCKEvent",
  "desc": "An object that represents a single occasion on which a task is scheduled to occur.",
  "items": [
    {
      "name": "init(task: Task, outcome: Outcome?, scheduleEvent: OCKScheduleEvent)",
      "desc": "Creates an event with a task, optional outcome, and schedule event."
    },
    {
      "name": "let task: Task",
      "desc": "The task to which the event belongs."
    },
    {
      "name": "var outcome: Outcome?",
      "desc": "The outcome for this event."
    },
    {
      "name": "let scheduleEvent: OCKScheduleEvent",
      "desc": "The schedule event for this specific task occurrence."
    },
    {
      "name": "enum OCKEventAggregator",
      "desc": "An enumerator that specifies a number of methods to compute a value, given an array of events that occurred on a day."
    }
  ],
  "declaration": "struct OCKEvent<Task, Outcome> where Task : OCKAnyTask, Outcome : OCKAnyOutcome"
}