{
  "path": "/documentation/carekit/ockpatientstore",
  "type": "Protocol",
  "name": "OCKPatientStore",
  "desc": "A store that performs read/write operations on a patient data type.",
  "items": [
    {
      "name": "func addPatient(Self.Patient, callbackQueue: DispatchQueue, completion: OCKResultClosure<Self.Patient>?)",
      "desc": "Adds a patient asynchronously to the store."
    },
    {
      "name": "func addPatients([Self.Patient], callbackQueue: DispatchQueue, completion: OCKResultClosure<[Self.Patient]>?)",
      "desc": "Adds an array of patients asynchronously to the store."
    },
    {
      "name": "func updatePatient(Self.Patient, callbackQueue: DispatchQueue, completion: OCKResultClosure<Self.Patient>?)",
      "desc": "Updates a patient asynchronously in the store."
    },
    {
      "name": "func updatePatients([Self.Patient], callbackQueue: DispatchQueue, completion: OCKResultClosure<[Self.Patient]>?)",
      "desc": "Updates an array of patients asynchronously in the store."
    },
    {
      "name": "func deletePatient(Self.Patient, callbackQueue: DispatchQueue, completion: OCKResultClosure<Self.Patient>?)",
      "desc": "Deletes a patient asynchronously from the store."
    },
    {
      "name": "func deletePatients([Self.Patient], callbackQueue: DispatchQueue, completion: OCKResultClosure<[Self.Patient]>?)",
      "desc": "Deletes an array of patients asynchronously from the store."
    }
  ],
  "declaration": "protocol OCKPatientStore",
  "inheritsFrom": [
    "OCKAnyPatientStore",
    "OCKReadablePatientStore"
  ]
}