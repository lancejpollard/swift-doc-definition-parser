{
  "path": "/documentation/carekit/ocklogitembutton",
  "type": "Class",
  "name": "OCKLogItemButton",
  "desc": "A button that logs a single event.",
  "items": [
    {
      "name": "init()",
      "desc": "Creates a new log item button."
    },
    {
      "name": "let contentStackView: OCKStackView",
      "desc": "A view that contains the button’s content, and arranges its children horizontally."
    },
    {
      "name": "let titleLabel: OCKLabel",
      "desc": "A button label that contains the primary text."
    },
    {
      "name": "let detailLabel: OCKLabel",
      "desc": "A button label that contains supplementary text."
    },
    {
      "name": "let imageView: UIImageView",
      "desc": "An image view that contains an icon, located on the leading-end of the button."
    },
    {
      "name": "func style() -> OCKStyler",
      "desc": "Returns an object’s custom style, the first parent with a custom style, or the default style."
    },
    {
      "name": "func styleChildren()",
      "desc": "Updates the style of the child views."
    },
    {
      "name": "init?(coder: NSCoder)"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var isFocused: Bool"
    },
    {
      "name": "func contains(UIFocusEnvironment) -> Bool"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "func styleDidChange()"
    },
    {
      "name": "func tintColorDidChange()"
    },
    {
      "name": "static func != (OCKLogItemButton, OCKLogItemButton) -> Bool"
    },
    {
      "name": "static func == (NSObject, NSObject) -> Bool"
    },
    {
      "name": "struct OCKLogItemButton.KeyValueObservingPublisher"
    }
  ],
  "declaration": "class OCKLogItemButton : OCKAnimatedButton<OCKStackView>",
  "inheritsFrom": [
    "OCKAnimatedButton"
  ],
  "conformsTo": [
    "CVarArg",
    "Equatable",
    "Hashable",
    "UIAccessibilityIdentification",
    "UILargeContentViewerItem",
    "UIPasteConfigurationSupporting",
    "UIUserActivityRestoring"
  ]
}