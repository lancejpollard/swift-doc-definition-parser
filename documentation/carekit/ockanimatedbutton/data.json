{
  "path": "/documentation/carekit/ockanimatedbutton",
  "type": "Generic Class",
  "name": "OCKAnimatedButton",
  "desc": "A button that has animated state changes, and responds to highlight and selection states.",
  "items": [
    {
      "name": "init(contentView: Content?, highlightOptions: Set<OCKAnimatedButton<Content>.HighlightOption>, handlesSelection: Bool)",
      "desc": "Creates a new animated button, with specific content and display options."
    },
    {
      "name": "let contentView: Content?",
      "desc": "A view that contains the content for the button."
    },
    {
      "name": "enum OCKAnimatedButton.HighlightOption",
      "desc": "A set of display options for the highlighted state of an animated button."
    },
    {
      "name": "var isHighlighted: Bool",
      "desc": "A Boolean value that indicates whether the button is in a highlighted state."
    },
    {
      "name": "let highlightOptions: Set<OCKAnimatedButton<Content>.HighlightOption>",
      "desc": "The options that define the appearance of the button’s highlight state."
    },
    {
      "name": "func setHighlighted(Bool, animated: Bool)",
      "desc": "Sets the button’s highlighted state, and optionally animates the change."
    },
    {
      "name": "func setStyleForHighlightedState(Bool)",
      "desc": "Sets the style for the button’s highlighted state."
    },
    {
      "name": "var isSelected: Bool",
      "desc": "A Boolean value that indicates whether the button is in a selected state."
    },
    {
      "name": "var handlesSelection: Bool",
      "desc": "A Boolean value that indicates whether the button handles the selection state automatically when a user taps it."
    },
    {
      "name": "func setSelected(Bool, animated: Bool)",
      "desc": "Sets the button’s selected state, and optionally animates the change."
    },
    {
      "name": "func setStyleForSelectedState(Bool)",
      "desc": "Sets the style for the button’s selected state."
    },
    {
      "name": "var customStyle: OCKStyler?",
      "desc": "An object that contains constants for styling the view."
    },
    {
      "name": "func style() -> OCKStyler",
      "desc": "Returns an object’s custom style, the first parent with a custom style, or the default style."
    },
    {
      "name": "func styleChildren()",
      "desc": "Updates the style of the child views."
    },
    {
      "name": "init?(coder: NSCoder)"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var isFocused: Bool"
    },
    {
      "name": "func contains(UIFocusEnvironment) -> Bool"
    },
    {
      "name": "func didMoveToSuperview()"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "func removeFromSuperview()"
    },
    {
      "name": "func styleDidChange()"
    },
    {
      "name": "func touchesEnded(Set<UITouch>, with: UIEvent?)"
    },
    {
      "name": "static func != (OCKAnimatedButton<Content>, OCKAnimatedButton<Content>) -> Bool"
    },
    {
      "name": "static func == (NSObject, NSObject) -> Bool"
    },
    {
      "name": "struct OCKAnimatedButton.KeyValueObservingPublisher"
    }
  ],
  "declaration": "class OCKAnimatedButton<Content> : UIControl where Content : UIView",
  "inheritsFrom": [
    "UIControl"
  ],
  "conformsTo": [
    "CVarArg",
    "Equatable",
    "Hashable",
    "OCKStylable",
    "UIAccessibilityIdentification",
    "UILargeContentViewerItem",
    "UIPasteConfigurationSupporting",
    "UIUserActivityRestoring"
  ]
}