{
  "path": "/documentation/carekit/ocksynchronizedstoremanager",
  "type": "Class",
  "name": "OCKSynchronizedStoreManager",
  "desc": "Provides synchronization to CareKit view controllers by setting itself as the store delegate, and then listening in on the store's activity.",
  "items": [
    {
      "name": "init(wrapping: OCKAnyStoreProtocol)",
      "desc": "Creates a new synchronized store manager that wraps a store."
    },
    {
      "name": "let store: OCKAnyStoreProtocol",
      "desc": "The underlying database CareKit uses."
    },
    {
      "name": "func carePlanStore(OCKAnyReadOnlyCarePlanStore, didAddCarePlans: [OCKAnyCarePlan])"
    },
    {
      "name": "func contactStore(OCKAnyReadOnlyContactStore, didAddContacts: [OCKAnyContact])"
    },
    {
      "name": "func outcomeStore(OCKAnyReadOnlyOutcomeStore, didAddOutcomes: [OCKAnyOutcome])"
    },
    {
      "name": "func patientStore(OCKAnyReadOnlyPatientStore, didAddPatients: [OCKAnyPatient])"
    },
    {
      "name": "func taskStore(OCKAnyReadOnlyTaskStore, didAddTasks: [OCKAnyTask])"
    },
    {
      "name": "func carePlanStore(OCKAnyReadOnlyCarePlanStore, didDeleteCarePlans: [OCKAnyCarePlan])"
    },
    {
      "name": "func contactStore(OCKAnyReadOnlyContactStore, didDeleteContacts: [OCKAnyContact])"
    },
    {
      "name": "func outcomeStore(OCKAnyReadOnlyOutcomeStore, didDeleteOutcomes: [OCKAnyOutcome])"
    },
    {
      "name": "func patientStore(OCKAnyReadOnlyPatientStore, didDeletePatients: [OCKAnyPatient])"
    },
    {
      "name": "func taskStore(OCKAnyReadOnlyTaskStore, didDeleteTasks: [OCKAnyTask])"
    },
    {
      "name": "func carePlanStore(OCKAnyReadOnlyCarePlanStore, didUpdateCarePlans: [OCKAnyCarePlan])"
    },
    {
      "name": "func contactStore(OCKAnyReadOnlyContactStore, didUpdateContacts: [OCKAnyContact])"
    },
    {
      "name": "func outcomeStore(OCKAnyReadOnlyOutcomeStore, didUpdateOutcomes: [OCKAnyOutcome])"
    },
    {
      "name": "func patientStore(OCKAnyReadOnlyPatientStore, didUpdatePatients: [OCKAnyPatient])"
    },
    {
      "name": "func taskStore(OCKAnyReadOnlyTaskStore, didUpdateTasks: [OCKAnyTask])"
    }
  ],
  "declaration": "class OCKSynchronizedStoreManager",
  "conformsTo": [
    "OCKCarePlanStoreDelegate",
    "OCKContactStoreDelegate",
    "OCKOutcomeStoreDelegate",
    "OCKPatientStoreDelegate",
    "OCKTaskStoreDelegate"
  ]
}