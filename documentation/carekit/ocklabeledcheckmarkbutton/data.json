{
  "path": "/documentation/carekit/ocklabeledcheckmarkbutton",
  "type": "Class",
  "name": "OCKLabeledCheckmarkButton",
  "desc": "A button that has a label, shows a checkmark in its selected state, and an empty ring in its deselected state.",
  "items": [
    {
      "name": "init()",
      "desc": "Creates a new labeled checkmark button."
    },
    {
      "name": "let contentStackView: OCKStackView",
      "desc": "A view that contains the button’s content, and arranges its children vertically."
    },
    {
      "name": "let label: OCKLabel",
      "desc": "The label on the leading side of the button."
    },
    {
      "name": "let checkmarkButton: OCKCheckmarkButton",
      "desc": "The checkmark-style button on the trailing end of the view."
    },
    {
      "name": "func setSelected(Bool, animated: Bool)",
      "desc": "Sets the button’s selected state, and optionally animates the change."
    },
    {
      "name": "func setStyleForSelectedState(Bool)",
      "desc": "Sets the style for the button’s selected state."
    },
    {
      "name": "func style() -> OCKStyler",
      "desc": "Returns an object’s custom style, the first parent with a custom style, or the default style."
    },
    {
      "name": "func styleChildren()",
      "desc": "Updates the style of the child views."
    },
    {
      "name": "init?(coder: NSCoder)"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var isFocused: Bool"
    },
    {
      "name": "func contains(UIFocusEnvironment) -> Bool"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "func styleDidChange()"
    },
    {
      "name": "func tintColorDidChange()"
    },
    {
      "name": "static func != (OCKLabeledCheckmarkButton, OCKLabeledCheckmarkButton) -> Bool"
    },
    {
      "name": "static func == (NSObject, NSObject) -> Bool"
    },
    {
      "name": "struct OCKLabeledCheckmarkButton.KeyValueObservingPublisher"
    }
  ],
  "declaration": "class OCKLabeledCheckmarkButton : OCKAnimatedButton<OCKStackView>",
  "inheritsFrom": [
    "OCKAnimatedButton"
  ],
  "conformsTo": [
    "CVarArg",
    "Equatable",
    "Hashable",
    "UIAccessibilityIdentification",
    "UILargeContentViewerItem",
    "UIPasteConfigurationSupporting",
    "UIUserActivityRestoring"
  ]
}