{
  "path": "/documentation/iobluetooth/iobluetoothsdpdataelement",
  "type": "Class",
  "name": "IOBluetoothSDPDataElement",
  "desc": "An instance of this class represents a single SDP data element as defined by the Bluetooth SDP spec.",
  "items": [
    {
      "name": "init!(elementValue: NSObject!)",
      "desc": "Initializes a new IOBluetoothSDPDataElement with the given value."
    },
    {
      "name": "init!(type: BluetoothSDPDataElementTypeDescriptor, sizeDescriptor: BluetoothSDPDataElementSizeDescriptor, size: UInt32, value: NSObject!)",
      "desc": "Initializes a new IOBluetoothSDPDataElement with the given attributes."
    },
    {
      "name": "func contains(IOBluetoothSDPDataElement!) -> Bool",
      "desc": "Checks to see if the target data element is the same as the dataElement parameter or if it contains the dataElement parameter (if its a sequence type)."
    },
    {
      "name": "func containsValue(NSObject!) -> Bool",
      "desc": "Checks to see if the target data element's value is the same as the value parameter or if it contains the value parameter."
    },
    {
      "name": "func getArrayValue() -> [Any]!",
      "desc": "If the data element is represented by an array object, it returns the value as an NSArray."
    },
    {
      "name": "func getDataValue() -> Data!",
      "desc": "If the data element is represented by a data object, it returns the value as an NSData."
    },
    {
      "name": "func getNumberValue() -> NSNumber!",
      "desc": "If the data element is represented by a number, it returns the value as an NSNumber."
    },
    {
      "name": "func getRef() -> Unmanaged<IOBluetoothSDPDataElementRef>!",
      "desc": "Returns an IOBluetoothSDPDataElementRef representation of the target IOBluetoothSDPDataElement object."
    },
    {
      "name": "func getSize() -> UInt32",
      "desc": "Returns the size in bytes of the target data element."
    },
    {
      "name": "func getSizeDescriptor() -> BluetoothSDPDataElementSizeDescriptor",
      "desc": "Returns the SDP spec defined data element size descriptor for the target data element."
    },
    {
      "name": "func getStringValue() -> String!",
      "desc": "If the data element is represented by a string object, it returns the value as an NSString."
    },
    {
      "name": "func getTypeDescriptor() -> BluetoothSDPDataElementTypeDescriptor",
      "desc": "Returns the SDP spec defined data element type descriptor for the target data element."
    },
    {
      "name": "func getUUIDValue() -> IOBluetoothSDPUUID!",
      "desc": "If the data element is a UUID (type 3), it returns the value as an IOBluetoothSDPUUID."
    },
    {
      "name": "func getValue() -> NSObject!",
      "desc": "Returns the object value of the data element."
    },
    {
      "name": "class func withElementValue(NSObject!) -> Self!",
      "desc": "Creates a new IOBluetoothSDPDataElement with the given value."
    },
    {
      "name": "class func withSDPDataElementRef(IOBluetoothSDPDataElementRef!) -> Self!",
      "desc": "Method call to convert an IOBluetoothSDPDataElementRef into an IOBluetoothSDPDataElement *."
    },
    {
      "name": "class func withType(BluetoothSDPDataElementTypeDescriptor, sizeDescriptor: BluetoothSDPDataElementSizeDescriptor, size: UInt32, value: NSObject!) -> Self!",
      "desc": "Creates a new IOBluetoothSDPDataElement with the given attributes."
    }
  ],
  "declaration": "class IOBluetoothSDPDataElement : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCoding",
    "NSSecureCoding"
  ]
}