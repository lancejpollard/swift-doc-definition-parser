{
  "path": "/documentation/iobluetooth/iobluetoothhandsfreedevice",
  "type": "Class",
  "name": "IOBluetoothHandsFreeDevice",
  "desc": "An object you use to manage phone calls on a connected Bluetooth hands-free phone or headset.",
  "items": [
    {
      "name": "init!(device: IOBluetoothDevice!, delegate: Any!)",
      "desc": "Creates an object to manage phone calls on a hands-free Bluetooth device."
    },
    {
      "name": "func acceptCall()",
      "desc": "Accepts an incoming call."
    },
    {
      "name": "func acceptCallOnPhone()",
      "desc": "Accepts an incoming call and transfers the audio to the managed hands-free phone or headset."
    },
    {
      "name": "func callTransfer()",
      "desc": "Ends all calls that are active or on hold, and accepts any waiting calls."
    },
    {
      "name": "func dialNumber(String!)",
      "desc": "Calls the phone number on a hands-free phone or headset."
    },
    {
      "name": "func memoryDial(Int32)",
      "desc": "Calls the phone number stored in a speed dial or memory slot of the hands-free phone or headset."
    },
    {
      "name": "func redial()",
      "desc": "Calls the number stored on the hands-free phone or headset again."
    },
    {
      "name": "func holdCall()",
      "desc": "Places all active calls on hold and accepts a held or waiting call."
    },
    {
      "name": "func addHeldCall()",
      "desc": "Adds held calls to the current conversation."
    },
    {
      "name": "func placeAllOthers(onHold: Int32)",
      "desc": "Places all calls except the call with the specified index on hold."
    },
    {
      "name": "func endCall()",
      "desc": "Ends the current call or refuses an incoming call."
    },
    {
      "name": "func releaseCall(Int32)",
      "desc": "Ends the call with the specified index."
    },
    {
      "name": "func releaseActiveCalls()",
      "desc": "Ends all active calls and accepts a held or waiting call."
    },
    {
      "name": "func releaseHeldCalls()",
      "desc": "Ends all calls that are on hold or returns a busy signal for a waiting call."
    },
    {
      "name": "func sendSMS(String!, message: String!)",
      "desc": "Sends a text message to a phone number."
    },
    {
      "name": "func sendDTMF(String!)",
      "desc": "Sends the tone associated with a phone key to the hands-free Bluetooth device."
    },
    {
      "name": "func send(atCommand: String!)",
      "desc": "Sends an AT command to the Bluetooth audio gateway."
    },
    {
      "name": "func send(atCommand: String!, timeout: Float, selector: Selector!, target: Any!)",
      "desc": "Send an AT command to the Bluetooth audio gateway and performs a selector on completion or timeout."
    },
    {
      "name": "func subscriberNumber()",
      "desc": "Requests that the Bluetooth audio gateway send the subscriber number to the delegate."
    },
    {
      "name": "func currentCallList()",
      "desc": "Requests that the Bluetooth audio gateway send the delegate a list of calls that are active, on hold, or being set up."
    },
    {
      "name": "func transferAudioToComputer()",
      "desc": "Moves the audio for current and future calls to a Mac."
    },
    {
      "name": "func transferAudioToPhone()",
      "desc": "Moves the audio for current or future calls to a phone."
    }
  ],
  "declaration": "class IOBluetoothHandsFreeDevice : IOBluetoothHandsFree",
  "inheritsFrom": [
    "IOBluetoothHandsFree"
  ]
}