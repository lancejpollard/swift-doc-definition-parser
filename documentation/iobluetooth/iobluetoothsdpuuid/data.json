{
  "path": "/documentation/iobluetooth/iobluetoothsdpuuid",
  "type": "Class",
  "name": "IOBluetoothSDPUUID",
  "desc": "An NSData subclass that represents a UUID as defined in the Bluetooth SDP spec.",
  "items": [
    {
      "name": "init!(uuid16: BluetoothSDPUUID16)",
      "desc": "Initializes a new 16-bit IOBluetoothSDPUUID with the given UUID16"
    },
    {
      "name": "init!(uuid32: BluetoothSDPUUID32)",
      "desc": "Creates a new 32-bit IOBluetoothSDPUUID with the given UUID32"
    },
    {
      "name": "init!(bytes: UnsafeRawPointer!, length: UInt32)",
      "desc": "Creates a new IOBluetoothSDPUUID object with the given bytes of the given length."
    },
    {
      "name": "init!(data: Data!)",
      "desc": "Creates a new IOBluetoothSDPUUID object from the given NSData."
    },
    {
      "name": "func classForArchiver() -> AnyClass!"
    },
    {
      "name": "func classForCoder() -> AnyClass!"
    },
    {
      "name": "func classForPortCoder() -> AnyClass!"
    },
    {
      "name": "func getWithLength(UInt32) -> Self!",
      "desc": "Returns an IOBluetoothSDPUUID object matching the target UUID, but with the given number of bytes."
    },
    {
      "name": "func isEqual(to: IOBluetoothSDPUUID!) -> Bool",
      "desc": "Compares the target IOBluetoothSDPUUID object with the given otherUUID object."
    },
    {
      "name": "class func uuid16(BluetoothSDPUUID16) -> Self!",
      "desc": "Creates a new 16-bit IOBluetoothSDPUUID with the given UUID16"
    },
    {
      "name": "class func uuid32(BluetoothSDPUUID32) -> Self!",
      "desc": "Creates a new 32-bit IOBluetoothSDPUUID with the given UUID32"
    }
  ],
  "declaration": "class IOBluetoothSDPUUID : NSData",
  "inheritsFrom": [
    "NSData"
  ]
}