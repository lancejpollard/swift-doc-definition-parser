{
  "path": "/documentation/corespotlight/cssearchableitemattributeset",
  "type": "Class",
  "name": "CSSearchableItemAttributeSet",
  "desc": "The set of properties to display for a searchable item.",
  "items": [
    {
      "name": "init(contentType: UTType)",
      "desc": "Creates an attribute set for the specified content type."
    },
    {
      "name": "func setValue(NSSecureCoding?, forCustomKey: CSCustomAttributeKey)",
      "desc": "Sets the value for a custom attribute key."
    },
    {
      "name": "func value(forCustomKey: CSCustomAttributeKey) -> NSSecureCoding?",
      "desc": "Returns the value associated with the specified custom attribute key."
    },
    {
      "name": "var audiences: [String]?",
      "desc": "A class of entity for which the item is intended or useful."
    },
    {
      "name": "var contentDescription: String?",
      "desc": "A description of the item’s content."
    },
    {
      "name": "var creator: String?",
      "desc": "The name of the app that created the content."
    },
    {
      "name": "var encodingApplications: [String]?",
      "desc": "The name of the apps that converted the original content into a PDF stream."
    },
    {
      "name": "var fileSize: NSNumber?",
      "desc": "The size of the document file."
    },
    {
      "name": "var fontNames: [String]?",
      "desc": "An array of font names the document uses."
    },
    {
      "name": "var identifier: String?",
      "desc": "A formal identifier that references the document the item represents."
    },
    {
      "name": "var kind: String?",
      "desc": "A description of the kind of document the item represents."
    },
    {
      "name": "var pageCount: NSNumber?",
      "desc": "The number of pages in the document."
    },
    {
      "name": "var pageHeight: NSNumber?",
      "desc": "The height of the document page, in points (72 points per inch)."
    },
    {
      "name": "var pageWidth: NSNumber?",
      "desc": "The width of the document page, in points (72 points per inch)."
    },
    {
      "name": "var securityMethod: String?",
      "desc": "The security method (a type of encryption) that protects the document file."
    },
    {
      "name": "var subject: String?",
      "desc": "The subject of the document."
    },
    {
      "name": "var theme: String?",
      "desc": "The theme of the document."
    },
    {
      "name": "var alternateNames: [String]?",
      "desc": "An array of localized strings that represent alternate display names for the item."
    },
    {
      "name": "var contentType: String?",
      "desc": "The uniform type identifier (UTI) of the item."
    },
    {
      "name": "var contentTypeTree: [String]?",
      "desc": "An attribute type that identifies a custom hierarchy of types to describe the attributes of your item."
    },
    {
      "name": "var contentURL: URL?",
      "desc": "The file URL of the content to index."
    },
    {
      "name": "var darkThumbnailURL: URL?",
      "desc": "The local file URL of the thumbnail image for the item when Dark Mode is active."
    },
    {
      "name": "var displayName: String?",
      "desc": "A localized string that contains the name of the item, suitable to display in the user interface."
    },
    {
      "name": "var keywords: [String]?",
      "desc": "An array of keywords associated with the item, such as work, birthday, important, and so on."
    },
    {
      "name": "var metadataModificationDate: Date?",
      "desc": "The date on which the last metadata attribute was changed."
    },
    {
      "name": "var path: String?",
      "desc": "The complete path to the item."
    },
    {
      "name": "var rankingHint: NSNumber?",
      "desc": "A number that indicates the relative importance of the item among other items from the app."
    },
    {
      "name": "var relatedUniqueIdentifier: String?",
      "desc": "The unique identifier for the item to which the activity is related."
    },
    {
      "name": "var thumbnailData: Data?",
      "desc": "Image data that represents the thumbnail of the item."
    },
    {
      "name": "var thumbnailURL: URL?",
      "desc": "The local file URL of the thumbnail image for the item."
    },
    {
      "name": "var title: String?",
      "desc": "The title of the item."
    },
    {
      "name": "var domainIdentifier: String?",
      "desc": "An identifier that represents the domain or owner of the item."
    },
    {
      "name": "var weakRelatedUniqueIdentifier: String?",
      "desc": "The unique identifier for the item to which the activity is related, but not linked."
    },
    {
      "name": "var userCreated: NSNumber?",
      "desc": "A value that indicates the user created the item."
    },
    {
      "name": "var userCurated: NSNumber?",
      "desc": "A value that indicates the user selected the item."
    },
    {
      "name": "var userOwned: NSNumber?",
      "desc": "A value that indicates the user purchased or owns the item."
    },
    {
      "name": "var allDay: NSNumber?",
      "desc": "A value that indicates if the event covers an entire day."
    },
    {
      "name": "var completionDate: Date?",
      "desc": "The date on which the item was completed."
    },
    {
      "name": "var dueDate: Date?",
      "desc": "The date on which the item is due."
    },
    {
      "name": "var endDate: Date?",
      "desc": "The end date for the item."
    },
    {
      "name": "var importantDates: [Date]?",
      "desc": "An array of important dates associated with the item."
    },
    {
      "name": "var startDate: Date?",
      "desc": "The start date for the item."
    },
    {
      "name": "var altitude: NSNumber?",
      "desc": "The altitude of the item in meters above sea level, expressed using the WGS84 datum."
    },
    {
      "name": "var city: String?",
      "desc": "The city of the item’s origin according to guidelines that the provider establishes."
    },
    {
      "name": "var country: String?",
      "desc": "The full, publishable name of the country or region in which the intellectual property of the item was created, according to guidelines the provider establishes."
    },
    {
      "name": "var gpsAreaInformation: String?",
      "desc": "Information about the GPS area."
    },
    {
      "name": "var gpsdop: NSNumber?",
      "desc": "The GPS dilution of precision value."
    },
    {
      "name": "var gpsDateStamp: Date?",
      "desc": "The date and time related to the GPS value."
    },
    {
      "name": "var gpsDestBearing: NSNumber?",
      "desc": "The bearing to the destination point."
    },
    {
      "name": "var gpsDestDistance: NSNumber?",
      "desc": "The distance to the destination point."
    },
    {
      "name": "var gpsDestLatitude: NSNumber?",
      "desc": "The latitude of the destination point."
    },
    {
      "name": "var gpsDestLongitude: NSNumber?",
      "desc": "The longitude of the destination point."
    },
    {
      "name": "var gpsDifferental: NSNumber?",
      "desc": "The differential correction applied to the GPS receiver."
    },
    {
      "name": "var gpsMapDatum: String?",
      "desc": "The geodetic data that the GPS receiver uses."
    },
    {
      "name": "var gpsMeasureMode: String?",
      "desc": "The measurement precision mode in use by the GPS receiver."
    },
    {
      "name": "var gpsProcessingMethod: String?",
      "desc": "The location finding method that the GPS receiver uses."
    },
    {
      "name": "var gpsStatus: String?",
      "desc": "The status of the GPS receiver."
    },
    {
      "name": "var gpsTrack: NSNumber?",
      "desc": "The direction of travel of the item in degrees from true north."
    },
    {
      "name": "var headline: String?",
      "desc": "A publishable string that provides a synopsis of the contents of the item."
    },
    {
      "name": "var imageDirection: NSNumber?",
      "desc": "The direction of the item's image in degrees from true north."
    },
    {
      "name": "var instructions: String?",
      "desc": "Instructions that concern the use of the item, such as an embargo or warning."
    },
    {
      "name": "var latitude: NSNumber?",
      "desc": "The latitude of the item, in degrees north of the equator, expressed using the WGS84 datum."
    },
    {
      "name": "var longitude: NSNumber?",
      "desc": "The longitude of the item, in degrees east of the prime meridian, expressed using the WGS84 datum."
    },
    {
      "name": "var namedLocation: String?",
      "desc": "The name of the location or point of interest associated with the item."
    },
    {
      "name": "var speed: NSNumber?",
      "desc": "The speed of the item, in kilometers per hour."
    },
    {
      "name": "var stateOrProvince: String?",
      "desc": "The province or state of origin according to guidelines the provider establishes."
    },
    {
      "name": "var timestamp: Date?",
      "desc": "The timestamp on the item."
    },
    {
      "name": "var fullyFormattedAddress: String?",
      "desc": "The fully formatted address of the item, received from MapKit."
    },
    {
      "name": "var postalCode: String?",
      "desc": "The postal code for the item according to guidelines the provider establishes."
    },
    {
      "name": "var subThoroughfare: String?",
      "desc": "The sublocation, such as a street number, for the item according to guidelines the provider establishes."
    },
    {
      "name": "var thoroughfare: String?",
      "desc": "The thoroughfare, such as a street name, associated with the location for the item according to guidelines the provider establishes."
    },
    {
      "name": "var comment: String?",
      "desc": "A comment related to the media file."
    },
    {
      "name": "var contentCreationDate: Date?",
      "desc": "The creation date of an edited or optimized version of the song or composition."
    },
    {
      "name": "var contentModificationDate: Date?",
      "desc": "The date on which the contents of the file was last modified."
    },
    {
      "name": "var contentSources: [String]?",
      "desc": "An array of sources from which the media was obtained."
    },
    {
      "name": "var copyright: String?",
      "desc": "The copyright date of the content."
    },
    {
      "name": "var downloadedDate: Date?",
      "desc": "The most recent date on which the file was downloaded or received."
    },
    {
      "name": "var editors: [String]?",
      "desc": "A list of editors who have worked on the file."
    },
    {
      "name": "var lastUsedDate: Date?",
      "desc": "The date on which the file was last used."
    },
    {
      "name": "var participants: [String]?",
      "desc": "A list of people who are visible in an image or movie or written about in a document."
    },
    {
      "name": "var projects: [String]?",
      "desc": "A list of projects of which this file is a part."
    },
    {
      "name": "var addedDate: Date?",
      "desc": "The date on which the item was moved into its current location."
    },
    {
      "name": "var codecs: [String]?",
      "desc": "The codecs used to encode/decode the media."
    },
    {
      "name": "var contactKeywords: [String]?",
      "desc": "A list of contacts who are associated with the content in some way, not including the author."
    },
    {
      "name": "var deliveryType: NSNumber?",
      "desc": "The delivery type of the file."
    },
    {
      "name": "var duration: NSNumber?",
      "desc": "The duration (if appropriate) of the content of the file, in seconds."
    },
    {
      "name": "var mediaTypes: [String]?",
      "desc": "The media types present in the content."
    },
    {
      "name": "var organizations: [String]?",
      "desc": "A list of companies or organizations that created the content."
    },
    {
      "name": "var streamable: NSNumber?",
      "desc": "A value that indicates if the content is prepared for streaming."
    },
    {
      "name": "var totalBitRate: NSNumber?",
      "desc": "The total bit rate of the media, combining audio and video."
    },
    {
      "name": "var audioBitRate: NSNumber?",
      "desc": "The audio bit rate of the media."
    },
    {
      "name": "var version: String?",
      "desc": "A version string associated with the file."
    },
    {
      "name": "var videoBitRate: NSNumber?",
      "desc": "The video bit rate of the media."
    },
    {
      "name": "var contributors: [String]?",
      "desc": "A list of people, organizations, or services that made contributions to the media content."
    },
    {
      "name": "var languages: [String]?",
      "desc": "A list of the included languages for the intellectual content of the media."
    },
    {
      "name": "var publishers: [String]?",
      "desc": "A list of people, organizations, services, or other entities responsible for making the media available."
    },
    {
      "name": "var rights: String?",
      "desc": "A link to information about the rights held in and over the media."
    },
    {
      "name": "var role: String?",
      "desc": "Indicates the role of the content creator."
    },
    {
      "name": "var contentRating: NSNumber?",
      "desc": "A value that indicates if the media contains explicit content."
    },
    {
      "name": "var coverage: [String]?",
      "desc": "A list of descriptors that specify the extent or scope of the media."
    },
    {
      "name": "var director: String?",
      "desc": "The name of the director of the media (for example, a movie director)."
    },
    {
      "name": "var genre: String?",
      "desc": "The genre of the media."
    },
    {
      "name": "var information: String?",
      "desc": "Information about the media."
    },
    {
      "name": "var local: NSNumber?",
      "desc": "A value that indicates if the media is local."
    },
    {
      "name": "var originalFormat: String?",
      "desc": "The original format of the media."
    },
    {
      "name": "var originalSource: String?",
      "desc": "The original source of the media."
    },
    {
      "name": "var performers: [String]?",
      "desc": "A list of performers in the media."
    },
    {
      "name": "var playCount: NSNumber?",
      "desc": "A user-supplied play count for the media."
    },
    {
      "name": "var producer: String?",
      "desc": "The producer of the content."
    },
    {
      "name": "var rating: NSNumber?",
      "desc": "The user-supplied rating of the media."
    },
    {
      "name": "var ratingDescription: String?",
      "desc": "A description of the rating."
    },
    {
      "name": "var url: URL?",
      "desc": "The URL associated with the media."
    },
    {
      "name": "var album: String?",
      "desc": "The title for a collection of audio media."
    },
    {
      "name": "var artist: String?",
      "desc": "The artist associated with the media."
    },
    {
      "name": "var audioChannelCount: NSNumber?",
      "desc": "The number of channels in the audio data that the file contains."
    },
    {
      "name": "var audioEncodingApplication: String?",
      "desc": "The name of the application that encoded the data the audio file contains."
    },
    {
      "name": "var audioSampleRate: NSNumber?",
      "desc": "The sample rate of the audio data the file contains, as a float value representing Hz (audio frames per second), such as 44100.0 or 22254.54."
    },
    {
      "name": "var audioTrackNumber: NSNumber?",
      "desc": "The track number of a song or audio composition when part of an album."
    },
    {
      "name": "var composer: String?",
      "desc": "The composer of the song or audio composition that the audio file contains."
    },
    {
      "name": "var keySignature: String?",
      "desc": "The musical key of the song or audio composition that the file contains, such as C, Dm, or F#m."
    },
    {
      "name": "var lyricist: String?",
      "desc": "The lyricist or text writer for the song or audio composition that the file contains."
    },
    {
      "name": "var musicalGenre: String?",
      "desc": "The musical genre of the song or audio composition that the file contains, such as jazz, pop, rock, or classical."
    },
    {
      "name": "var recordingDate: Date?",
      "desc": "The recording date of the song or composition."
    },
    {
      "name": "var tempo: NSNumber?",
      "desc": "The tempo of the music that the audio file contains, in beats per minute."
    },
    {
      "name": "var timeSignature: String?",
      "desc": "The time signature of the musical composition that the audio or MIDI file contains, in a string, such as \"4/4\" or \"7/8\"."
    },
    {
      "name": "var generalMIDISequence: NSNumber?",
      "desc": "A value that indicates whether the MIDI sequence the file contains is set up for use with a general MIDI device."
    },
    {
      "name": "var musicalInstrumentCategory: String?",
      "desc": "The category of the instrument associated with the audio file."
    },
    {
      "name": "var musicalInstrumentName: String?",
      "desc": "The name of an instrument within the context of an instrument category."
    },
    {
      "name": "var isoSpeed: NSNumber?",
      "desc": "The ISO speed setting at the time the camera captured the image."
    },
    {
      "name": "var acquisitionMake: String?",
      "desc": "The manufacturer of the device that captured the image."
    },
    {
      "name": "var acquisitionModel: String?",
      "desc": "The model of the device that captured the image."
    },
    {
      "name": "var aperture: NSNumber?",
      "desc": "The size of the lens aperture at the time the camera captured the image, as a log-scale APEX value."
    },
    {
      "name": "var bitsPerSample: NSNumber?",
      "desc": "The number of bits per sample."
    },
    {
      "name": "var cameraOwner: String?",
      "desc": "The owner of the camera that captured the image."
    },
    {
      "name": "var colorSpace: String?",
      "desc": "The color space model the image uses, such as RGB, CMYK, YUV, or YCbCr."
    },
    {
      "name": "var flashOn: NSNumber?",
      "desc": "A value that indicates if the camera used a flash to capture the image."
    },
    {
      "name": "var focalLength: NSNumber?",
      "desc": "The actual focal length of the lens, in millimeters."
    },
    {
      "name": "var focalLength35mm: NSNumber?",
      "desc": "A value that indicates if the focal length is 35mm."
    },
    {
      "name": "var layerNames: [String]?",
      "desc": "An array that contains the names of the various layers in the file."
    },
    {
      "name": "var lensModel: String?",
      "desc": "The model of the lens that captured the image."
    },
    {
      "name": "var orientation: NSNumber?",
      "desc": "The orientation of the data."
    },
    {
      "name": "var pixelCount: NSNumber?",
      "desc": "The total number of pixels in the image."
    },
    {
      "name": "var pixelHeight: NSNumber?",
      "desc": "The height of the item, such as image or video frame height, in pixels."
    },
    {
      "name": "var pixelWidth: NSNumber?",
      "desc": "The width of the item, such as image or video frame width, in pixels."
    },
    {
      "name": "var whiteBalance: NSNumber?",
      "desc": "The white balance setting when the camera captured the image."
    },
    {
      "name": "var exifgpsVersion: String?",
      "desc": "The version of GPS Info IFD header that was used to generate the metadata for the image."
    },
    {
      "name": "var exifVersion: String?",
      "desc": "The version of the EXIF header that was used to generate the metadata for the image."
    },
    {
      "name": "var exposureMode: NSNumber?",
      "desc": "The mode the camera used for the exposure of the image."
    },
    {
      "name": "var exposureProgram: String?",
      "desc": "The class of the program the camera used to set exposure when capturing the image."
    },
    {
      "name": "var exposureTime: NSNumber?",
      "desc": "The time that the lens was open during exposure, in seconds."
    },
    {
      "name": "var exposureTimeString: String?",
      "desc": "The time that the lens was open during exposure, in a string, such as \"1/250 seconds\"."
    },
    {
      "name": "var fNumber: NSNumber?",
      "desc": "The focal length of the lens, divided by the diameter of the aperture when the camera captured the image."
    },
    {
      "name": "var hasAlphaChannel: NSNumber?",
      "desc": "Indicates if the image file has an alpha channel."
    },
    {
      "name": "var maxAperture: NSNumber?",
      "desc": "The smallest F number of the lens."
    },
    {
      "name": "var meteringMode: String?",
      "desc": "The metering mode."
    },
    {
      "name": "var profileName: String?",
      "desc": "The name of the color profile the camera used for the image."
    },
    {
      "name": "var redEyeOn: NSNumber?",
      "desc": "A value that indicates if the camera used red-eye reduction when capturing the image."
    },
    {
      "name": "var resolutionHeightDPI: NSNumber?",
      "desc": "The resolution height of the image, in DPI."
    },
    {
      "name": "var resolutionWidthDPI: NSNumber?",
      "desc": "The resolution width of the image, in DPI."
    },
    {
      "name": "var htmlContentData: Data?",
      "desc": "The HTML content of the document encoded as an NSData object representing a UTF-8 encoded string."
    },
    {
      "name": "var accountHandles: [String]?",
      "desc": "An array of the canonical handles for the account with which the message is associated."
    },
    {
      "name": "var accountIdentifier: String?",
      "desc": "The unique identifier for the account with which the message is associated, if any."
    },
    {
      "name": "var additionalRecipients: [CSPerson]?",
      "desc": "An array of CSPerson objects representing the content of the Cc: field in an email message."
    },
    {
      "name": "var authorAddresses: [String]?",
      "desc": "An array of addresses associated with the author of the message."
    },
    {
      "name": "var authorEmailAddresses: [String]?",
      "desc": "An array of email addresses associated with the author of the message."
    },
    {
      "name": "var authorNames: [String]?",
      "desc": "An array of names representing the authors who have worked on the message."
    },
    {
      "name": "var authors: [CSPerson]?",
      "desc": "An array of CSPerson objects representing the content of the From: field in an item."
    },
    {
      "name": "var emailAddresses: [String]?",
      "desc": "An array of email addresses associated with the message."
    },
    {
      "name": "var emailHeaders: [String : [Any]]?",
      "desc": "A dictionary that contains all the headers of the message."
    },
    {
      "name": "var hiddenAdditionalRecipients: [CSPerson]?",
      "desc": "An array of CSPerson objects representing the content of the Bcc: field in an email message."
    },
    {
      "name": "var instantMessageAddresses: [String]?",
      "desc": "An array of instant message addresses for the message."
    },
    {
      "name": "var likelyJunk: NSNumber",
      "desc": "A value that indicates if the message is likely to be considered junk."
    },
    {
      "name": "var mailboxIdentifiers: [String]?",
      "desc": "An array of mailbox identifiers associated with the message."
    },
    {
      "name": "var phoneNumbers: [String]?",
      "desc": "An array of phone numbers associated with the message."
    },
    {
      "name": "var primaryRecipients: [CSPerson]?",
      "desc": "An array of CSPerson objects representing the content of the To: field in an email message."
    },
    {
      "name": "var recipientAddresses: [String]?",
      "desc": "An array of addresses associated with the recipients of the message."
    },
    {
      "name": "var recipientEmailAddresses: [String]?",
      "desc": "An array of email addresses associated with the recipient."
    },
    {
      "name": "var recipientNames: [String]?",
      "desc": "An array of names representing the recipients of this message."
    },
    {
      "name": "var textContent: String?",
      "desc": "The textual content of the message."
    },
    {
      "name": "var containerDisplayName: String?",
      "desc": "A localized string that specifies the name of a container to which the item belongs, suitable to display in the user interface."
    },
    {
      "name": "var containerIdentifier: String?",
      "desc": "The identifier of the container to which the item belongs."
    },
    {
      "name": "var containerOrder: NSNumber?",
      "desc": "The order of the item within the container."
    },
    {
      "name": "var containerTitle: String?",
      "desc": "The title of the container to which the item belongs."
    },
    {
      "name": "var actionIdentifiers: [String]",
      "desc": "The identifiers that specify custom actions the app supports for the item."
    },
    {
      "name": "var supportsNavigation: NSNumber?",
      "desc": "A value that indicates whether the item contains information sufficient to provide navigation to the location it represents."
    },
    {
      "name": "var supportsPhoneCall: NSNumber?",
      "desc": "A value that indicates whether the item contains information sufficient to allow a phone call to a number associated with the item."
    },
    {
      "name": "var sharedItemContentType: UTType?",
      "desc": "The file type of the item to enable the user to share items from Spotlight."
    },
    {
      "name": "let CSActionIdentifier: String",
      "desc": "A key that specifies the action’s identifier in a user activity."
    },
    {
      "name": "var providerDataTypeIdentifiers: [String]?",
      "desc": "An array of identifiers that corresponds to data representations the delegate provides."
    },
    {
      "name": "var providerFileTypeIdentifiers: [String]?",
      "desc": "An array of identifiers that corresponds to file representations the delegate provides."
    },
    {
      "name": "var providerInPlaceFileTypeIdentifiers: [String]?",
      "desc": "An array of identifiers that corresponds to in-place file representations the delegate provides."
    }
  ],
  "declaration": "class CSSearchableItemAttributeSet : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSSecureCoding"
  ]
}