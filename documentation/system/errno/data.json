{
  "path": "/documentation/system/errno",
  "type": "Structure",
  "name": "Errno",
  "desc": "An error number used by system calls to communicate what kind of error occurred.",
  "items": [
    {
      "name": "static var attributeNotFound: Errno",
      "desc": "Attribute not found."
    },
    {
      "name": "static var badFileDescriptor: Errno",
      "desc": "Bad file descriptor."
    },
    {
      "name": "static var fileExists: Errno",
      "desc": "File exists."
    },
    {
      "name": "static var fileTooLarge: Errno",
      "desc": "The file is too large."
    },
    {
      "name": "static var improperLink: Errno",
      "desc": "Improper link."
    },
    {
      "name": "static var isDirectory: Errno",
      "desc": "Is a directory."
    },
    {
      "name": "static var noLocks: Errno",
      "desc": "No locks available."
    },
    {
      "name": "static var noSuchFileOrDirectory: Errno",
      "desc": "No such file or directory."
    },
    {
      "name": "static var notDirectory: Errno",
      "desc": "Not a directory."
    },
    {
      "name": "static var permissionDenied: Errno",
      "desc": "Permission denied."
    },
    {
      "name": "static var textFileBusy: Errno",
      "desc": "Text file busy."
    },
    {
      "name": "static var badFileTypeOrFormat: Errno",
      "desc": "Inappropriate file type or format."
    },
    {
      "name": "static var directoryNotEmpty: Errno",
      "desc": "Directory not empty."
    },
    {
      "name": "static var diskQuotaExceeded: Errno",
      "desc": "Disk quota exceeded."
    },
    {
      "name": "static var noSpace: Errno",
      "desc": "Device out of space."
    },
    {
      "name": "static var readOnlyFileSystem: Errno",
      "desc": "Read-only file system."
    },
    {
      "name": "static var tooManyLinks: Errno",
      "desc": "Too many links."
    },
    {
      "name": "static var tooManyOpenFilesInSystem: Errno",
      "desc": "The system has too many open files."
    },
    {
      "name": "static var tooManyOpenFiles: Errno",
      "desc": "This process has too many open files."
    },
    {
      "name": "static var authenticationError: Errno",
      "desc": "Authentication error."
    },
    {
      "name": "static var needAuthenticator: Errno",
      "desc": "Need authenticator."
    },
    {
      "name": "static var staleNFSFileHandle: Errno",
      "desc": "Stale NFS file handle."
    },
    {
      "name": "static var deviceError: Errno",
      "desc": "Device error."
    },
    {
      "name": "static var devicePowerIsOff: Errno",
      "desc": "Device power is off."
    },
    {
      "name": "static var inappropriateIOCTLForDevice: Errno",
      "desc": "Inappropriate control function."
    },
    {
      "name": "static var ioError: Errno",
      "desc": "Input/output error."
    },
    {
      "name": "static var noSuchAddressOrDevice: Errno",
      "desc": "No such device or address."
    },
    {
      "name": "static var notBlockDevice: Errno",
      "desc": "Not a block device."
    },
    {
      "name": "static var operationNotSupportedByDevice: Errno",
      "desc": "Operation not supported by device."
    },
    {
      "name": "static var fileNameTooLong: Errno",
      "desc": "The file name is too long."
    },
    {
      "name": "static var tooManyRemoteLevels: Errno",
      "desc": "Too many levels of remote in path."
    },
    {
      "name": "static var tooManySymbolicLinkLevels: Errno",
      "desc": "Too many levels of symbolic links."
    },
    {
      "name": "static var brokenPipe: Errno",
      "desc": "Broken pipe."
    },
    {
      "name": "static var illegalSeek: Errno",
      "desc": "Illegal seek."
    },
    {
      "name": "static var deadlock: Errno",
      "desc": "Resource deadlock avoided."
    },
    {
      "name": "static var noMemory: Errno",
      "desc": "Can’t allocate memory."
    },
    {
      "name": "static var wouldBlock: Errno",
      "desc": "Operation would block."
    },
    {
      "name": "static var outOfDomain: Errno",
      "desc": "Numerical argument out of domain."
    },
    {
      "name": "static var outOfRange: Errno",
      "desc": "Numerical result out of range."
    },
    {
      "name": "static var overflow: Errno",
      "desc": "Value too large to be stored in data type."
    },
    {
      "name": "static var badCPUType: Errno",
      "desc": "Bad CPU type in executable."
    },
    {
      "name": "static var badExecutable: Errno",
      "desc": "Bad executable or shared library."
    },
    {
      "name": "static var execFormatError: Errno",
      "desc": "Executable format error."
    },
    {
      "name": "static var malformedMachO: Errno",
      "desc": "Malformed Mach-O file."
    },
    {
      "name": "static var sharedLibraryVersionMismatch: Errno",
      "desc": "Shared library version mismatch."
    },
    {
      "name": "static var connectionAbort: Errno",
      "desc": "Software caused a connection abort."
    },
    {
      "name": "static var connectionRefused: Errno",
      "desc": "Connection refused."
    },
    {
      "name": "static var connectionReset: Errno",
      "desc": "Connection reset by peer."
    },
    {
      "name": "static var hostIsDown: Errno",
      "desc": "The host is down."
    },
    {
      "name": "static var messageTooLong: Errno",
      "desc": "Message too long."
    },
    {
      "name": "static var networkDown: Errno",
      "desc": "Network is down."
    },
    {
      "name": "static var networkReset: Errno",
      "desc": "Network dropped connection on reset."
    },
    {
      "name": "static var networkUnreachable: Errno",
      "desc": "Network is unreachable."
    },
    {
      "name": "static var noBufferSpace: Errno",
      "desc": "No buffer space available."
    },
    {
      "name": "static var noRouteToHost: Errno",
      "desc": "No route to host."
    },
    {
      "name": "static var notSupported: Errno",
      "desc": "Not supported."
    },
    {
      "name": "static var timedOut: Errno",
      "desc": "Operation timed out."
    },
    {
      "name": "static var protocolError: Errno",
      "desc": "Protocol error."
    },
    {
      "name": "static var protocolFamilyNotSupported: Errno",
      "desc": "Protocol family not supported."
    },
    {
      "name": "static var protocolNotAvailable: Errno",
      "desc": "Protocol not available."
    },
    {
      "name": "static var protocolNotSupported: Errno",
      "desc": "Protocol not supported."
    },
    {
      "name": "static var protocolWrongTypeForSocket: Errno",
      "desc": "Protocol wrong for socket type."
    },
    {
      "name": "static var addressFamilyNotSupported: Errno",
      "desc": "The address family isn’t supported by the protocol family."
    },
    {
      "name": "static var addressInUse: Errno",
      "desc": "Address already in use."
    },
    {
      "name": "static var addressNotAvailable: Errno",
      "desc": "Can’t assign the requested address."
    },
    {
      "name": "static var addressRequired: Errno",
      "desc": "Destination address required."
    },
    {
      "name": "static var notSocket: Errno",
      "desc": "A socket operation was performed on something that isn’t a socket."
    },
    {
      "name": "static var notSupportedOnSocket: Errno",
      "desc": "Operation not supported on socket."
    },
    {
      "name": "static var socketIsConnected: Errno",
      "desc": "Socket is already connected."
    },
    {
      "name": "static var socketNotConnected: Errno",
      "desc": "Socket is not connected."
    },
    {
      "name": "static var socketShutdown: Errno",
      "desc": "Can’t send after socket shutdown."
    },
    {
      "name": "static var socketTypeNotSupported: Errno",
      "desc": "Socket type not supported."
    },
    {
      "name": "static var rpcProcedureUnavailable: Errno",
      "desc": "Bad procedure for program."
    },
    {
      "name": "static var rpcProgramUnavailable: Errno",
      "desc": "The remote procedure call (RPC) program isn’t available."
    },
    {
      "name": "static var rpcProgramVersionMismatch: Errno",
      "desc": "The version of the remote procedure call (RPC) program is incorrect."
    },
    {
      "name": "static var rpcUnsuccessful: Errno",
      "desc": "The structure of the remote procedure call (RPC) is bad."
    },
    {
      "name": "static var rpcVersionMismatch: Errno",
      "desc": "The version of the remote procedure call (RPC) is incorrect."
    },
    {
      "name": "static var argListTooLong: Errno",
      "desc": "The argument list is too long."
    },
    {
      "name": "static var identifierRemoved: Errno",
      "desc": "Identifier removed."
    },
    {
      "name": "static var noChildProcess: Errno",
      "desc": "No child processes."
    },
    {
      "name": "static var noSuchProcess: Errno",
      "desc": "No such process."
    },
    {
      "name": "static var previousOwnerDied: Errno",
      "desc": "Previous pthread mutex owner died."
    },
    {
      "name": "static var tooManyProcesses: Errno",
      "desc": "Too many processes."
    },
    {
      "name": "static var alreadyInProcess: Errno",
      "desc": "Operation already in progress."
    },
    {
      "name": "static var badAddress: Errno",
      "desc": "Bad address."
    },
    {
      "name": "static var interrupted: Errno",
      "desc": "Interrupted function call."
    },
    {
      "name": "static var invalidArgument: Errno",
      "desc": "Invalid argument."
    },
    {
      "name": "static var noFunction: Errno",
      "desc": "Function not implemented."
    },
    {
      "name": "static var nowInProgress: Errno",
      "desc": "Operation now in progress."
    },
    {
      "name": "static var resourceBusy: Errno",
      "desc": "Resource busy."
    },
    {
      "name": "static var resourceTemporarilyUnavailable: Errno",
      "desc": "Resource temporarily unavailable."
    },
    {
      "name": "static var badMessage: Errno",
      "desc": "Bad message."
    },
    {
      "name": "static var canceled: Errno",
      "desc": "Operation canceled."
    },
    {
      "name": "static var illegalByteSequence: Errno",
      "desc": "Illegal byte sequence."
    },
    {
      "name": "static var noData: Errno",
      "desc": "No message available."
    },
    {
      "name": "static var noMessage: Errno",
      "desc": "No message of desired type."
    },
    {
      "name": "static var noSuchPolicy: Errno",
      "desc": "No such policy registered."
    },
    {
      "name": "static var notPermitted: Errno",
      "desc": "Operation not permitted."
    },
    {
      "name": "static var notRecoverable: Errno",
      "desc": "State not recoverable."
    },
    {
      "name": "static var outputQueueFull: Errno",
      "desc": "Interface output queue is full."
    },
    {
      "name": "static var tooManyReferences: Errno",
      "desc": "Too many references: can’t splice."
    },
    {
      "name": "static var tooManyUsers: Errno",
      "desc": "Too many users."
    },
    {
      "name": "static var lastErrnoValue: Errno",
      "desc": "The largest valid error."
    },
    {
      "name": "static var multiHop: Errno",
      "desc": "Reserved."
    },
    {
      "name": "static var noLink: Errno",
      "desc": "Reserved."
    },
    {
      "name": "static var noStreamResources: Errno",
      "desc": "Reserved."
    },
    {
      "name": "static var notStream: Errno",
      "desc": "Reserved."
    },
    {
      "name": "static var notUsed: Errno",
      "desc": "Error. Not used."
    },
    {
      "name": "static var timeout: Errno",
      "desc": "Reserved."
    },
    {
      "name": "init(rawValue: CInt)",
      "desc": "Creates a strongly typed error number from a raw C error number."
    },
    {
      "name": "let rawValue: CInt",
      "desc": "The raw C error number."
    },
    {
      "name": "typealias RawValue",
      "desc": "The raw type that can be used to represent all values of the conforming type."
    },
    {
      "name": "var description: String",
      "desc": "A textual representation of the most recent error returned by a system call."
    },
    {
      "name": "var debugDescription: String",
      "desc": "A textual representation, suitable for debugging, of the most recent error returned by a system call."
    },
    {
      "name": "init(from: Decoder) throws",
      "desc": "Creates a new instance by decoding from the given decoder, when the type’s RawValue is Int32."
    },
    {
      "name": "func encode(to: Encoder) throws",
      "desc": "Encodes this value into the given encoder, when the type’s RawValue is Int32."
    },
    {
      "name": "static func != (Self, Self) -> Bool"
    },
    {
      "name": "static func ~= (Errno, Error) -> Bool"
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": ""
    },
    {
      "name": "var hashValue: Int",
      "desc": ""
    }
  ],
  "declaration": "@frozen struct Errno",
  "conformsTo": [
    "CustomDebugStringConvertible",
    "CustomStringConvertible",
    "Decodable",
    "Encodable",
    "Equatable",
    "Error",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}