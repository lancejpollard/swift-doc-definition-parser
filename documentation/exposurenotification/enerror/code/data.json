{
  "path": "/documentation/exposurenotification/enerror/code",
  "type": "Enumeration",
  "name": "ENError.Code",
  "desc": "Error codes that the exposure notification framework issues.",
  "items": [
    {
      "name": "case apiMisuse",
      "desc": "The API use is incorrect."
    },
    {
      "name": "case badFormat",
      "desc": "A file is formated incorrectly."
    },
    {
      "name": "case badParameter",
      "desc": "The parameter is missing or incorrect."
    },
    {
      "name": "case restricted",
      "desc": "Exposure notification is disabled due to system policies."
    },
    {
      "name": "case bluetoothOff",
      "desc": "Bluetooth is turned off."
    },
    {
      "name": "case insufficientMemory",
      "desc": "The memory is insufficient to perform the operation."
    },
    {
      "name": "case insufficientStorage",
      "desc": "The storage is insufficient to enable notifications."
    },
    {
      "name": "case `internal`",
      "desc": "A bug in the internal notification framework."
    },
    {
      "name": "case invalidated",
      "desc": "A call to invalidate before the operation completes normally."
    },
    {
      "name": "case notAuthorized",
      "desc": "The user has denied access to the notification framework."
    },
    {
      "name": "case notEnabled",
      "desc": "Notification is not enabled."
    },
    {
      "name": "case notEntitled",
      "desc": "Process of calling is not entitled."
    },
    {
      "name": "case rateLimited",
      "desc": "API calls are too frequent."
    },
    {
      "name": "case unknown",
      "desc": "Failure has an unknown cause."
    },
    {
      "name": "case unsupported",
      "desc": "Operation is not supported."
    },
    {
      "name": "case dataInaccessible",
      "desc": "The user must unlock the device before it can access data."
    },
    {
      "name": "case travelStatusNotAvailable",
      "desc": "The system canâ€™t determine whether the user is traveling."
    }
  ],
  "declaration": "enum ENError.Code : Int, _ErrorCodeProtocol, @unchecked Sendable",
  "conformsTo": [
    "Sendable"
  ]
}