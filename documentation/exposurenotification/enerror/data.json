{
  "path": "/documentation/exposurenotification/enerror",
  "type": "Structure",
  "name": "ENError",
  "desc": "Errors that the exposure notification framework issues.",
  "items": [
    {
      "name": "init(Code, userInfo: [String : Any])",
      "desc": "Creates an error."
    },
    {
      "name": "var code: Code",
      "desc": "The error code."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The computed hash value for the error."
    },
    {
      "name": "var userInfo: [String : Any]",
      "desc": "A dictionary of user-supplied values."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "A dictionary of user-supplied, error-related information."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by moving them into the given hasher."
    },
    {
      "name": "static func == (ENError, ENError) -> Bool",
      "desc": "Compare two errors to see if they’re equal."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "The description for the error that is localized for the user."
    },
    {
      "name": "var errorCode: Int",
      "desc": "A code for the error."
    },
    {
      "name": "static var apiMisuse: ENError.Code",
      "desc": "The API use is incorrect."
    },
    {
      "name": "static var badFormat: ENError.Code",
      "desc": "A file is formated incorrectly."
    },
    {
      "name": "static var badParameter: ENError.Code",
      "desc": "The parameter is missing or incorrect."
    },
    {
      "name": "static var bluetoothOff: ENError.Code",
      "desc": "Bluetooth is turned off."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "A domain for the error."
    },
    {
      "name": "static var insufficientMemory: ENError.Code",
      "desc": "The memory is insufficient to perform the operation."
    },
    {
      "name": "static var insufficientStorage: ENError.Code",
      "desc": "The storage is insufficient to enable notifications."
    },
    {
      "name": "static var `internal`: ENError.Code",
      "desc": "A bug in the internal notification framework."
    },
    {
      "name": "static var invalidated: ENError.Code",
      "desc": "A call to invalidate before the operation completes normally."
    },
    {
      "name": "static var notAuthorized: ENError.Code",
      "desc": "The user has denied access to the notification framework."
    },
    {
      "name": "static var notEnabled: ENError.Code",
      "desc": "Notification is not enabled."
    },
    {
      "name": "static var notEntitled: ENError.Code",
      "desc": "Process of calling is not entitled."
    },
    {
      "name": "static var rateLimited: ENError.Code",
      "desc": "API calls are too frequent."
    },
    {
      "name": "static var restricted: ENError.Code",
      "desc": "Exposure notification is disabled due to system policies."
    },
    {
      "name": "static var unknown: ENError.Code",
      "desc": "Failure has an unknown cause."
    },
    {
      "name": "static var unsupported: ENError.Code",
      "desc": "Operation is not supported."
    },
    {
      "name": "static var dataInaccessible: ENError.Code",
      "desc": "The user must unlock the device before it can access data."
    },
    {
      "name": "static var travelStatusNotAvailable: ENError.Code",
      "desc": "The system can’t determine whether the user is traveling."
    },
    {
      "name": "enum ENError.Code",
      "desc": "Error codes that the exposure notification framework issues."
    },
    {
      "name": "static func != (ENError, ENError) -> Bool"
    }
  ],
  "declaration": "struct ENError"
}