{
  "path": "/documentation/spritekit/sk3dnode",
  "type": "Class",
  "name": "SK3DNode",
  "desc": "3D SceneKit content drawn as a flattened sprite.",
  "items": [
    {
      "name": "init(viewportSize: CGSize)",
      "desc": "Initializes a new 3D node."
    },
    {
      "name": "init?(coder: NSCoder)",
      "desc": "Tells you when to initialize a 3D node that has been unarchived."
    },
    {
      "name": "var viewportSize: CGSize",
      "desc": "The size of the image rendered by the node."
    },
    {
      "name": "var scnScene: SCNScene?",
      "desc": "The SceneKit scene to render."
    },
    {
      "name": "var pointOfView: SCNNode?",
      "desc": "The Scene Kit node from which the scene’s contents are viewed when rendered."
    },
    {
      "name": "var autoenablesDefaultLighting: Bool",
      "desc": "A Boolean value that determines whether Scene Kit automatically adds lights to a scene."
    },
    {
      "name": "var isPlaying: Bool",
      "desc": "A Boolean value that determines whether the scene is playing."
    },
    {
      "name": "var loops: Bool",
      "desc": "A Boolean value that determines whether Scene Kit restarts the scene time after all animations in the scene have played."
    },
    {
      "name": "var sceneTime: TimeInterval",
      "desc": "The current scene time."
    },
    {
      "name": "func hitTest(CGPoint, options: [String : Any]?) -> [SCNHitTestResult]",
      "desc": "Searches the Scene Kit scene for objects corresponding to a point in the rendered image."
    },
    {
      "name": "func projectPoint(vector_float3) -> vector_float3",
      "desc": "Projects a point from the 3D world coordinate system of the SceneKit scene to the 2D viewport coordinate system of the SpriteKit node."
    },
    {
      "name": "func unprojectPoint(vector_float3) -> vector_float3",
      "desc": "Unprojects a point from the SpriteKit node’s 2D viewport coordinate system to the 3D world coordinate system of the SceneKit scene."
    }
  ],
  "declaration": "class SK3DNode : SKNode",
  "inheritsFrom": [
    "SKNode"
  ]
}