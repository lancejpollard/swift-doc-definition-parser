{
  "path": "/documentation/spritekit/skfieldnode",
  "type": "Class",
  "name": "SKFieldNode",
  "desc": "A node that applies physics effects to nearby nodes.",
  "items": [
    {
      "name": "class func dragField() -> SKFieldNode",
      "desc": "Creates a field node that applies a force that resists the motion of physics bodies."
    },
    {
      "name": "class func electricField() -> SKFieldNode",
      "desc": "Creates a field node that applies an electrical force proportional to the electrical charge of physics bodies."
    },
    {
      "name": "class func linearGravityField(withVector: vector_float3) -> SKFieldNode",
      "desc": "Creates a field node that accelerates physics bodies in a specific direction."
    },
    {
      "name": "class func magneticField() -> SKFieldNode",
      "desc": "Creates a field node that applies a magnetic force based on the velocity and electrical charge of the physics bodies."
    },
    {
      "name": "class func noiseField(withSmoothness: CGFloat, animationSpeed: CGFloat) -> SKFieldNode",
      "desc": "Creates a field node that applies a randomized acceleration to physics bodies."
    },
    {
      "name": "class func radialGravityField() -> SKFieldNode",
      "desc": "Creates a field node that accelerates physics bodies toward the field node."
    },
    {
      "name": "class func springField() -> SKFieldNode",
      "desc": "Creates a field node that applies a spring-like force that pulls physics bodies toward the field node."
    },
    {
      "name": "class func turbulenceField(withSmoothness: CGFloat, animationSpeed: CGFloat) -> SKFieldNode",
      "desc": "Creates a field node that applies a randomized acceleration to physics bodies."
    },
    {
      "name": "class func velocityField(with: SKTexture) -> SKFieldNode",
      "desc": "Creates a field node that sets the velocity of physics bodies that enter the node’s area based on the pixel values of a texture."
    },
    {
      "name": "class func velocityField(withVector: vector_float3) -> SKFieldNode",
      "desc": "Creates a field node that gives physics bodies a constant velocity."
    },
    {
      "name": "class func vortexField() -> SKFieldNode",
      "desc": "Creates a field node that applies a perpendicular force to physics bodies."
    },
    {
      "name": "class func customField(evaluationBlock: SKFieldForceEvaluator) -> SKFieldNode",
      "desc": "Creates a field node that calculates and applies a custom force to the physics body."
    },
    {
      "name": "typealias SKFieldForceEvaluator",
      "desc": "The definition for a custom block that processes a single physics body’s interaction with the field."
    },
    {
      "name": "var isEnabled: Bool",
      "desc": "A Boolean value that indicates whether the field is active."
    },
    {
      "name": "var isExclusive: Bool",
      "desc": "A Boolean value that indicates whether the field node should override all other field nodes that might otherwise affect physics bodies."
    },
    {
      "name": "var region: SKRegion?",
      "desc": "The area (relative to the node’s origin) that the field affects."
    },
    {
      "name": "var minimumRadius: Float",
      "desc": "The minimum value for distance-based effects."
    },
    {
      "name": "var categoryBitMask: UInt32",
      "desc": "A mask that defines which categories this field belongs to."
    },
    {
      "name": "var strength: Float",
      "desc": "The strength of the field."
    },
    {
      "name": "var falloff: Float",
      "desc": "The exponent that defines the rate of decay for the strength of the field as the distance increases between the node and the physics body being affected."
    },
    {
      "name": "var animationSpeed: Float",
      "desc": "The rate at which a noise or turbulence field node changes."
    },
    {
      "name": "var smoothness: Float",
      "desc": "The smoothness of the noise used to generate the forces."
    },
    {
      "name": "var direction: vector_float3",
      "desc": "The direction of a velocity field node."
    },
    {
      "name": "var texture: SKTexture?",
      "desc": "A normal texture that specifies the velocities at different points in a velocity field node."
    }
  ],
  "declaration": "class SKFieldNode : SKNode",
  "inheritsFrom": [
    "SKNode"
  ]
}