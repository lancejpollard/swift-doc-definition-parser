{
  "path": "/documentation/spritekit/sktransition",
  "type": "Class",
  "name": "SKTransition",
  "desc": "An object used to perform an animated transition to a new scene.",
  "items": [
    {
      "name": "class func crossFade(withDuration: TimeInterval) -> SKTransition",
      "desc": "Creates a cross fade transition."
    },
    {
      "name": "class func doorsCloseHorizontal(withDuration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition where the new scene appears as a pair of closing horizontal doors."
    },
    {
      "name": "class func doorsCloseVertical(withDuration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition where the new scene appears as a pair of closing vertical doors."
    },
    {
      "name": "class func doorsOpenHorizontal(withDuration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition where the new scene appears as a pair of opening horizontal doors."
    },
    {
      "name": "class func doorsOpenVertical(withDuration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition where the new scene appears as a pair of opening vertical doors."
    },
    {
      "name": "class func doorway(withDuration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition where the previous scene disappears as a pair of opening doors."
    },
    {
      "name": "class func fade(with: UIColor, duration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition that first fades to a constant color and then fades to the new scene."
    },
    {
      "name": "class func fade(withDuration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition that first fades to black and then fades to the new scene."
    },
    {
      "name": "class func flipHorizontal(withDuration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition where the two scenes are flipped across a horizontal line running through the center of the view."
    },
    {
      "name": "class func flipVertical(withDuration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition where the two scenes are flipped across a vertical line running through the center of the view."
    },
    {
      "name": "class func moveIn(with: SKTransitionDirection, duration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition where the new scene moves in on top of the old scene."
    },
    {
      "name": "class func push(with: SKTransitionDirection, duration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition where the new scene moves in, pushing the old scene out of the view."
    },
    {
      "name": "class func reveal(with: SKTransitionDirection, duration: TimeInterval) -> SKTransition",
      "desc": "Creates a transition where the old scene moves out of the view, revealing the new scene underneath it."
    },
    {
      "name": "init(ciFilter: CIFilter, duration: TimeInterval)",
      "desc": "Creates a transition that uses a Core Image filter to perform the transition."
    },
    {
      "name": "var pausesIncomingScene: Bool",
      "desc": "A Boolean value that determines whether the incoming scene is paused during the transition."
    },
    {
      "name": "var pausesOutgoingScene: Bool",
      "desc": "A Boolean value that determines whether the outgoing scene is paused during the transition."
    },
    {
      "name": "enum SKTransitionDirection",
      "desc": "For some transitions, the direction in which the transition is performed."
    }
  ],
  "declaration": "class SKTransition : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying"
  ]
}