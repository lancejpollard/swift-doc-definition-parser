{
  "path": "/documentation/spritekit/skspritenode",
  "type": "Class",
  "name": "SKSpriteNode",
  "desc": "An image or solid color.",
  "items": [
    {
      "name": "init(imageNamed: String)",
      "desc": "Initializes a textured sprite using an image file."
    },
    {
      "name": "init(imageNamed: String, normalMapped: Bool)",
      "desc": "Initializes a textured sprite using an image file, optionally adding a normal map to simulate 3D lighting."
    },
    {
      "name": "init(texture: SKTexture?)",
      "desc": "Initializes a textured sprite using an existing texture object."
    },
    {
      "name": "init(texture: SKTexture?, color: UIColor, size: CGSize)",
      "desc": "Initializes a textured sprite in color using an existing texture object."
    },
    {
      "name": "init(texture: SKTexture?, size: CGSize)",
      "desc": "Initializes a textured sprite using an existing texture object but with a specified size."
    },
    {
      "name": "init(texture: SKTexture?, normalMap: SKTexture?)",
      "desc": "Initializes a textured sprite with a normal map to simulate 3D lighting."
    },
    {
      "name": "var texture: SKTexture?",
      "desc": "The texture used to draw the sprite."
    },
    {
      "name": "init(color: UIColor, size: CGSize)",
      "desc": "Initializes a single-color sprite node."
    },
    {
      "name": "init?(coder: NSCoder)",
      "desc": "Tells you when to initialize a sprite from an archive."
    },
    {
      "name": "var size: CGSize",
      "desc": "The dimensions of the sprite, in points."
    },
    {
      "name": "func scale(to: CGSize)",
      "desc": "Scales the sprite node to a specified size."
    },
    {
      "name": "var anchorPoint: CGPoint",
      "desc": "Defines the point in the sprite that corresponds to the node’s position."
    },
    {
      "name": "var centerRect: CGRect",
      "desc": "Enable nine-part stretching of the sprite's texture."
    },
    {
      "name": "var color: UIColor",
      "desc": "The sprite’s color."
    },
    {
      "name": "var colorBlendFactor: CGFloat",
      "desc": "A floating-point value that describes how the color is blended with the sprite’s texture."
    },
    {
      "name": "var blendMode: SKBlendMode",
      "desc": "The blend mode used to draw the sprite into the parent’s framebuffer."
    },
    {
      "name": "enum SKBlendMode",
      "desc": "The modes that describe how the source and destination pixel colors are used to calculate the new destination color."
    },
    {
      "name": "var lightingBitMask: UInt32",
      "desc": "A mask that defines how this sprite is lit by light nodes in the scene."
    },
    {
      "name": "var shadowedBitMask: UInt32",
      "desc": "A mask that defines which lights add shadows to the sprite."
    },
    {
      "name": "var shadowCastBitMask: UInt32",
      "desc": "A mask that defines which lights are occluded by this sprite."
    },
    {
      "name": "var normalTexture: SKTexture?",
      "desc": "A texture that specifies the normal map for the sprite."
    },
    {
      "name": "var shader: SKShader?",
      "desc": "A text file that defines code that does custom per-pixel drawing or colorization."
    },
    {
      "name": "var attributeValues: [String : SKAttributeValue]",
      "desc": "The values of each attribute associated with the node's attached shader."
    },
    {
      "name": "func setValue(SKAttributeValue, forAttribute: String)",
      "desc": "Sets an attribute value for an attached shader."
    },
    {
      "name": "func value(forAttributeNamed: String) -> SKAttributeValue?",
      "desc": "Sets the value of a shader attribute."
    }
  ],
  "declaration": "class SKSpriteNode : SKNode",
  "inheritsFrom": [
    "SKNode"
  ],
  "conformsTo": [
    "SKWarpable"
  ]
}