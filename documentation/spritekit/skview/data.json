{
  "path": "/documentation/spritekit/skview",
  "type": "Class",
  "name": "SKView",
  "desc": "A view subclass that renders a SpriteKit scene.",
  "items": [
    {
      "name": "var scene: SKScene?",
      "desc": "The scene currently presented by this view."
    },
    {
      "name": "func presentScene(SKScene?)",
      "desc": "Presents a scene."
    },
    {
      "name": "func presentScene(SKScene, transition: SKTransition)",
      "desc": "Transitions from the current scene to a new scene."
    },
    {
      "name": "class SKTransition",
      "desc": "An object used to perform an animated transition to a new scene."
    },
    {
      "name": "var isPaused: Bool",
      "desc": "A Boolean value that indicates whether the view’s scene animations are paused."
    },
    {
      "name": "var preferredFramesPerSecond: Int",
      "desc": "The animation frame rate that the view uses to render its scene."
    },
    {
      "name": "var delegate: SKViewDelegate?",
      "desc": "A delegate that allows dynamic control of the view's render rate."
    },
    {
      "name": "protocol SKViewDelegate",
      "desc": "Methods to take custom control over the view's render rate."
    },
    {
      "name": "var ignoresSiblingOrder: Bool",
      "desc": "A Boolean value that indicates whether parent-child and sibling relationships affect the rendering order of nodes in the scene."
    },
    {
      "name": "var shouldCullNonVisibleNodes: Bool",
      "desc": "A Boolean value that indicates whether the view automatically culls non-visible nodes from the rendering tree."
    },
    {
      "name": "var allowsTransparency: Bool",
      "desc": "A Boolean property that indicates whether the view is rendered using transparency."
    },
    {
      "name": "var isAsynchronous: Bool",
      "desc": "A Boolean value that indicates whether the content is rendered asynchronously."
    },
    {
      "name": "var showsFPS: Bool",
      "desc": "A Boolean value that indicates whether the view displays a frame rate indicator."
    },
    {
      "name": "var showsNodeCount: Bool",
      "desc": "A Boolean value that indicates whether the view displays an overlay that shows physics bodies that are visible in the scene."
    },
    {
      "name": "var showsDrawCount: Bool",
      "desc": "A Boolean value that indicates whether the view displays the number of drawing passes it needed to render the view."
    },
    {
      "name": "var showsQuadCount: Bool",
      "desc": "A Boolean value that indicates whether the view displays the number of rectangles used to render the scene."
    },
    {
      "name": "var showsPhysics: Bool",
      "desc": "A Boolean value that indicates whether the view displays physics-related debugging information."
    },
    {
      "name": "var showsFields: Bool",
      "desc": "A Boolean value that indicates whether the view displays information about physics fields in the scene."
    },
    {
      "name": "func convert(CGPoint, from: SKScene) -> CGPoint",
      "desc": "Converts a point from scene coordinates to view coordinates."
    },
    {
      "name": "func convert(CGPoint, to: SKScene) -> CGPoint",
      "desc": "Converts a point from view coordinates to scene coordinates."
    },
    {
      "name": "func texture(from: SKNode, crop: CGRect) -> SKTexture?",
      "desc": "Renders a portion of a node’s contents and returns the rendered image as a texture."
    },
    {
      "name": "func texture(from: SKNode) -> SKTexture?",
      "desc": "Renders the contents of a node tree and returns the rendered image as a texture."
    },
    {
      "name": "var disableDepthStencilBuffer: Bool"
    }
  ],
  "declaration": "class SKView : UIView",
  "inheritsFrom": [
    "NSView",
    "UIView"
  ],
  "conformsTo": [
    "NSSecureCoding"
  ]
}