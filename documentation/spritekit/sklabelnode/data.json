{
  "path": "/documentation/spritekit/sklabelnode",
  "type": "Class",
  "name": "SKLabelNode",
  "desc": "A graphical element that draws text.",
  "items": [
    {
      "name": "init(fontNamed: String?)",
      "desc": "Initializes a new label object with a specified font."
    },
    {
      "name": "init(text: String?)",
      "desc": "Initializes a new label object with a text string."
    },
    {
      "name": "init(attributedText: NSAttributedString?)",
      "desc": "Initializes a new label object with an attributed text string."
    },
    {
      "name": "var text: String?",
      "desc": "The string that the label node displays."
    },
    {
      "name": "var attributedText: NSAttributedString?",
      "desc": "The attributed string displayed by the label."
    },
    {
      "name": "var fontColor: UIColor?",
      "desc": "The color of the label."
    },
    {
      "name": "var fontName: String?",
      "desc": "The font used for the text in the label."
    },
    {
      "name": "var fontSize: CGFloat",
      "desc": "The size of the font used in the label."
    },
    {
      "name": "var verticalAlignmentMode: SKLabelVerticalAlignmentMode",
      "desc": "The vertical position of the text within the node."
    },
    {
      "name": "enum SKLabelVerticalAlignmentMode",
      "desc": "Options for aligning text vertically."
    },
    {
      "name": "var horizontalAlignmentMode: SKLabelHorizontalAlignmentMode",
      "desc": "The horizontal position of the text within the node."
    },
    {
      "name": "enum SKLabelHorizontalAlignmentMode",
      "desc": "Options for aligning text horizontally."
    },
    {
      "name": "var preferredMaxLayoutWidth: CGFloat",
      "desc": "The width, in screen points, after which line-break mode should be applied."
    },
    {
      "name": "var lineBreakMode: NSLineBreakMode",
      "desc": "Determines the line-break mode for multiple lines."
    },
    {
      "name": "var numberOfLines: Int",
      "desc": "Determines the number of lines to draw."
    },
    {
      "name": "var color: UIColor?",
      "desc": "An alternative to the font color that can be used for animations."
    },
    {
      "name": "var colorBlendFactor: CGFloat",
      "desc": "A floating-point value that describes how the color is blended with the font color."
    },
    {
      "name": "var blendMode: SKBlendMode",
      "desc": "The blend mode used to draw the label into the parentâ€™s framebuffer."
    }
  ],
  "declaration": "class SKLabelNode : SKNode",
  "inheritsFrom": [
    "SKNode"
  ]
}