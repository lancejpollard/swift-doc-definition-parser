{
  "path": "/documentation/spritekit/skconstraint",
  "type": "Class",
  "name": "SKConstraint",
  "desc": "A specification for constraining a node’s position or rotation.",
  "items": [
    {
      "name": "class func positionX(SKRange, y: SKRange) -> Self",
      "desc": "Creates a constraint that restricts both coordinates of a node’s position."
    },
    {
      "name": "class func positionX(SKRange) -> Self",
      "desc": "Creates a constraint that restricts the x-coordinate of a node’s position."
    },
    {
      "name": "class func positionY(SKRange) -> Self",
      "desc": "Creates a constraint that restricts the y-coordinate of a node’s position."
    },
    {
      "name": "class func orient(to: SKNode, offset: SKRange) -> Self",
      "desc": "Creates a constraint that forces a node to rotate to face another node."
    },
    {
      "name": "class func orient(to: CGPoint, offset: SKRange) -> Self",
      "desc": "Creates a constraint that forces a node to rotate to face a fixed point."
    },
    {
      "name": "class func orient(to: CGPoint, in: SKNode, offset: SKRange) -> Self",
      "desc": "Creates a constraint that forces a node to rotate to face a point in another node’s coordinate system."
    },
    {
      "name": "class func zRotation(SKRange) -> Self",
      "desc": "Creates a constraint that limits the orientation of a node."
    },
    {
      "name": "class func distance(SKRange, to: SKNode) -> Self",
      "desc": "Creates a constraint that keeps a node within a certain distance of another node."
    },
    {
      "name": "class func distance(SKRange, to: CGPoint) -> Self",
      "desc": "Creates a constraint that keeps a node within a certain distance of a point."
    },
    {
      "name": "class func distance(SKRange, to: CGPoint, in: SKNode) -> Self",
      "desc": "Creates a constraint that keeps a node within a certain distance of a point in another node’s coordinate system."
    },
    {
      "name": "var referenceNode: SKNode?",
      "desc": "The node whose coordinate system should be used to apply the constraint."
    },
    {
      "name": "var enabled: Bool",
      "desc": "A Boolean value that specifies whether the constraint is applied."
    }
  ],
  "declaration": "class SKConstraint : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSSecureCoding"
  ]
}