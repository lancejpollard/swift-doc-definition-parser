{
  "path": "/documentation/avfaudio/avaudiounitcomponent",
  "type": "Class",
  "name": "AVAudioUnitComponent",
  "desc": "An object that provides details about an audio unit.",
  "items": [
    {
      "name": "var audioComponent: AudioComponent",
      "desc": "The underlying audio component."
    },
    {
      "name": "var audioComponentDescription: AudioComponentDescription",
      "desc": "The audio component description."
    },
    {
      "name": "var availableArchitectures: [NSNumber]",
      "desc": "An array of architectures that the audio unit supports."
    },
    {
      "name": "var configurationDictionary: [String : Any]",
      "desc": "The audio unit componentâ€™s configuration dictionary."
    },
    {
      "name": "var hasCustomView: Bool",
      "desc": "A Boolean value that indicates whether the audio unit component has a custom view."
    },
    {
      "name": "var hasMIDIInput: Bool",
      "desc": "A Boolean value that indicates whether the audio unit component has MIDI input."
    },
    {
      "name": "var hasMIDIOutput: Bool",
      "desc": "A Boolean value that indicates whether the audio unit component has MIDI output."
    },
    {
      "name": "var manufacturerName: String",
      "desc": "The name of the manufacturer of the audio unit component."
    },
    {
      "name": "var name: String",
      "desc": "The name of the audio unit component."
    },
    {
      "name": "var passesAUVal: Bool",
      "desc": "A Boolean value that indicates whether the audio unit component passes the validation tests."
    },
    {
      "name": "var isSandboxSafe: Bool",
      "desc": "A Boolean value that indicates whether the audio unit component is safe for sandboxing."
    },
    {
      "name": "func supportsNumberInputChannels(Int, outputChannels: Int) -> Bool",
      "desc": "Gets a Boolean value that indicates whether the audio unit component supports the specified number of input and output channels."
    },
    {
      "name": "var typeName: String",
      "desc": "The audio unit component type."
    },
    {
      "name": "var version: Int",
      "desc": "The audio unit component version number."
    },
    {
      "name": "var versionString: String",
      "desc": "A string that represents the audio unit component version number."
    },
    {
      "name": "var iconURL: URL?",
      "desc": "The URL of an icon that represents the audio unit component."
    },
    {
      "name": "var icon: NSImage?",
      "desc": "An icon that represents the component."
    },
    {
      "name": "var localizedTypeName: String",
      "desc": "The localized type name of the component."
    },
    {
      "name": "var allTagNames: [String]",
      "desc": "An array of tag names for the audio unit component."
    },
    {
      "name": "var userTagNames: [String]",
      "desc": "An array of tags the user creates."
    },
    {
      "name": "static let AVAudioUnitComponentTagsDidChange: NSNotification.Name",
      "desc": "A notification that indicates when component tags change."
    },
    {
      "name": "let AVAudioUnitManufacturerNameApple: String",
      "desc": "The audio unit manufacturer is Apple."
    },
    {
      "name": "let AVAudioUnitTypeOutput: String",
      "desc": "An audio unit type that represents an output."
    },
    {
      "name": "let AVAudioUnitTypeMusicDevice: String",
      "desc": "An audio unit type that represents a music device."
    },
    {
      "name": "let AVAudioUnitTypeMusicEffect: String",
      "desc": "An audio unit type that represents a music effect."
    },
    {
      "name": "let AVAudioUnitTypeFormatConverter: String",
      "desc": "An audio unit type that represents a format converter."
    },
    {
      "name": "let AVAudioUnitTypeEffect: String",
      "desc": "An audio unit type that represents an effect."
    },
    {
      "name": "let AVAudioUnitTypeMixer: String",
      "desc": "An audio unit type that represents a mixer."
    },
    {
      "name": "let AVAudioUnitTypePanner: String",
      "desc": "An audio unit type that represents a panner."
    },
    {
      "name": "let AVAudioUnitTypeGenerator: String",
      "desc": "An audio unit type that represents a generator."
    },
    {
      "name": "let AVAudioUnitTypeOfflineEffect: String",
      "desc": "An audio unit type that represents an offline effect."
    },
    {
      "name": "let AVAudioUnitTypeMIDIProcessor: String",
      "desc": "An audio unit type that represents a MIDI processor."
    }
  ],
  "declaration": "class AVAudioUnitComponent : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}