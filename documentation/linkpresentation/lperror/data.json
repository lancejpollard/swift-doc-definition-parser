{
  "path": "/documentation/linkpresentation/lperror",
  "type": "Structure",
  "name": "LPError",
  "desc": "An error returned by the LinkPresentation framework.",
  "items": [
    {
      "name": "var errorCode: Int",
      "desc": "A code for the error."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "Information about the error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized, human-readable explanation of the error."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The domain for the error."
    },
    {
      "name": "let LPErrorDomain: String",
      "desc": "The domain for Link Presentation errors."
    },
    {
      "name": "static var metadataFetchCancelled: LPError.Code",
      "desc": "An error indicating that the metadata fetch was canceled by the client."
    },
    {
      "name": "static var metadataFetchFailed: LPError.Code",
      "desc": "An error indicating that a metadata fetch failed."
    },
    {
      "name": "static var metadataFetchTimedOut: LPError.Code",
      "desc": "An error indicating that the metadata fetch took longer than allowed."
    },
    {
      "name": "static var unknown: LPError.Code",
      "desc": "An unknown error."
    },
    {
      "name": "enum LPError.Code",
      "desc": "Possible error values that can be returned from LinkPresentation APIs."
    },
    {
      "name": "static func != (LPError, LPError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two error values are not equal."
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func == (LPError, LPError) -> Bool"
    }
  ],
  "declaration": "struct LPError"
}