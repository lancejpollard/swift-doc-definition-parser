{
  "path": "/documentation/uikit/uibackgroundconfiguration",
  "type": "Structure",
  "name": "UIBackgroundConfiguration",
  "desc": "A configuration that describes a specific background appearance.",
  "items": [
    {
      "name": "static func listPlainCell() -> UIBackgroundConfiguration",
      "desc": "Creates the default configuration you use to style a cell in a plain list."
    },
    {
      "name": "static func listGroupedCell() -> UIBackgroundConfiguration",
      "desc": "Creates the default configuration you use to style a cell in a grouped list."
    },
    {
      "name": "static func listSidebarCell() -> UIBackgroundConfiguration",
      "desc": "Creates the default configuration you use to style a cell in a sidebar list."
    },
    {
      "name": "static func listAccompaniedSidebarCell() -> UIBackgroundConfiguration",
      "desc": "Creates the default configuration you use to style a cell in an accompanied sidebar list."
    },
    {
      "name": "static func listPlainHeaderFooter() -> UIBackgroundConfiguration",
      "desc": "Creates the default configuration you use to style a plain list header or footer."
    },
    {
      "name": "static func listGroupedHeaderFooter() -> UIBackgroundConfiguration",
      "desc": "Creates the default configuration you use to style a grouped list header or footer."
    },
    {
      "name": "static func listSidebarHeader() -> UIBackgroundConfiguration",
      "desc": "Creates the default configuration you use to style a sidebar list header."
    },
    {
      "name": "static func clear() -> UIBackgroundConfiguration",
      "desc": "Creates an empty background configuration with a transparent background and no default styling."
    },
    {
      "name": "var customView: UIView?",
      "desc": "A custom view for the background."
    },
    {
      "name": "var cornerRadius: CGFloat",
      "desc": "The preferred corner radius, using a continuous corner curve, for the background and stroke."
    },
    {
      "name": "var backgroundInsets: NSDirectionalEdgeInsets",
      "desc": "The insets (or outsets, if negative) for the background and stroke, relative to the edges of the containing view."
    },
    {
      "name": "var edgesAddingLayoutMarginsToBackgroundInsets: NSDirectionalRectEdge",
      "desc": "The edges on which the configuration adds the containing view’s layout margins to the background insets."
    },
    {
      "name": "var backgroundColor: UIColor?",
      "desc": "The color of the background."
    },
    {
      "name": "var backgroundColorTransformer: UIConfigurationColorTransformer?",
      "desc": "The color transformer for resolving the background color."
    },
    {
      "name": "func resolvedBackgroundColor(for: UIColor) -> UIColor",
      "desc": "Generates the resolved background color for the specified tint color, using the background color and color transformer."
    },
    {
      "name": "var visualEffect: UIVisualEffect?",
      "desc": "The visual effect that the configuration applies to the background."
    },
    {
      "name": "var strokeColor: UIColor?",
      "desc": "The color of the stroke."
    },
    {
      "name": "var strokeColorTransformer: UIConfigurationColorTransformer?",
      "desc": "The color transformer for resolving the stroke color."
    },
    {
      "name": "func resolvedStrokeColor(for: UIColor) -> UIColor",
      "desc": "Generates the resolved stroke color for the specified tint color, using the stroke color and color transformer."
    },
    {
      "name": "var strokeWidth: CGFloat",
      "desc": "The width of the stroke."
    },
    {
      "name": "var strokeOutset: CGFloat",
      "desc": "The outset (or inset, if negative) for the stroke."
    },
    {
      "name": "var image: UIImage?",
      "desc": "The image displayed in the view’s background."
    },
    {
      "name": "var imageContentMode: UIView.ContentMode",
      "desc": "A property that determines the layout of a background image in a view when its bounds change."
    },
    {
      "name": "func updated(for: UIConfigurationState) -> UIBackgroundConfiguration",
      "desc": "Generates a configuration for the specified state by applying the configuration’s default values for that state to any properties that you haven’t customized."
    },
    {
      "name": "static func == (UIBackgroundConfiguration, UIBackgroundConfiguration) -> Bool",
      "desc": "An operator for checking whether two background configurations are equal."
    },
    {
      "name": "static func != (UIBackgroundConfiguration, UIBackgroundConfiguration) -> Bool",
      "desc": "An operator for checking whether two background configurations are unequal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the background configuration by feeding them into the hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "var description: String",
      "desc": "A textual representation of this instance."
    },
    {
      "name": "var debugDescription: String",
      "desc": "A textual representation of this instance, suitable for debugging."
    },
    {
      "name": "var customMirror: Mirror",
      "desc": "The custom mirror for this instance."
    }
  ],
  "declaration": "struct UIBackgroundConfiguration",
  "conformsTo": [
    "CustomDebugStringConvertible",
    "CustomReflectable",
    "CustomStringConvertible",
    "Hashable"
  ]
}