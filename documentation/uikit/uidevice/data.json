{
  "path": "/documentation/uikit/uidevice",
  "type": "Class",
  "name": "UIDevice",
  "desc": "A representation of the current device.",
  "items": [
    {
      "name": "class var current: UIDevice",
      "desc": "An object that represents the current device."
    },
    {
      "name": "var isMultitaskingSupported: Bool",
      "desc": "A Boolean value that indicates whether the current device supports multitasking."
    },
    {
      "name": "var name: String",
      "desc": "The name of the device."
    },
    {
      "name": "var systemName: String",
      "desc": "The name of the operating system running on the device."
    },
    {
      "name": "var systemVersion: String",
      "desc": "The current version of the operating system."
    },
    {
      "name": "var model: String",
      "desc": "The model of the device."
    },
    {
      "name": "var localizedModel: String",
      "desc": "The model of the device as a localized string."
    },
    {
      "name": "var userInterfaceIdiom: UIUserInterfaceIdiom",
      "desc": "The style of interface to use on the current device."
    },
    {
      "name": "var identifierForVendor: UUID?",
      "desc": "An alphanumeric string that uniquely identifies a device to the appâ€™s vendor."
    },
    {
      "name": "var orientation: UIDeviceOrientation",
      "desc": "The physical orientation of the device."
    },
    {
      "name": "enum UIDeviceOrientation",
      "desc": "Constants that describe the physical orientation of the device."
    },
    {
      "name": "var isGeneratingDeviceOrientationNotifications: Bool",
      "desc": "A Boolean value that indicates whether the device generates orientation notifications."
    },
    {
      "name": "func beginGeneratingDeviceOrientationNotifications()",
      "desc": "Begins the generation of notifications of device orientation changes."
    },
    {
      "name": "func endGeneratingDeviceOrientationNotifications()",
      "desc": "Ends the generation of notifications of device orientation changes."
    },
    {
      "name": "var isPortrait: Bool",
      "desc": "A Boolean value that indicates whether the device is in a portrait orientation."
    },
    {
      "name": "var isLandscape: Bool",
      "desc": "A Boolean value that indicates whether the device is in a landscape orientation."
    },
    {
      "name": "var isFlat: Bool",
      "desc": "A Boolean value that indicates whether the specified orientation is face up or face down."
    },
    {
      "name": "var isValidInterfaceOrientation: Bool",
      "desc": "A Boolean value that indicates whether the specified orientation is one of the portrait or landscape orientations."
    },
    {
      "name": "var batteryLevel: Float",
      "desc": "The battery charge level for the device."
    },
    {
      "name": "var isBatteryMonitoringEnabled: Bool",
      "desc": "A Boolean value that indicates whether battery monitoring is enabled."
    },
    {
      "name": "var batteryState: UIDevice.BatteryState",
      "desc": "The battery state for the device."
    },
    {
      "name": "enum UIDevice.BatteryState",
      "desc": "Constants that describe the battery power state of the device."
    },
    {
      "name": "var isProximityMonitoringEnabled: Bool",
      "desc": "A Boolean value that indicates whether proximity monitoring is enabled."
    },
    {
      "name": "var proximityState: Bool",
      "desc": "A Boolean value that indicates whether the proximity sensor is close to the user."
    },
    {
      "name": "func playInputClick()",
      "desc": "Plays an input click in an enabled input view."
    },
    {
      "name": "enum UIUserInterfaceIdiom",
      "desc": "Constants that indicate the interface type for the device or an object that has a trait environment, such as a view and view controller."
    },
    {
      "name": "class let batteryLevelDidChangeNotification: NSNotification.Name",
      "desc": "A notification that posts when the battery level changes."
    },
    {
      "name": "class let batteryStateDidChangeNotification: NSNotification.Name",
      "desc": "A notification that posts when battery state changes."
    },
    {
      "name": "class let orientationDidChangeNotification: NSNotification.Name",
      "desc": "A notification that posts when the orientation of the device changes."
    },
    {
      "name": "class let proximityStateDidChangeNotification: NSNotification.Name",
      "desc": "A notification that posts when the state of the proximity sensor changes."
    }
  ],
  "declaration": "@MainActor class UIDevice : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}