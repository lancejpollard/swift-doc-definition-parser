{
  "path": "/documentation/uikit/nsparagraphstyle",
  "type": "Class",
  "name": "NSParagraphStyle",
  "desc": "The paragraph or ruler attributes for an attributed string.",
  "items": [
    {
      "name": "class var `default`: NSParagraphStyle",
      "desc": "The default paragraph style."
    },
    {
      "name": "var alignment: NSTextAlignment",
      "desc": "The text alignment of the paragraph."
    },
    {
      "name": "enum NSTextAlignment",
      "desc": "Constants that specify text alignment."
    },
    {
      "name": "var firstLineHeadIndent: CGFloat",
      "desc": "The indentation of the first line of the paragraph."
    },
    {
      "name": "var headIndent: CGFloat",
      "desc": "The indentation of the paragraph’s lines other than the first."
    },
    {
      "name": "var tailIndent: CGFloat",
      "desc": "The trailing indentation of the paragraph."
    },
    {
      "name": "var lineHeightMultiple: CGFloat",
      "desc": "The line height multiple."
    },
    {
      "name": "var maximumLineHeight: CGFloat",
      "desc": "The paragraph’s maximum line height."
    },
    {
      "name": "var minimumLineHeight: CGFloat",
      "desc": "The paragraph’s minimum line height."
    },
    {
      "name": "var lineSpacing: CGFloat",
      "desc": "The distance in points between the bottom of one line fragment and the top of the next."
    },
    {
      "name": "var paragraphSpacing: CGFloat",
      "desc": "Distance between the bottom of this paragraph and top of next."
    },
    {
      "name": "var paragraphSpacingBefore: CGFloat",
      "desc": "The distance between the paragraph’s top and the beginning of its text content."
    },
    {
      "name": "var tabStops: [NSTextTab]",
      "desc": "The text tab objects that represent the paragraph’s tab stops."
    },
    {
      "name": "enum NSParagraphStyle.TextTabType",
      "desc": "Constants that specify the type of tab stop."
    },
    {
      "name": "var defaultTabInterval: CGFloat",
      "desc": "The documentwide default tab interval."
    },
    {
      "name": "var textBlocks: [NSTextBlock]",
      "desc": "The text blocks that contain the paragraph."
    },
    {
      "name": "var textLists: [NSTextList]",
      "desc": "The text lists that contain the paragraph."
    },
    {
      "name": "var lineBreakMode: NSLineBreakMode",
      "desc": "The mode for breaking lines in the paragraph that don’t fit within a container."
    },
    {
      "name": "enum NSLineBreakMode",
      "desc": "Constants that specify what happens when a line is too long for a container."
    },
    {
      "name": "var lineBreakStrategy: NSParagraphStyle.LineBreakStrategy",
      "desc": "The strategy for breaking lines while laying out paragraphs."
    },
    {
      "name": "struct NSParagraphStyle.LineBreakStrategy",
      "desc": "Constants that specify how the text system breaks lines while laying out paragraphs."
    },
    {
      "name": "var hyphenationFactor: Float",
      "desc": "The paragraph’s threshold for hyphenation."
    },
    {
      "name": "var usesDefaultHyphenation: Bool",
      "desc": "A Boolean value that indicates whether the paragraph style uses the system hyphenation settings."
    },
    {
      "name": "var tighteningFactorForTruncation: Float",
      "desc": "The threshold for using tightening as an alternative to truncation."
    },
    {
      "name": "var allowsDefaultTighteningForTruncation: Bool",
      "desc": "A Boolean value that indicates whether the system tightens character spacing before truncating text."
    },
    {
      "name": "var headerLevel: Int",
      "desc": "The paragraph’s header level for HTML generation."
    },
    {
      "name": "class func defaultWritingDirection(forLanguage: String?) -> NSWritingDirection",
      "desc": "Returns the default writing direction for the specified language."
    },
    {
      "name": "var baseWritingDirection: NSWritingDirection",
      "desc": "The base writing direction for the paragraph."
    },
    {
      "name": "enum NSWritingDirection",
      "desc": "Constants that specify the writing direction."
    }
  ],
  "declaration": "class NSParagraphStyle : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSMutableCopying",
    "NSSecureCoding"
  ]
}