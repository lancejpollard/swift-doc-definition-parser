{
  "path": "/documentation/uikit/uibutton",
  "type": "Class",
  "name": "UIButton",
  "desc": "A control that executes your custom code in response to user interactions.",
  "items": [
    {
      "name": "init(frame: CGRect)",
      "desc": "Creates a new button with the specified frame."
    },
    {
      "name": "init(frame: CGRect, primaryAction: UIAction?)",
      "desc": "Creates a new button with the specified frame, registers the primary action event, and sets the title and image to the action’s title and image."
    },
    {
      "name": "init?(coder: NSCoder)",
      "desc": "Creates a new button with data in an unarchiver."
    },
    {
      "name": "init(type: UIButton.ButtonType)",
      "desc": "Creates and returns a new button of the specified type."
    },
    {
      "name": "init(type: UIButton.ButtonType, primaryAction: UIAction?)",
      "desc": "Creates a new button with the specified type, registers the primary action event, and sets the title and image to the action’s title and image."
    },
    {
      "name": "enum UIButton.ButtonType",
      "desc": "Specifies the style of a button."
    },
    {
      "name": "class func systemButton(with: UIImage, target: Any?, action: Selector?) -> Self",
      "desc": "Creates and returns a system type button with specified image, target, and action."
    },
    {
      "name": "init(configuration: UIButton.Configuration, primaryAction: UIAction?)",
      "desc": "Creates a new button with the specified configuration and registers the primary action event."
    },
    {
      "name": "struct UIButton.Configuration",
      "desc": "A configuration that specifies the appearance and behavior of a button and its contents."
    },
    {
      "name": "var configuration: UIButton.Configuration?",
      "desc": "The configuration for the button’s appearance."
    },
    {
      "name": "var automaticallyUpdatesConfiguration: Bool",
      "desc": "A Boolean value that determines whether the button configuration changes when button’s state changes."
    },
    {
      "name": "func setNeedsUpdateConfiguration()",
      "desc": "Requests the system update the button configuration."
    },
    {
      "name": "func updateConfiguration()",
      "desc": "Updates button configuration in response to button state change."
    },
    {
      "name": "var configurationUpdateHandler: UIButton.ConfigurationUpdateHandler?",
      "desc": "A closure that executes when the button state changes."
    },
    {
      "name": "typealias UIButton.ConfigurationUpdateHandler",
      "desc": "A closure to update the configuration of a button."
    },
    {
      "name": "var titleLabel: UILabel?",
      "desc": "A view that displays the value of the currentTitle property for a button."
    },
    {
      "name": "func title(for: UIControl.State) -> String?",
      "desc": "Returns the title associated with the specified state."
    },
    {
      "name": "func setTitle(String?, for: UIControl.State)",
      "desc": "Sets the title to use for the specified state."
    },
    {
      "name": "func attributedTitle(for: UIControl.State) -> NSAttributedString?",
      "desc": "Returns the styled title associated with the specified state."
    },
    {
      "name": "func setAttributedTitle(NSAttributedString?, for: UIControl.State)",
      "desc": "Sets the styled title to use for the specified state."
    },
    {
      "name": "func titleColor(for: UIControl.State) -> UIColor?",
      "desc": "Returns the title color used for a state."
    },
    {
      "name": "func setTitleColor(UIColor?, for: UIControl.State)",
      "desc": "Sets the color of the title to use for the specified state."
    },
    {
      "name": "func titleShadowColor(for: UIControl.State) -> UIColor?",
      "desc": "Returns the shadow color of the title used for a state."
    },
    {
      "name": "func setTitleShadowColor(UIColor?, for: UIControl.State)",
      "desc": "Sets the color of the title shadow to use for the specified state."
    },
    {
      "name": "func backgroundImage(for: UIControl.State) -> UIImage?",
      "desc": "Returns the background image used for a button state."
    },
    {
      "name": "func image(for: UIControl.State) -> UIImage?",
      "desc": "Returns the image used for a button state."
    },
    {
      "name": "func setBackgroundImage(UIImage?, for: UIControl.State)",
      "desc": "Sets the background image to use for the specified button state."
    },
    {
      "name": "func setImage(UIImage?, for: UIControl.State)",
      "desc": "Sets the image to use for the specified state."
    },
    {
      "name": "func preferredSymbolConfigurationForImage(in: UIControl.State) -> UIImage.SymbolConfiguration?",
      "desc": "Returns the preferred symbol configuration for a button state."
    },
    {
      "name": "func setPreferredSymbolConfiguration(UIImage.SymbolConfiguration?, forImageIn: UIControl.State)",
      "desc": "Sets the preferred symbol configuration for a button state."
    },
    {
      "name": "var tintColor: UIColor!",
      "desc": "The tint color to apply to the button title and image."
    },
    {
      "name": "var role: UIButton.Role",
      "desc": "The role of the button."
    },
    {
      "name": "enum UIButton.Role",
      "desc": "Constants that describe the role of the button."
    },
    {
      "name": "var behavioralStyle: UIBehavioralStyle",
      "desc": "The style that determines how the button behaves."
    },
    {
      "name": "var preferredBehavioralStyle: UIBehavioralStyle",
      "desc": "The preferred behavioral style."
    },
    {
      "name": "enum UIBehavioralStyle",
      "desc": "Constants that indicate how a control behaves in apps built with Mac Catalyst."
    },
    {
      "name": "var buttonType: UIButton.ButtonType",
      "desc": "The button type."
    },
    {
      "name": "var currentTitle: String?",
      "desc": "The current title that is displayed on the button."
    },
    {
      "name": "var currentAttributedTitle: NSAttributedString?",
      "desc": "The current styled title that is displayed on the button."
    },
    {
      "name": "var currentTitleColor: UIColor",
      "desc": "The color used to display the title."
    },
    {
      "name": "var currentTitleShadowColor: UIColor?",
      "desc": "The color of the title’s shadow."
    },
    {
      "name": "var currentImage: UIImage?",
      "desc": "The current image displayed on the button."
    },
    {
      "name": "var currentBackgroundImage: UIImage?",
      "desc": "The current background image displayed on the button."
    },
    {
      "name": "var currentPreferredSymbolConfiguration: UIImage.SymbolConfiguration?",
      "desc": "The current symbol size, style, and weight."
    },
    {
      "name": "var imageView: UIImageView?",
      "desc": "The button’s image view."
    },
    {
      "name": "var subtitleLabel: UILabel?",
      "desc": "The label that displays the text of the subtitle."
    },
    {
      "name": "var isPointerInteractionEnabled: Bool",
      "desc": "A Boolean that enables pointer interaction."
    },
    {
      "name": "var isHovered: Bool",
      "desc": "A Boolean value that indicates whether a pointer effect is active."
    },
    {
      "name": "var pointerStyleProvider: UIButton.PointerStyleProvider?",
      "desc": "A closure that returns the pointer style to use when the pointer hovers over the button."
    },
    {
      "name": "typealias UIButton.PointerStyleProvider",
      "desc": "A type alias defining a closure that returns a pointer style to apply to a button."
    },
    {
      "name": "var menu: UIMenu?",
      "desc": "A menu that the button displays."
    },
    {
      "name": "var isHeld: Bool",
      "desc": "A Boolean value that indicates whether the button menu is visible."
    },
    {
      "name": "var changesSelectionAsPrimaryAction: Bool",
      "desc": "A Boolean value that indicates whether the button tracks a selection, either through a menu or a toggle."
    }
  ],
  "declaration": "@MainActor class UIButton : UIControl",
  "inheritsFrom": [
    "UIControl"
  ],
  "conformsTo": [
    "NSCoding",
    "UIAccessibilityContentSizeCategoryImageAdjusting",
    "UISpringLoadedInteractionSupporting"
  ]
}