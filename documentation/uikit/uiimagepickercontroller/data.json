{
  "path": "/documentation/uikit/uiimagepickercontroller",
  "type": "Class",
  "name": "UIImagePickerController",
  "desc": "A view controller that manages the system interfaces for taking pictures, recording movies, and choosing items from the user's media library.",
  "items": [
    {
      "name": "var delegate: (UIImagePickerControllerDelegate & UINavigationControllerDelegate)?",
      "desc": "The image picker’s delegate object."
    },
    {
      "name": "protocol UIImagePickerControllerDelegate",
      "desc": "A set of methods that your delegate object must implement to interact with the image picker interface."
    },
    {
      "name": "class func availableMediaTypes(for: UIImagePickerController.SourceType) -> [String]?",
      "desc": "Retrieves the available media types for the specified source type."
    },
    {
      "name": "class func isSourceTypeAvailable(UIImagePickerController.SourceType) -> Bool",
      "desc": "Queries whether the device supports picking media using the specified source type."
    },
    {
      "name": "var sourceType: UIImagePickerController.SourceType",
      "desc": "The type of picker interface to be displayed by the controller."
    },
    {
      "name": "enum UIImagePickerController.SourceType",
      "desc": "Constants that describe the source to use when picking an image or when determining available media types."
    },
    {
      "name": "var mediaTypes: [String]",
      "desc": "An array that indicates the media types to be accessed by the media picker controller."
    },
    {
      "name": "var allowsEditing: Bool",
      "desc": "A Boolean value that indicates whether the user is allowed to edit a selected still image or movie."
    },
    {
      "name": "var videoQuality: UIImagePickerController.QualityType",
      "desc": "The video recording and transcoding quality."
    },
    {
      "name": "enum UIImagePickerController.QualityType",
      "desc": "Constants that describe video quality settings for movies that are recorded with the built-in camera, or that are transcoded when they’re displayed in the image picker."
    },
    {
      "name": "var videoMaximumDuration: TimeInterval",
      "desc": "The maximum duration, in seconds, for a video recording."
    },
    {
      "name": "var showsCameraControls: Bool",
      "desc": "A Boolean value that indicates whether the image picker displays the default camera controls."
    },
    {
      "name": "var cameraOverlayView: UIView?",
      "desc": "The view to display on top of the default image picker interface."
    },
    {
      "name": "var cameraViewTransform: CGAffineTransform",
      "desc": "The transform to apply to the camera’s preview image."
    },
    {
      "name": "func takePicture()",
      "desc": "Captures a still image using the camera."
    },
    {
      "name": "func startVideoCapture() -> Bool",
      "desc": "Starts video capture using the camera specified by the camera device property."
    },
    {
      "name": "func stopVideoCapture()",
      "desc": "Stops video capture."
    },
    {
      "name": "class func isCameraDeviceAvailable(UIImagePickerController.CameraDevice) -> Bool",
      "desc": "Queries whether the specified camera is available."
    },
    {
      "name": "var cameraDevice: UIImagePickerController.CameraDevice",
      "desc": "The camera used by the image picker controller."
    },
    {
      "name": "enum UIImagePickerController.CameraDevice",
      "desc": "Constants that specify the camera to use for image or movie capture."
    },
    {
      "name": "class func availableCaptureModes(for: UIImagePickerController.CameraDevice) -> [NSNumber]?",
      "desc": "Retrieves the capture modes supported by the specified camera device."
    },
    {
      "name": "var cameraCaptureMode: UIImagePickerController.CameraCaptureMode",
      "desc": "The capture mode used by the camera."
    },
    {
      "name": "enum UIImagePickerController.CameraCaptureMode",
      "desc": "Constants that specify the category of media for the camera to capture."
    },
    {
      "name": "class func isFlashAvailable(for: UIImagePickerController.CameraDevice) -> Bool",
      "desc": "Queries whether the specified camera has flash illumination capability."
    },
    {
      "name": "var cameraFlashMode: UIImagePickerController.CameraFlashMode",
      "desc": "The flash mode used by the active camera."
    },
    {
      "name": "enum UIImagePickerController.CameraFlashMode",
      "desc": "Constants that specify the flash mode to use with the active camera."
    }
  ],
  "declaration": "@MainActor class UIImagePickerController : UINavigationController",
  "inheritsFrom": [
    "UINavigationController"
  ],
  "conformsTo": [
    "NSCoding"
  ]
}