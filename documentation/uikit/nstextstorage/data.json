{
  "path": "/documentation/uikit/nstextstorage",
  "type": "Class",
  "name": "NSTextStorage",
  "desc": "The fundamental storage mechanism of TextKit that contains the text managed by the system.",
  "items": [
    {
      "name": "var delegate: NSTextStorageDelegate?",
      "desc": "The delegate for the text storage object."
    },
    {
      "name": "protocol NSTextStorageDelegate",
      "desc": "The optional methods that delegates of text storage objects implement to handle text-edit processing."
    },
    {
      "name": "var layoutManagers: [NSLayoutManager]",
      "desc": "The layout managers for the text storage object."
    },
    {
      "name": "func addLayoutManager(NSLayoutManager)",
      "desc": "Adds a layout manager to the text storage object’s set of layout managers."
    },
    {
      "name": "func removeLayoutManager(NSLayoutManager)",
      "desc": "Removes a layout manager from the text storage object’s set of layout managers."
    },
    {
      "name": "func edited(NSTextStorage.EditActions, range: NSRange, changeInLength: Int)",
      "desc": "Tracks changes made to the text storage object, allowing the text storage to record the full extent of changes."
    },
    {
      "name": "func processEditing()",
      "desc": "Cleans up changes to the text storage object and notifies its delegate and layout managers of changes."
    },
    {
      "name": "func invalidateAttributes(in: NSRange)",
      "desc": "Invalidates attributes in the specified range."
    },
    {
      "name": "func ensureAttributesAreFixed(in: NSRange)",
      "desc": "Ensures that attribute fixing occurs in the specified range."
    },
    {
      "name": "var fixesAttributesLazily: Bool",
      "desc": "A Boolean value that indicates whether the text storage object fixes attributes lazily."
    },
    {
      "name": "var editedMask: NSTextStorage.EditActions",
      "desc": "A mask that describes the kinds of edits pending for the text storage object."
    },
    {
      "name": "var editedRange: NSRange",
      "desc": "The range of text that contains changes."
    },
    {
      "name": "var changeInLength: Int",
      "desc": "The difference between the current length of the edited range and its length before editing."
    },
    {
      "name": "var attributeRuns: [NSTextStorage]",
      "desc": "The text storage contents as an array of attribute runs."
    },
    {
      "name": "var paragraphs: [NSTextStorage]",
      "desc": "The text storage contents as an array of paragraphs."
    },
    {
      "name": "var words: [NSTextStorage]",
      "desc": "The text storage contents as an array of words."
    },
    {
      "name": "var characters: [NSTextStorage]",
      "desc": "The text storage contents as an array of characters."
    },
    {
      "name": "var font: NSFont?",
      "desc": "The font for the text storage."
    },
    {
      "name": "var foregroundColor: NSColor?",
      "desc": "The color for the text."
    },
    {
      "name": "struct NSTextStorage.EditActions",
      "desc": "Constants that indicate the types of changes."
    },
    {
      "name": "class let willProcessEditingNotification: NSNotification.Name",
      "desc": "A notification that posts before a text storage begins processing edits."
    },
    {
      "name": "class let didProcessEditingNotification: NSNotification.Name",
      "desc": "A notification that posts after a text storage finishes processing edits."
    },
    {
      "name": "var textStorageObserver: NSTextStorageObserving?",
      "desc": "The observer for the text storage object."
    },
    {
      "name": "protocol NSTextStorageObserving",
      "desc": "Optional methods that delegates implement to handle editing and transaction processing."
    }
  ],
  "declaration": "class NSTextStorage : NSMutableAttributedString",
  "inheritsFrom": [
    "NSMutableAttributedString"
  ],
  "conformsTo": [
    "NSSecureCoding"
  ]
}