{
  "path": "/documentation/uikit/uicollectionviewlayoutinvalidationcontext",
  "type": "Class",
  "name": "UICollectionViewLayoutInvalidationContext",
  "desc": "A context object that declares which parts of your layout need to be updated when the layout is invalidated.",
  "items": [
    {
      "name": "var invalidateEverything: Bool",
      "desc": "A Boolean that indicates that all layout data should be marked as invalid."
    },
    {
      "name": "var invalidateDataSourceCounts: Bool",
      "desc": "A Boolean that indicates whether the layout should ask for new section and item counts."
    },
    {
      "name": "var contentOffsetAdjustment: CGPoint",
      "desc": "The delta value to be applied to the collection view’s content offset."
    },
    {
      "name": "var contentSizeAdjustment: CGSize",
      "desc": "The delta value to be applied to the collection view’s content size."
    },
    {
      "name": "func invalidateItems(at: [IndexPath])",
      "desc": "Adds the cells at the specified index paths to the list of invalid items."
    },
    {
      "name": "func invalidateSupplementaryElements(ofKind: String, at: [IndexPath])",
      "desc": "Adds the supplementary views at the specified index paths to the list of invalid items."
    },
    {
      "name": "func invalidateDecorationElements(ofKind: String, at: [IndexPath])",
      "desc": "Adds the decoration views at the specified index paths to the list of invalid items."
    },
    {
      "name": "var invalidatedItemIndexPaths: [IndexPath]?",
      "desc": "An array of index paths representing the cells that were invalidated."
    },
    {
      "name": "var invalidatedSupplementaryIndexPaths: [String : [IndexPath]]?",
      "desc": "A dictionary that identifies the supplementary views that were invalidated."
    },
    {
      "name": "var invalidatedDecorationIndexPaths: [String : [IndexPath]]?",
      "desc": "A dictionary that identifies the decoration views that were invalidated."
    },
    {
      "name": "var previousIndexPathsForInteractivelyMovingItems: [IndexPath]?",
      "desc": "An array of index paths representing the previous location of moving items in the collection view."
    },
    {
      "name": "var targetIndexPathsForInteractivelyMovingItems: [IndexPath]?",
      "desc": "An array of index paths representing the new location of moving items in the collection view."
    },
    {
      "name": "var interactiveMovementTarget: CGPoint",
      "desc": "The current point used to determine the placement of moving items."
    }
  ],
  "declaration": "@MainActor class UICollectionViewLayoutInvalidationContext : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}