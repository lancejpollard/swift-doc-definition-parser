{
  "path": "/documentation/uikit/nstextcontainer",
  "type": "Class",
  "name": "NSTextContainer",
  "desc": "A region where text layout occurs.",
  "items": [
    {
      "name": "init(size: CGSize)",
      "desc": "Initializes a text container with a specified bounding rectangle."
    },
    {
      "name": "init(coder: NSCoder)",
      "desc": "Creates a text container from data in an unarchiver."
    },
    {
      "name": "var layoutManager: NSLayoutManager?",
      "desc": "The text container’s layout manager."
    },
    {
      "name": "var textLayoutManager: NSTextLayoutManager?"
    },
    {
      "name": "func replaceLayoutManager(NSLayoutManager)",
      "desc": "Replaces the layout manager for the group of text system objects that contains the text container."
    },
    {
      "name": "var textView: NSTextView?",
      "desc": "The text container’s text view."
    },
    {
      "name": "var size: CGSize",
      "desc": "The size of the text container’s bounding rectangle."
    },
    {
      "name": "var exclusionPaths: [UIBezierPath]",
      "desc": "An array of path objects that represents the regions where text doesn’t display in the text container."
    },
    {
      "name": "var lineBreakMode: NSLineBreakMode",
      "desc": "The behavior of the last line inside the text container."
    },
    {
      "name": "var widthTracksTextView: Bool",
      "desc": "A Boolean that controls whether the text container adjusts the width of its bounding rectangle when its text view resizes."
    },
    {
      "name": "var heightTracksTextView: Bool",
      "desc": "A Boolean that controls whether the text container adjusts the height of its bounding rectangle when its text view resizes."
    },
    {
      "name": "var maximumNumberOfLines: Int",
      "desc": "The maximum number of lines that the text container can store."
    },
    {
      "name": "var lineFragmentPadding: CGFloat",
      "desc": "The value for the text inset within line fragment rectangles."
    },
    {
      "name": "func lineFragmentRect(forProposedRect: CGRect, at: Int, writingDirection: NSWritingDirection, remaining: UnsafeMutablePointer<CGRect>?) -> CGRect",
      "desc": "Returns the bounds of a line fragment rectangle inside the text container for the proposed rectangle."
    },
    {
      "name": "var isSimpleRectangularTextContainer: Bool",
      "desc": "A Boolean that indicates whether the text container’s region is a rectangle with no holes or gaps, and whose edges are parallel to the text view's coordinate system axes."
    }
  ],
  "declaration": "class NSTextContainer : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSSecureCoding",
    "NSTextLayoutOrientationProvider"
  ]
}