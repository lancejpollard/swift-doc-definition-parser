{
  "path": "/documentation/uikit/uilistcontentconfiguration/imageproperties",
  "type": "Structure",
  "name": "UIListContentConfiguration.ImageProperties",
  "desc": "Properties that affect the list content configurationâ€™s image.",
  "items": [
    {
      "name": "var preferredSymbolConfiguration: UIImage.SymbolConfiguration?",
      "desc": "The symbol configuration to use."
    },
    {
      "name": "var tintColor: UIColor?",
      "desc": "The tint color to apply to the image view."
    },
    {
      "name": "var tintColorTransformer: UIConfigurationColorTransformer?",
      "desc": "The color transformer for resolving the tint color."
    },
    {
      "name": "func resolvedTintColor(for: UIColor) -> UIColor",
      "desc": "Generates the resolved tint color for the specified tint color, using the tint color and color transformer."
    },
    {
      "name": "var cornerRadius: CGFloat",
      "desc": "The preferred corner radius, using a continuous corner curve, for the image."
    },
    {
      "name": "var maximumSize: CGSize",
      "desc": "The maximum size for the image."
    },
    {
      "name": "var reservedLayoutSize: CGSize",
      "desc": "The layout size that the system reserves for the image, and then centers the image within."
    },
    {
      "name": "static let standardDimension: CGFloat",
      "desc": "The system standard layout dimension for reserved layout size."
    },
    {
      "name": "var accessibilityIgnoresInvertColors: Bool",
      "desc": "A Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
    },
    {
      "name": "static func == (UIListContentConfiguration.ImageProperties, UIListContentConfiguration.ImageProperties) -> Bool",
      "desc": "An operator for checking whether two image properties structures are equal."
    },
    {
      "name": "static func != (UIListContentConfiguration.ImageProperties, UIListContentConfiguration.ImageProperties) -> Bool",
      "desc": "An operator for checking whether two image properties structures are unequal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the image properties structure by feeding them into the hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "var description: String",
      "desc": "A textual representation of this instance."
    },
    {
      "name": "var debugDescription: String",
      "desc": "A textual representation of this instance, suitable for debugging."
    },
    {
      "name": "var customMirror: Mirror",
      "desc": "The custom mirror for this instance."
    }
  ],
  "declaration": "struct UIListContentConfiguration.ImageProperties",
  "conformsTo": [
    "CustomDebugStringConvertible",
    "CustomReflectable",
    "CustomStringConvertible",
    "Hashable"
  ]
}