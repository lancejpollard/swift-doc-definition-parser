{
  "path": "/documentation/uikit/uiwindow",
  "type": "Class",
  "name": "UIWindow",
  "desc": "The backdrop for your app’s user interface and the object that dispatches events to your views.",
  "items": [
    {
      "name": "init(windowScene: UIWindowScene)",
      "desc": "Creates a window and associates it with the specified scene object."
    },
    {
      "name": "var rootViewController: UIViewController?",
      "desc": "The root view controller for the window."
    },
    {
      "name": "var windowLevel: UIWindow.Level",
      "desc": "The position of the window in the z-axis."
    },
    {
      "name": "struct UIWindow.Level",
      "desc": "The positioning of windows relative to each other."
    },
    {
      "name": "var canResizeToFitContent: Bool",
      "desc": "A Boolean value that indicates whether the window's constraint-based content determines its size."
    },
    {
      "name": "var isKeyWindow: Bool",
      "desc": "A Boolean value that indicates whether the window is the key window."
    },
    {
      "name": "var canBecomeKey: Bool",
      "desc": "A Boolean value that indicates whether the window can become the key window."
    },
    {
      "name": "func makeKeyAndVisible()",
      "desc": "Shows the window and makes it the key window."
    },
    {
      "name": "func makeKey()",
      "desc": "Makes the receiver the key window."
    },
    {
      "name": "func becomeKey()",
      "desc": "Tells the window that it’s the key window."
    },
    {
      "name": "func resignKey()",
      "desc": "Tells the window that it’s no longer the key window."
    },
    {
      "name": "var windowScene: UIWindowScene?",
      "desc": "The scene containing the window."
    },
    {
      "name": "var avDisplayManager: AVDisplayManager",
      "desc": "The display manager that handles requests for screen resolution, refresh rate, and HDR mode information."
    },
    {
      "name": "func convert(CGPoint, to: UIWindow?) -> CGPoint",
      "desc": "Converts a point from the current window’s coordinate system to the coordinate system of another window."
    },
    {
      "name": "func convert(CGPoint, from: UIWindow?) -> CGPoint",
      "desc": "Converts a point from the coordinate system of a given window to the coordinate system of the current window."
    },
    {
      "name": "func convert(CGRect, to: UIWindow?) -> CGRect",
      "desc": "Converts a rectangle from the current window’s coordinate system to the coordinate system of another window."
    },
    {
      "name": "func convert(CGRect, from: UIWindow?) -> CGRect",
      "desc": "Converts a rectangle from the coordinate system of another window to coordinate system of the current window."
    },
    {
      "name": "func sendEvent(UIEvent)",
      "desc": "Dispatches the specified event to its views."
    },
    {
      "name": "class let didBecomeVisibleNotification: NSNotification.Name",
      "desc": "Posted when a window becomes visible."
    },
    {
      "name": "class let didBecomeHiddenNotification: NSNotification.Name",
      "desc": "Posted when a window becomes hidden."
    },
    {
      "name": "class let didBecomeKeyNotification: NSNotification.Name",
      "desc": "Posted whenever a window becomes the key window."
    },
    {
      "name": "class let didResignKeyNotification: NSNotification.Name",
      "desc": "Posted whenever a window resigns its status as main window."
    },
    {
      "name": "class let keyboardWillShowNotification: NSNotification.Name",
      "desc": "Posted immediately prior to the display of the keyboard."
    },
    {
      "name": "class let keyboardDidShowNotification: NSNotification.Name",
      "desc": "Posted immediately after the display of the keyboard."
    },
    {
      "name": "class let keyboardWillHideNotification: NSNotification.Name",
      "desc": "Posted immediately prior to the dismissal of the keyboard."
    },
    {
      "name": "class let keyboardDidHideNotification: NSNotification.Name",
      "desc": "Posted immediately after the dismissal of the keyboard."
    },
    {
      "name": "class let keyboardWillChangeFrameNotification: NSNotification.Name",
      "desc": "Posted immediately prior to a change in the keyboard’s frame."
    },
    {
      "name": "class let keyboardDidChangeFrameNotification: NSNotification.Name",
      "desc": "Posted immediately after a change in the keyboard’s frame."
    },
    {
      "name": "class let keyboardAnimationCurveUserInfoKey: String",
      "desc": "A user info key to retrieve the animation curve that the system uses to animate the keyboard onto or off the screen."
    },
    {
      "name": "class let keyboardAnimationDurationUserInfoKey: String",
      "desc": "A user info key to retrieve the duration of the keyboard animation in seconds."
    },
    {
      "name": "class let keyboardIsLocalUserInfoKey: String",
      "desc": "A user info key to retrieve a Boolean value that indicates whether the keyboard belongs to the current app."
    },
    {
      "name": "class let keyboardFrameBeginUserInfoKey: String",
      "desc": "A user info key to retrieve the keyboard’s frame at the beginning of its animation."
    },
    {
      "name": "class let keyboardFrameEndUserInfoKey: String",
      "desc": "A user info key to retrieve the keyboard’s frame at the end of its animation."
    }
  ],
  "declaration": "@MainActor class UIWindow : UIView",
  "inheritsFrom": [
    "UIView"
  ]
}