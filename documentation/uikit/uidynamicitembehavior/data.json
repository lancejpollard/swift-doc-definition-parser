{
  "path": "/documentation/uikit/uidynamicitembehavior",
  "type": "Class",
  "name": "UIDynamicItemBehavior",
  "desc": "A base dynamic animation configuration for one or more dynamic items.",
  "items": [
    {
      "name": "func addItem(UIDynamicItem)",
      "desc": "Adds a dynamic item to the dynamic item behavior’s item array."
    },
    {
      "name": "init(items: [UIDynamicItem])",
      "desc": "Initializes a dynamic item behavior with an array of dynamic items."
    },
    {
      "name": "func removeItem(UIDynamicItem)",
      "desc": "Removes a specific dynamic item from the dynamic item behavior."
    },
    {
      "name": "var items: [UIDynamicItem]",
      "desc": "Returns the set of dynamic items you’ve added to the dynamic item behavior."
    },
    {
      "name": "func addAngularVelocity(CGFloat, for: UIDynamicItem)",
      "desc": "Adds a specified angular velocity to a dynamic item."
    },
    {
      "name": "func addLinearVelocity(CGPoint, for: UIDynamicItem)",
      "desc": "Adds a specified linear velocity to a dynamic item."
    },
    {
      "name": "var allowsRotation: Bool",
      "desc": "Specifies whether rotation is allowed for the behavior’s dynamic items."
    },
    {
      "name": "var angularResistance: CGFloat",
      "desc": "The angular resistance for the behavior’s dynamic items."
    },
    {
      "name": "func angularVelocity(for: UIDynamicItem) -> CGFloat",
      "desc": "Returns the angular velocity for a specified dynamic item."
    },
    {
      "name": "func linearVelocity(for: UIDynamicItem) -> CGPoint",
      "desc": "Returns the linear velocity for a specified dynamic item."
    },
    {
      "name": "var density: CGFloat",
      "desc": "The relative mass density of the behavior’s dynamic items."
    },
    {
      "name": "var elasticity: CGFloat",
      "desc": "The amount of elasticity applied to collisions for the behavior’s dynamic items."
    },
    {
      "name": "var friction: CGFloat",
      "desc": "The linear resistance for the behavior’s dynamic items when two slide against each other."
    },
    {
      "name": "var resistance: CGFloat",
      "desc": "The linear resistance for the behavior’s dynamic items, which reduces their linear velocity over time."
    },
    {
      "name": "var charge: CGFloat",
      "desc": "The charge associated with the item."
    },
    {
      "name": "var isAnchored: Bool",
      "desc": "A Boolean value indicating whether the item is anchored to its current position."
    }
  ],
  "declaration": "@MainActor class UIDynamicItemBehavior : UIDynamicBehavior",
  "inheritsFrom": [
    "UIDynamicBehavior"
  ]
}