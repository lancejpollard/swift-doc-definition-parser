{
  "path": "/documentation/uikit/uitextfield",
  "type": "Class",
  "name": "UITextField",
  "desc": "An object that displays an editable text area in your interface.",
  "items": [
    {
      "name": "var delegate: UITextFieldDelegate?",
      "desc": "The text field’s delegate."
    },
    {
      "name": "protocol UITextFieldDelegate",
      "desc": "A set of optional methods to manage the editing and validation of text in a text field object."
    },
    {
      "name": "var text: String?",
      "desc": "The text that the text field displays."
    },
    {
      "name": "var attributedText: NSAttributedString?",
      "desc": "The styled text that the text field displays."
    },
    {
      "name": "var placeholder: String?",
      "desc": "The string that displays when there is no other text in the text field."
    },
    {
      "name": "var attributedPlaceholder: NSAttributedString?",
      "desc": "The styled string that displays when there is no other text in the text field."
    },
    {
      "name": "var defaultTextAttributes: [NSAttributedString.Key : Any]",
      "desc": "The default attributes to apply to the text."
    },
    {
      "name": "var font: UIFont?",
      "desc": "The font of the text."
    },
    {
      "name": "var textColor: UIColor?",
      "desc": "The color of the text."
    },
    {
      "name": "var textAlignment: NSTextAlignment",
      "desc": "The technique for aligning the text."
    },
    {
      "name": "var typingAttributes: [NSAttributedString.Key : Any]?",
      "desc": "The attributes to apply to new text that the user enters."
    },
    {
      "name": "enum UITextField.BorderStyle",
      "desc": "The type of border around the text field."
    },
    {
      "name": "var adjustsFontSizeToFitWidth: Bool",
      "desc": "A Boolean value that indicates whether to reduce the font size to fit the text string into the text field’s bounding rectangle."
    },
    {
      "name": "var minimumFontSize: CGFloat",
      "desc": "The size of the smallest permissible font when drawing the text field’s text."
    },
    {
      "name": "var isEditing: Bool",
      "desc": "A Boolean value that indicates whether the text field is currently in edit mode."
    },
    {
      "name": "var clearsOnBeginEditing: Bool",
      "desc": "A Boolean value that determines whether the text field removes old text when editing begins."
    },
    {
      "name": "var clearsOnInsertion: Bool",
      "desc": "A Boolean value that determines whether inserting text replaces the previous contents."
    },
    {
      "name": "var allowsEditingTextAttributes: Bool",
      "desc": "A Boolean value that determines whether the user can edit the attributes of the text in the text field."
    },
    {
      "name": "enum UITextField.DidEndEditingReason",
      "desc": "Constants that indicate the reason for ending editing in a text field."
    },
    {
      "name": "class let didEndEditingReasonUserInfoKey: String",
      "desc": "A key that indicates the reason for ending editing in a text field."
    },
    {
      "name": "class let textDidBeginEditingNotification: NSNotification.Name",
      "desc": "A notification that alerts observers when an editing session begins in a text field."
    },
    {
      "name": "class let textDidChangeNotification: NSNotification.Name",
      "desc": "A notification that alerts observers when the text in a text field changes."
    },
    {
      "name": "class let textDidEndEditingNotification: NSNotification.Name",
      "desc": "A notification that alerts observers when the editing session ends for a text field."
    },
    {
      "name": "var borderStyle: UITextField.BorderStyle",
      "desc": "The border style for the text field."
    },
    {
      "name": "var background: UIImage?",
      "desc": "The image that represents the background appearance of the text field when it is in an enabled state."
    },
    {
      "name": "var disabledBackground: UIImage?",
      "desc": "The image that represents the background appearance of the text field when it is in a disabled state."
    },
    {
      "name": "var clearButtonMode: UITextField.ViewMode",
      "desc": "A mode that controls when the standard Clear button appears in the text field."
    },
    {
      "name": "var leftView: UIView?",
      "desc": "The overlay view that displays on the left (or leading) side of the text field."
    },
    {
      "name": "var leftViewMode: UITextField.ViewMode",
      "desc": "A mode that controls when the left overlay view appears in the text field."
    },
    {
      "name": "var rightView: UIView?",
      "desc": "The overlay view that displays on the right (or trailing) side of the text field."
    },
    {
      "name": "var rightViewMode: UITextField.ViewMode",
      "desc": "A mode that controls when the right overlay view appears in the text field."
    },
    {
      "name": "enum UITextField.ViewMode",
      "desc": "Constants that define when overlay views appear in a text field."
    },
    {
      "name": "func textRect(forBounds: CGRect) -> CGRect",
      "desc": "Returns the drawing rectangle for the text field’s text."
    },
    {
      "name": "func placeholderRect(forBounds: CGRect) -> CGRect",
      "desc": "Returns the drawing rectangle for the text field’s placeholder text."
    },
    {
      "name": "func drawPlaceholder(in: CGRect)",
      "desc": "Draws the text field’s placeholder text in the specified rectangle."
    },
    {
      "name": "func borderRect(forBounds: CGRect) -> CGRect",
      "desc": "Returns the text field’s border rectangle."
    },
    {
      "name": "func editingRect(forBounds: CGRect) -> CGRect",
      "desc": "Returns the rectangle for displaying editable text."
    },
    {
      "name": "func clearButtonRect(forBounds: CGRect) -> CGRect",
      "desc": "Returns the drawing rectangle for the built-in Clear button."
    },
    {
      "name": "func leftViewRect(forBounds: CGRect) -> CGRect",
      "desc": "Returns the drawing rectangle of the text field’s left overlay view."
    },
    {
      "name": "func rightViewRect(forBounds: CGRect) -> CGRect",
      "desc": "Returns the drawing location of the text field’s right overlay view."
    },
    {
      "name": "var inputView: UIView?",
      "desc": "The custom input view to display when the text field becomes the first responder."
    },
    {
      "name": "var inputAccessoryView: UIView?",
      "desc": "The custom accessory view to display when the text field becomes the first responder."
    },
    {
      "name": "var interactionState: Any"
    }
  ],
  "declaration": "@MainActor class UITextField : UIControl",
  "inheritsFrom": [
    "UIControl"
  ],
  "conformsTo": [
    "NSCoding",
    "UIContentSizeCategoryAdjusting",
    "UITextDraggable",
    "UITextDroppable",
    "UITextInput",
    "UITextPasteConfigurationSupporting"
  ]
}