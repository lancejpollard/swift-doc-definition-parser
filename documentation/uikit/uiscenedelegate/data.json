{
  "path": "/documentation/uikit/uiscenedelegate",
  "type": "Protocol",
  "name": "UISceneDelegate",
  "desc": "The core methods you use to respond to life-cycle events occurring within a scene.",
  "items": [
    {
      "name": "func scene(UIScene, willConnectTo: UISceneSession, options: UIScene.ConnectionOptions)",
      "desc": "Tells the delegate about the addition of a scene to the app."
    },
    {
      "name": "func sceneDidDisconnect(UIScene)",
      "desc": "Tells the delegate that UIKit removed a scene from your app."
    },
    {
      "name": "class UIScene.ConnectionOptions",
      "desc": "A data object containing information about the reasons why UIKit created the scene."
    },
    {
      "name": "func sceneWillEnterForeground(UIScene)",
      "desc": "Tells the delegate that the scene is about to begin running in the foreground and become visible to the user."
    },
    {
      "name": "func sceneDidBecomeActive(UIScene)",
      "desc": "Tells the delegate that the scene became active and is now responding to user events."
    },
    {
      "name": "func sceneWillResignActive(UIScene)",
      "desc": "Tells the delegate that the scene is about to resign the active state and stop responding to user events."
    },
    {
      "name": "func sceneDidEnterBackground(UIScene)",
      "desc": "Tells the delegate that the scene is running in the background and is no longer onscreen."
    },
    {
      "name": "func scene(UIScene, openURLContexts: Set<UIOpenURLContext>)",
      "desc": "Asks the delegate to open one or more URLs."
    },
    {
      "name": "func scene(UIScene, willContinueUserActivityWithType: String)",
      "desc": "Tells the delegate that it is about to receive Handoff-related data."
    },
    {
      "name": "func scene(UIScene, continue: NSUserActivity)",
      "desc": "Tells the delegate to handle the specified Handoff-related activity."
    },
    {
      "name": "func scene(UIScene, didFailToContinueUserActivityWithType: String, error: Error)",
      "desc": "Tells the delegate that the activity could not be continued."
    },
    {
      "name": "func stateRestorationActivity(for: UIScene) -> NSUserActivity?",
      "desc": "Returns a user activity object encapsulating the current state of the specified scene."
    },
    {
      "name": "func scene(UIScene, didUpdate: NSUserActivity)",
      "desc": "Tells the delegate that the specified activity object was updated."
    },
    {
      "name": "func scene(UIScene, restoreInteractionStateWith: NSUserActivity)"
    }
  ],
  "declaration": "@MainActor protocol UISceneDelegate",
  "inheritsFrom": [
    "NSObjectProtocol"
  ]
}