{
  "path": "/documentation/uikit/uibarbuttonitem",
  "type": "Class",
  "name": "UIBarButtonItem",
  "desc": "A specialized button for placement on a toolbar or tab bar.",
  "items": [
    {
      "name": "init(barButtonSystemItem: UIBarButtonItem.SystemItem, target: Any?, action: Selector?)",
      "desc": "Initializes a new item containing the specified system item."
    },
    {
      "name": "init(customView: UIView)",
      "desc": "Initializes a new item using the specified custom view."
    },
    {
      "name": "init(image: UIImage?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)",
      "desc": "Initializes a new item using the specified image and other properties."
    },
    {
      "name": "init(title: String?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)",
      "desc": "Initializes a new item using the specified title and other properties."
    },
    {
      "name": "init(title: String?, image: UIImage?, primaryAction: UIAction?, menu: UIMenu?)",
      "desc": "Initializes a new item using the specified title, image, action, and context menu."
    },
    {
      "name": "init(systemItem: UIBarButtonItem.SystemItem, primaryAction: UIAction?, menu: UIMenu?)",
      "desc": "Initializes a new item using the specified system item, action, and context menu."
    },
    {
      "name": "init(image: UIImage?, landscapeImagePhone: UIImage?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)",
      "desc": "Initializes a new item using the specified images and other properties."
    },
    {
      "name": "init()",
      "desc": "Initializes the bar button item to its default state."
    },
    {
      "name": "init?(coder: NSCoder)"
    },
    {
      "name": "class func fixedSpace(CGFloat) -> Self",
      "desc": "Creates a new fixed space item using the width."
    },
    {
      "name": "class func flexibleSpace() -> Self",
      "desc": "Creates a new flexible width space item."
    },
    {
      "name": "var target: AnyObject?",
      "desc": "The object that receives an action when the user selects the item."
    },
    {
      "name": "var action: Selector?",
      "desc": "The selector defining the action message to send to the target object when the user taps this bar button item."
    },
    {
      "name": "var style: UIBarButtonItem.Style",
      "desc": "The style of the item."
    },
    {
      "name": "var possibleTitles: Set<String>?",
      "desc": "The set of possible titles to display on the bar button."
    },
    {
      "name": "var width: CGFloat",
      "desc": "The width of the item."
    },
    {
      "name": "var customView: UIView?",
      "desc": "A custom view representing the item."
    },
    {
      "name": "var menu: UIMenu?",
      "desc": "The context menu for this button."
    },
    {
      "name": "var primaryAction: UIAction?",
      "desc": "The action to send to the target when the user selects the item."
    },
    {
      "name": "var tintColor: UIColor?",
      "desc": "The tint color to apply to the button item."
    },
    {
      "name": "func backButtonBackgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?",
      "desc": "Returns the back button background image for a specified control state and bar metrics."
    },
    {
      "name": "func setBackButtonBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)",
      "desc": "Sets the back button background image for a specified control state and bar metrics."
    },
    {
      "name": "func backButtonTitlePositionAdjustment(for: UIBarMetrics) -> UIOffset",
      "desc": "Returns the back button title offset for specified bar metrics."
    },
    {
      "name": "func setBackButtonTitlePositionAdjustment(UIOffset, for: UIBarMetrics)",
      "desc": "Sets the back button title offset for specified bar metrics."
    },
    {
      "name": "func backButtonBackgroundVerticalPositionAdjustment(for: UIBarMetrics) -> CGFloat",
      "desc": "Returns the back button vertical position offset for specified bar metrics."
    },
    {
      "name": "func setBackButtonBackgroundVerticalPositionAdjustment(CGFloat, for: UIBarMetrics)",
      "desc": "Sets the back button vertical position offset for specified bar metrics."
    },
    {
      "name": "func backgroundVerticalPositionAdjustment(for: UIBarMetrics) -> CGFloat",
      "desc": "Returns the background vertical position offset for specified bar metrics."
    },
    {
      "name": "func setBackgroundVerticalPositionAdjustment(CGFloat, for: UIBarMetrics)",
      "desc": "Sets the background vertical position offset for specified bar metrics."
    },
    {
      "name": "func backgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?",
      "desc": "Returns the background image for a specified state and bar metrics."
    },
    {
      "name": "func setBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)",
      "desc": "Sets the background image for a specified state and bar metrics."
    },
    {
      "name": "func backgroundImage(for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics) -> UIImage?",
      "desc": "Returns the background image for the specified state, style, and metrics."
    },
    {
      "name": "func setBackgroundImage(UIImage?, for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics)",
      "desc": "Sets the background image for the specified state, style, and metrics."
    },
    {
      "name": "func titlePositionAdjustment(for: UIBarMetrics) -> UIOffset",
      "desc": "Returns the title offset for specified bar metrics."
    },
    {
      "name": "func setTitlePositionAdjustment(UIOffset, for: UIBarMetrics)",
      "desc": "Sets the title offset for specified bar metrics."
    },
    {
      "name": "var buttonGroup: UIBarButtonItemGroup?",
      "desc": "The group on the shortcuts bar that the button belongs to."
    },
    {
      "name": "enum UIBarButtonItem.SystemItem",
      "desc": "Defines system-supplied images for bar button items."
    },
    {
      "name": "enum UIBarButtonItem.Style",
      "desc": "Specifies the style of an item."
    },
    {
      "name": "var changesSelectionAsPrimaryAction: Bool"
    },
    {
      "name": "var isSelected: Bool"
    }
  ],
  "declaration": "@MainActor class UIBarButtonItem : UIBarItem",
  "inheritsFrom": [
    "UIBarItem"
  ],
  "conformsTo": [
    "NSCoding",
    "UISpringLoadedInteractionSupporting"
  ]
}