{
  "path": "/documentation/uikit/uinavigationcontroller",
  "type": "Class",
  "name": "UINavigationController",
  "desc": "A container view controller that defines a stack-based scheme for navigating hierarchical content.",
  "items": [
    {
      "name": "init(rootViewController: UIViewController)",
      "desc": "Initializes and returns a newly created navigation controller."
    },
    {
      "name": "init(navigationBarClass: AnyClass?, toolbarClass: AnyClass?)",
      "desc": "Initializes and returns a newly created navigation controller that uses your custom bar subclasses."
    },
    {
      "name": "init(nibName: String?, bundle: Bundle?)"
    },
    {
      "name": "init?(coder: NSCoder)"
    },
    {
      "name": "var delegate: UINavigationControllerDelegate?",
      "desc": "The delegate of the navigation controller object."
    },
    {
      "name": "protocol UINavigationControllerDelegate",
      "desc": "Use a navigation controller delegate (a custom object that implements this protocol) to modify behavior when a view controller is pushed or popped from the navigation stack of a UINavigationController object."
    },
    {
      "name": "var topViewController: UIViewController?",
      "desc": "The view controller at the top of the navigation stack."
    },
    {
      "name": "var visibleViewController: UIViewController?",
      "desc": "The view controller associated with the currently visible view in the navigation interface."
    },
    {
      "name": "var viewControllers: [UIViewController]",
      "desc": "The view controllers currently on the navigation stack."
    },
    {
      "name": "func setViewControllers([UIViewController], animated: Bool)",
      "desc": "Replaces the view controllers currently managed by the navigation controller with the specified items."
    },
    {
      "name": "func pushViewController(UIViewController, animated: Bool)",
      "desc": "Pushes a view controller onto the receiver’s stack and updates the display."
    },
    {
      "name": "func popViewController(animated: Bool) -> UIViewController?",
      "desc": "Pops the top view controller from the navigation stack and updates the display."
    },
    {
      "name": "func popToRootViewController(animated: Bool) -> [UIViewController]?",
      "desc": "Pops all the view controllers on the stack except the root view controller and updates the display."
    },
    {
      "name": "func popToViewController(UIViewController, animated: Bool) -> [UIViewController]?",
      "desc": "Pops view controllers until the specified view controller is at the top of the navigation stack."
    },
    {
      "name": "var interactivePopGestureRecognizer: UIGestureRecognizer?",
      "desc": "The gesture recognizer responsible for popping the top view controller off the navigation stack."
    },
    {
      "name": "var navigationBar: UINavigationBar",
      "desc": "The navigation bar managed by the navigation controller."
    },
    {
      "name": "func setNavigationBarHidden(Bool, animated: Bool)",
      "desc": "Sets whether the navigation bar is hidden."
    },
    {
      "name": "var toolbar: UIToolbar!",
      "desc": "The custom toolbar associated with the navigation controller."
    },
    {
      "name": "func setToolbarHidden(Bool, animated: Bool)",
      "desc": "Changes the visibility of the navigation controller’s built-in toolbar."
    },
    {
      "name": "var isToolbarHidden: Bool",
      "desc": "A Boolean indicating whether the navigation controller’s built-in toolbar is visible."
    },
    {
      "name": "class let hideShowBarDuration: CGFloat",
      "desc": "This variable specifies the duration when animating the navigation bar. Note that this is a constant value, so it cannot be set."
    },
    {
      "name": "var hidesBarsOnTap: Bool",
      "desc": "A Boolean value indicating whether the navigation controller allows hiding of its bars using a tap gesture."
    },
    {
      "name": "var hidesBarsOnSwipe: Bool",
      "desc": "A Boolean value indicating whether the navigation bar hides its bars in response to a swipe gesture."
    },
    {
      "name": "var hidesBarsWhenVerticallyCompact: Bool",
      "desc": "A Boolean value indicating whether the navigation controller hides its bars in a vertically compact environment."
    },
    {
      "name": "var hidesBarsWhenKeyboardAppears: Bool",
      "desc": "A Boolean value indicating whether the navigation controller hides its bars when the keyboard appears."
    },
    {
      "name": "var isNavigationBarHidden: Bool",
      "desc": "A Boolean value that indicates whether the navigation bar is hidden."
    },
    {
      "name": "var barHideOnTapGestureRecognizer: UITapGestureRecognizer",
      "desc": "The gesture recognizer used to hide and show the navigation and toolbar."
    },
    {
      "name": "var barHideOnSwipeGestureRecognizer: UIPanGestureRecognizer",
      "desc": "The gesture recognizer used to hide the navigation bar and toolbar."
    },
    {
      "name": "func show(UIViewController, sender: Any?)",
      "desc": "Presents the specified view controller in the navigation interface."
    }
  ],
  "declaration": "@MainActor class UINavigationController : UIViewController",
  "inheritsFrom": [
    "UIViewController"
  ]
}