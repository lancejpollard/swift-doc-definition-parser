{
  "path": "/documentation/uikit/nslayoutanchor",
  "type": "Generic Class",
  "name": "NSLayoutAnchor",
  "desc": "A factory class for creating layout constraint objects using a fluent API.",
  "items": [
    {
      "name": "func constraint(equalTo: NSLayoutAnchor<AnchorType>) -> NSLayoutConstraint",
      "desc": "Returns a constraint that defines one item’s attribute as equal to another."
    },
    {
      "name": "func constraint(equalTo: NSLayoutAnchor<AnchorType>, constant: CGFloat) -> NSLayoutConstraint",
      "desc": "Returns a constraint that defines one item’s attribute as equal to another item’s attribute plus a constant offset."
    },
    {
      "name": "func constraint(greaterThanOrEqualTo: NSLayoutAnchor<AnchorType>) -> NSLayoutConstraint",
      "desc": "Returns a constraint that defines one item’s attribute as greater than or equal to another."
    },
    {
      "name": "func constraint(greaterThanOrEqualTo: NSLayoutAnchor<AnchorType>, constant: CGFloat) -> NSLayoutConstraint",
      "desc": "Returns a constraint that defines one item’s attribute as greater than or equal to another item’s attribute plus a constant offset."
    },
    {
      "name": "func constraint(lessThanOrEqualTo: NSLayoutAnchor<AnchorType>) -> NSLayoutConstraint",
      "desc": "Returns a constraint that defines one item’s attribute as less than or equal to another."
    },
    {
      "name": "func constraint(lessThanOrEqualTo: NSLayoutAnchor<AnchorType>, constant: CGFloat) -> NSLayoutConstraint",
      "desc": "Returns a constraint that defines one item’s attribute as less than or equal to another item’s attribute plus a constant offset."
    },
    {
      "name": "var constraintsAffectingLayout: [NSLayoutConstraint]",
      "desc": "The constraints that impact the layout of the anchor."
    },
    {
      "name": "var hasAmbiguousLayout: Bool",
      "desc": "A Boolean value indicating whether the constraints impacting the anchor specify its location ambiguously."
    },
    {
      "name": "var name: String",
      "desc": "The name assigned to the anchor for debugging purposes."
    },
    {
      "name": "var item: AnyObject?",
      "desc": "The layout item used to calculate the anchor's position."
    }
  ],
  "declaration": "@MainActor class NSLayoutAnchor<AnchorType> : NSObject where AnchorType : AnyObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCoding",
    "NSCopying"
  ]
}