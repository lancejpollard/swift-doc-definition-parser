{
  "path": "/documentation/uikit/uicolor",
  "type": "Class",
  "name": "UIColor",
  "desc": "An object that stores color data and sometimes opacity.",
  "items": [
    {
      "name": "func set()",
      "desc": "Sets the color of subsequent stroke and fill operations to the color that the receiver represents."
    },
    {
      "name": "func setFill()",
      "desc": "Sets the color of subsequent fill operations to the color that the receiver represents."
    },
    {
      "name": "func setStroke()",
      "desc": "Sets the color of subsequent stroke operations to the color that the receiver represents."
    },
    {
      "name": "var cgColor: CGColor",
      "desc": "The Quartz color that corresponds to the color object."
    },
    {
      "name": "var ciColor: CIColor",
      "desc": "The Core Image color that corresponds to the color object."
    },
    {
      "name": "func getHue(UnsafeMutablePointer<CGFloat>?, saturation: UnsafeMutablePointer<CGFloat>?, brightness: UnsafeMutablePointer<CGFloat>?, alpha: UnsafeMutablePointer<CGFloat>?) -> Bool",
      "desc": "Returns the components that form the color in the HSB color space."
    },
    {
      "name": "func getRed(UnsafeMutablePointer<CGFloat>?, green: UnsafeMutablePointer<CGFloat>?, blue: UnsafeMutablePointer<CGFloat>?, alpha: UnsafeMutablePointer<CGFloat>?) -> Bool",
      "desc": "Returns the components that form the color in the RGB color space."
    },
    {
      "name": "func getWhite(UnsafeMutablePointer<CGFloat>?, alpha: UnsafeMutablePointer<CGFloat>?) -> Bool",
      "desc": "Returns the grayscale components of the color."
    },
    {
      "name": "var accessibilityName: String",
      "desc": "A localized description of the color for accessibility attributes."
    },
    {
      "name": "func resolvedColor(with: UITraitCollection) -> UIColor",
      "desc": "Returns the version of the current color that results from the specified traits."
    },
    {
      "name": "class var systemCyan: UIColor"
    },
    {
      "name": "class var systemMint: UIColor"
    },
    {
      "name": "class var tintColor: UIColor"
    }
  ],
  "declaration": "class UIColor : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSItemProviderReading",
    "NSItemProviderWriting",
    "NSSecureCoding"
  ]
}