{
  "path": "/documentation/contacts/cncontactformatter",
  "type": "Class",
  "name": "CNContactFormatter",
  "desc": "An object that you use to format contact information before displaying it to the user.",
  "items": [
    {
      "name": "func attributedString(from: CNContact, defaultAttributes: [AnyHashable : Any]?) -> NSAttributedString?",
      "desc": "Formats the contact name as an attributed string."
    },
    {
      "name": "class func attributedString(from: CNContact, style: CNContactFormatterStyle, defaultAttributes: [AnyHashable : Any]?) -> NSAttributedString?",
      "desc": "Formats the contact name as an attributed string."
    },
    {
      "name": "func string(from: CNContact) -> String?",
      "desc": "Formats the contact name."
    },
    {
      "name": "class func string(from: CNContact, style: CNContactFormatterStyle) -> String?",
      "desc": "Returns the contact name, formatted with the specified formatter."
    },
    {
      "name": "var style: CNContactFormatterStyle",
      "desc": "The formatting style for the contact name."
    },
    {
      "name": "enum CNContactFormatterStyle",
      "desc": "The formatting styles for contact names."
    },
    {
      "name": "class func descriptorForRequiredKeys(for: CNContactFormatterStyle) -> CNKeyDescriptor",
      "desc": "Returns the required key descriptor for the specified formatting style of the contact."
    },
    {
      "name": "class func delimiter(for: CNContact) -> String",
      "desc": "Returns the delimiter to use between name components."
    },
    {
      "name": "class func nameOrder(for: CNContact) -> CNContactDisplayNameOrder",
      "desc": "Returns the display name order."
    },
    {
      "name": "enum CNContactDisplayNameOrder",
      "desc": "The formatting orders for contact names component."
    },
    {
      "name": "class var descriptorForRequiredKeysForDelimiter: CNKeyDescriptor"
    },
    {
      "name": "class var descriptorForRequiredKeysForNameOrder: CNKeyDescriptor"
    }
  ],
  "declaration": "class CNContactFormatter : Formatter",
  "inheritsFrom": [
    "Formatter"
  ],
  "conformsTo": [
    "NSSecureCoding"
  ]
}