{
  "path": "/documentation/contacts/cnerror/code",
  "type": "Enumeration",
  "name": "CNError.Code",
  "desc": "Error codes that may be returned when using the methods of the Contacts framework.",
  "items": [
    {
      "name": "case communicationError",
      "desc": "Communication error."
    },
    {
      "name": "case dataAccessError",
      "desc": "Data access error."
    },
    {
      "name": "case authorizationDenied",
      "desc": "Authentication denied error."
    },
    {
      "name": "case noAccessableWritableContainers"
    },
    {
      "name": "case recordDoesNotExist"
    },
    {
      "name": "case insertedRecordAlreadyExists"
    },
    {
      "name": "case containmentCycle",
      "desc": "Code containment cycle error."
    },
    {
      "name": "case containmentScope",
      "desc": "Code containment scope error."
    },
    {
      "name": "case parentRecordDoesNotExist",
      "desc": "The contact does not exist error."
    },
    {
      "name": "case recordIdentifierInvalid"
    },
    {
      "name": "case validationMultipleErrors",
      "desc": "Multiple validation error."
    },
    {
      "name": "case validationTypeMismatch",
      "desc": "Type mismatch validation error."
    },
    {
      "name": "case validationConfigurationError",
      "desc": "Configuration validation error."
    },
    {
      "name": "case predicateInvalid",
      "desc": "Invalid predicate error."
    },
    {
      "name": "case policyViolation",
      "desc": "Policy validation error."
    },
    {
      "name": "case clientIdentifierInvalid"
    },
    {
      "name": "case clientIdentifierDoesNotExist"
    },
    {
      "name": "case vCardMalformed"
    },
    {
      "name": "case vCardSummarizationError"
    },
    {
      "name": "case changeHistoryExpired"
    },
    {
      "name": "case changeHistoryInvalidAnchor"
    },
    {
      "name": "case clientIdentifierCollision"
    },
    {
      "name": "case featureDisabledByUser"
    },
    {
      "name": "case parentContainerNotWritable"
    },
    {
      "name": "case recordNotWritable"
    },
    {
      "name": "case unauthorizedKeys"
    },
    {
      "name": "case changeHistoryInvalidFetchRequest"
    }
  ],
  "declaration": "enum CNError.Code : Int, _ErrorCodeProtocol, @unchecked Sendable",
  "conformsTo": [
    "Sendable"
  ]
}