{
  "path": "/documentation/contacts/cnerror",
  "type": "Structure",
  "name": "CNError",
  "desc": "Error information that may be returned when using the methods of the Contacts framework.",
  "items": [
    {
      "name": "static var authorizationDenied: CNError.Code"
    },
    {
      "name": "static var changeHistoryExpired: CNError.Code"
    },
    {
      "name": "static var changeHistoryInvalidAnchor: CNError.Code"
    },
    {
      "name": "static var clientIdentifierCollision: CNError.Code"
    },
    {
      "name": "static var clientIdentifierDoesNotExist: CNError.Code"
    },
    {
      "name": "static var clientIdentifierInvalid: CNError.Code"
    },
    {
      "name": "static var communicationError: CNError.Code"
    },
    {
      "name": "static var containmentCycle: CNError.Code"
    },
    {
      "name": "static var containmentScope: CNError.Code"
    },
    {
      "name": "static var dataAccessError: CNError.Code"
    },
    {
      "name": "static var errorDomain: String"
    },
    {
      "name": "static var insertedRecordAlreadyExists: CNError.Code"
    },
    {
      "name": "static var noAccessableWritableContainers: CNError.Code"
    },
    {
      "name": "static var parentRecordDoesNotExist: CNError.Code"
    },
    {
      "name": "static var policyViolation: CNError.Code"
    },
    {
      "name": "static var predicateInvalid: CNError.Code"
    },
    {
      "name": "static var recordDoesNotExist: CNError.Code"
    },
    {
      "name": "static var recordIdentifierInvalid: CNError.Code"
    },
    {
      "name": "static var unauthorizedKeys: CNError.Code"
    },
    {
      "name": "static var vCardMalformed: CNError.Code"
    },
    {
      "name": "static var vCardSummarizationError: CNError.Code"
    },
    {
      "name": "static var validationConfigurationError: CNError.Code"
    },
    {
      "name": "static var validationMultipleErrors: CNError.Code"
    },
    {
      "name": "static var validationTypeMismatch: CNError.Code"
    },
    {
      "name": "static var featureDisabledByUser: CNError.Code"
    },
    {
      "name": "static var parentContainerNotWritable: CNError.Code"
    },
    {
      "name": "static var recordNotWritable: CNError.Code"
    },
    {
      "name": "static var errorDomain: String"
    },
    {
      "name": "var affectedRecordIdentifiers: [String]?"
    },
    {
      "name": "var affectedRecords: [AnyObject]?"
    },
    {
      "name": "var errorCode: Int"
    },
    {
      "name": "var errorUserInfo: [String : Any]"
    },
    {
      "name": "var keyPaths: [String]?"
    },
    {
      "name": "var localizedDescription: String"
    },
    {
      "name": "static func != (CNError, CNError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "static func == (CNError, CNError) -> Bool"
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "static var changeHistoryInvalidFetchRequest: CNError.Code"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "enum CNError.Code",
      "desc": "Error codes that may be returned when using the methods of the Contacts framework."
    }
  ],
  "declaration": "struct CNError"
}