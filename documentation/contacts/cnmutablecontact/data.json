{
  "path": "/documentation/contacts/cnmutablecontact",
  "type": "Class",
  "name": "CNMutableContact",
  "desc": "A mutable object that stores information about a single contact, such as the contact's first name, phone numbers, and addresses.",
  "items": [
    {
      "name": "var contactType: CNContactType",
      "desc": "An enum identifying the contact type."
    },
    {
      "name": "var namePrefix: String",
      "desc": "The name prefix of the contact."
    },
    {
      "name": "var givenName: String",
      "desc": "The given name of the contact."
    },
    {
      "name": "var middleName: String",
      "desc": "The middle name of the contact."
    },
    {
      "name": "var familyName: String",
      "desc": "The family name of the contact."
    },
    {
      "name": "var previousFamilyName: String",
      "desc": "The previous family name of the contact."
    },
    {
      "name": "var nameSuffix: String",
      "desc": "The name suffix of the contact."
    },
    {
      "name": "var nickname: String",
      "desc": "The nickname of the contact."
    },
    {
      "name": "var phoneticGivenName: String",
      "desc": "The phonetic given name of the contact."
    },
    {
      "name": "var phoneticMiddleName: String",
      "desc": "The phonetic middle name of the contact."
    },
    {
      "name": "var phoneticFamilyName: String",
      "desc": "The phonetic family name of the contact."
    },
    {
      "name": "var jobTitle: String",
      "desc": "The contactâ€™s job title."
    },
    {
      "name": "var departmentName: String",
      "desc": "The name of the department associated with the contact."
    },
    {
      "name": "var organizationName: String",
      "desc": "The name of the organization associated with the contact."
    },
    {
      "name": "var phoneticOrganizationName: String",
      "desc": "The phonetic name of the organization associated with the contact."
    },
    {
      "name": "var postalAddresses: [CNLabeledValue<CNPostalAddress>]",
      "desc": "An array of labeled postal addresses for a contact."
    },
    {
      "name": "var emailAddresses: [CNLabeledValue<NSString>]",
      "desc": "An array of labeled email addresses for the contact."
    },
    {
      "name": "var urlAddresses: [CNLabeledValue<NSString>]",
      "desc": "An array of labeled URL addresses for a contact."
    },
    {
      "name": "var phoneNumbers: [CNLabeledValue<CNPhoneNumber>]",
      "desc": "An array of labeled phone numbers for a contact."
    },
    {
      "name": "var socialProfiles: [CNLabeledValue<CNSocialProfile>]",
      "desc": "An array of labeled social profiles for a contact."
    },
    {
      "name": "var dates: [CNLabeledValue<NSDateComponents>]",
      "desc": "An array containing labeled Gregorian dates."
    },
    {
      "name": "var nonGregorianBirthday: DateComponents?",
      "desc": "A date component for the non-Gregorian birthday of the contact."
    },
    {
      "name": "var birthday: DateComponents?",
      "desc": "A date component for the Gregorian birthday of the contact."
    },
    {
      "name": "var note: String",
      "desc": "A string containing notes for the contact."
    },
    {
      "name": "var imageData: Data?",
      "desc": "The profile picture of a contact."
    },
    {
      "name": "var contactRelations: [CNLabeledValue<CNContactRelation>]",
      "desc": "An array of labeled contact relations for the contact."
    },
    {
      "name": "var instantMessageAddresses: [CNLabeledValue<CNInstantMessageAddress>]",
      "desc": "An array of labeled IM addresses for the contact."
    }
  ],
  "declaration": "class CNMutableContact : CNContact",
  "inheritsFrom": [
    "CNContact"
  ]
}