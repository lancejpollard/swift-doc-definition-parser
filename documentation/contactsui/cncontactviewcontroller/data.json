{
  "path": "/documentation/contactsui/cncontactviewcontroller",
  "type": "Class",
  "name": "CNContactViewController",
  "desc": "A view controller that displays a new, unknown, or existing contact.",
  "items": [
    {
      "name": "init(for: CNContact)",
      "desc": "Initializes a view controller for an existing contact."
    },
    {
      "name": "init(forUnknownContact: CNContact)",
      "desc": "Initializes a view controller for an unknown contact."
    },
    {
      "name": "init(forNewContact: CNContact?)",
      "desc": "Initializes a view controller for a new contact."
    },
    {
      "name": "var delegate: CNContactViewControllerDelegate?",
      "desc": "The delegate to be notified."
    },
    {
      "name": "protocol CNContactViewControllerDelegate",
      "desc": "Methods you use to respond to user interactions with a contact view controller."
    },
    {
      "name": "class func descriptorForRequiredKeys() -> CNKeyDescriptor",
      "desc": "Returns the descriptor for all the keys that must be fetched on the contact before setting it on the view controller."
    },
    {
      "name": "var contact: CNContact",
      "desc": "The contact being displayed."
    },
    {
      "name": "var alternateName: String?",
      "desc": "The name to use if the contact has no display name."
    },
    {
      "name": "var message: String?",
      "desc": "The message displayed under the name of the contact."
    },
    {
      "name": "var displayedPropertyKeys: [Any]?",
      "desc": "The contact property keys to display."
    },
    {
      "name": "var parentGroup: CNGroup?",
      "desc": "The group in which to add a new contact."
    },
    {
      "name": "var parentContainer: CNContainer?",
      "desc": "The container in which to add a new contact."
    },
    {
      "name": "var contactStore: CNContactStore?",
      "desc": "The contact store from which the contact was fetched or to which it will be saved."
    },
    {
      "name": "var allowsEditing: Bool",
      "desc": "Determines whether the user can edit the contactâ€™s information."
    },
    {
      "name": "var allowsActions: Bool",
      "desc": "Determines whether to display buttons for actions such as sending a text message or initiating a FaceTime call."
    },
    {
      "name": "var shouldShowLinkedContacts: Bool",
      "desc": "Determines whether to display data from contacts that are linked to the contact being displayed."
    },
    {
      "name": "func highlightProperty(withKey: String, identifier: String?)",
      "desc": "Highlights the property of the contact being displayed."
    }
  ],
  "declaration": "class CNContactViewController : UIViewController",
  "inheritsFrom": [
    "NSViewController",
    "UIViewController"
  ]
}