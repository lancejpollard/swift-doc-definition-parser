{
  "path": "/documentation/appkit/nstouchbaritem/identifier",
  "type": "Structure",
  "name": "NSTouchBarItem.Identifier",
  "desc": "No overview available.",
  "items": [
    {
      "name": "static let fixedSpaceSmall: NSTouchBarItem.Identifier",
      "desc": "The identifier of an item appropriate for use as a small space in a touch bar."
    },
    {
      "name": "static let fixedSpaceLarge: NSTouchBarItem.Identifier",
      "desc": "The identifier of an item appropriate for use as a large space in a touch bar."
    },
    {
      "name": "static let flexibleSpace: NSTouchBarItem.Identifier",
      "desc": "The identifier of an item appropriate for use as a flexible space in a touch bar."
    },
    {
      "name": "static let otherItemsProxy: NSTouchBarItem.Identifier",
      "desc": "The identifier of the special \"other items proxy\", which is used to nest touch bars up the responder chain."
    },
    {
      "name": "static let candidateList: NSTouchBarItem.Identifier",
      "desc": "The standard identifier for an NSCandidateListTouchBarItem."
    },
    {
      "name": "static let characterPicker: NSTouchBarItem.Identifier",
      "desc": "The standard identifier for selecting special characters such as Emoji."
    },
    {
      "name": "static let textFormat: NSTouchBarItem.Identifier",
      "desc": "The identifier for a group of text format controls."
    },
    {
      "name": "static let textAlignment: NSTouchBarItem.Identifier",
      "desc": "The identifier for a touch bar item used to select the text alignment."
    },
    {
      "name": "static let textColorPicker: NSTouchBarItem.Identifier",
      "desc": "The identifier for a touch bar item used to select the text color."
    },
    {
      "name": "static let textList: NSTouchBarItem.Identifier",
      "desc": "The identifier for a touch bar item used to control the text list style."
    },
    {
      "name": "static let textStyle: NSTouchBarItem.Identifier",
      "desc": "The identifier for a touch bar item used to control the text style."
    },
    {
      "name": "init(String)",
      "desc": "Initialize and return a touch bar item identifier with the specified custom name."
    },
    {
      "name": "init(rawValue: String)"
    }
  ],
  "declaration": "struct Identifier, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}