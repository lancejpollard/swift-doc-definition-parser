{
  "path": "/documentation/appkit/nstoolbaritem",
  "type": "Class",
  "name": "NSToolbarItem",
  "desc": "An item in a window’s toolbar.",
  "items": [
    {
      "name": "init(itemIdentifier: NSToolbarItem.Identifier)",
      "desc": "Initialize the receiver with a given identifier."
    },
    {
      "name": "init(itemIdentifier: NSToolbarItem.Identifier, barButtonItem: UIBarButtonItem)",
      "desc": "Creates a toolbar item with property values from the specified bar button item."
    },
    {
      "name": "var itemIdentifier: NSToolbarItem.Identifier",
      "desc": "The receiver’s identifier."
    },
    {
      "name": "struct NSToolbarItem.Identifier"
    },
    {
      "name": "var toolbar: NSToolbar?",
      "desc": "The toolbar that is using the receiver."
    },
    {
      "name": "var label: String",
      "desc": "The receiver’s label."
    },
    {
      "name": "var paletteLabel: String",
      "desc": "The label that appears when the receiver is in the customization palette."
    },
    {
      "name": "var toolTip: String?",
      "desc": "The tooltip used when the receiver is displayed in the toolbar."
    },
    {
      "name": "var title: String",
      "desc": "The title of the toolbar item."
    },
    {
      "name": "var menuFormRepresentation: NSMenuItem?",
      "desc": "The receiver’s menu form representation."
    },
    {
      "name": "var itemMenuFormRepresentation: UIMenuElement?",
      "desc": "The receiver’s menu form representation in Mac apps built with Mac Catalyst."
    },
    {
      "name": "var tag: Int",
      "desc": "The receiver’s tag."
    },
    {
      "name": "var target: AnyObject?",
      "desc": "The receiver’s target."
    },
    {
      "name": "var action: Selector?",
      "desc": "The receiver’s action."
    },
    {
      "name": "var isBordered: Bool",
      "desc": "A Boolean value that determines whether the toolbar item has a bordered style."
    },
    {
      "name": "var isNavigational: Bool",
      "desc": "A Boolean value that indicates whether the item behaves as a navigation item in the toolbar."
    },
    {
      "name": "var isEnabled: Bool",
      "desc": "A Boolean value that indicates whether the receiver is enabled."
    },
    {
      "name": "var image: NSImage?",
      "desc": "The image of the receiver."
    },
    {
      "name": "var view: NSView?",
      "desc": "The receiver’s view."
    },
    {
      "name": "var visibilityPriority: NSToolbarItem.VisibilityPriority",
      "desc": "The receiver’s visibility priority."
    },
    {
      "name": "struct NSToolbarItem.VisibilityPriority"
    },
    {
      "name": "func validate()",
      "desc": "This method is called by the receiver’s toolbar during validation."
    },
    {
      "name": "var autovalidates: Bool",
      "desc": "A Boolean value that indicates whether the receiver is automatically validated by the toolbar."
    },
    {
      "name": "var allowsDuplicatesInToolbar: Bool",
      "desc": "A Boolean value that indicates whether the receiver can be represented in the toolbar at more than one position."
    }
  ],
  "declaration": "@MainActor class NSToolbarItem : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSMenuItemValidation",
    "NSValidatedUserInterfaceItem"
  ]
}