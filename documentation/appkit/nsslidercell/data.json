{
  "path": "/documentation/appkit/nsslidercell",
  "type": "Class",
  "name": "NSSliderCell",
  "desc": "The appearance and behavior of an NSSlider object.",
  "items": [
    {
      "name": "var altIncrementValue: Double",
      "desc": "The amount by which the slider changes its value when the user Option-drags the knob."
    },
    {
      "name": "class var prefersTrackingUntilMouseUp: Bool",
      "desc": "Returns a Boolean value indicating whether the NSSliderCell continues to track the pointer until the next mouse up."
    },
    {
      "name": "var trackRect: NSRect",
      "desc": "The rectangle within which the cell tracks the pointer while the mouse button is down."
    },
    {
      "name": "var sliderType: NSSlider.SliderType",
      "desc": "The slider type, either linear or circular."
    },
    {
      "name": "func barRect(flipped: Bool) -> NSRect",
      "desc": "Returns the rectangle in which the bar is drawn."
    },
    {
      "name": "func drawTickMarks()",
      "desc": "Draws the slider’s tick marks."
    },
    {
      "name": "func knobRect(flipped: Bool) -> NSRect",
      "desc": "Returns the rectangle in which the slider knob is drawn."
    },
    {
      "name": "func drawBar(inside: NSRect, flipped: Bool)",
      "desc": "Draws the slider’s bar—but not its bezel or knob—inside the specified rectangle."
    },
    {
      "name": "func drawKnob()",
      "desc": "Calculates the rectangle in which the knob should be drawn, then calls drawKnob(_:) to actually draw the knob."
    },
    {
      "name": "func drawKnob(NSRect)",
      "desc": "Draws the slider knob in the given rectangle."
    },
    {
      "name": "var knobThickness: CGFloat",
      "desc": "The thickness of the slider knob, in pixels."
    },
    {
      "name": "var isVertical: Bool",
      "desc": "An integer indicating the orientation (vertical or horizontal) of the slider."
    },
    {
      "name": "var maxValue: Double",
      "desc": "The maximum value the slider can send to its target."
    },
    {
      "name": "var minValue: Double",
      "desc": "The minimum value the slider can send to its target."
    },
    {
      "name": "var allowsTickMarkValuesOnly: Bool",
      "desc": "A Boolean value indicating whether the receiver fixes its values to those values represented by its tick marks."
    },
    {
      "name": "func closestTickMarkValue(toValue: Double) -> Double",
      "desc": "Returns the value of the tick mark closest to the specified value."
    },
    {
      "name": "func indexOfTickMark(at: NSPoint) -> Int",
      "desc": "Returns the index of the tick mark closest to the location of the slider represented by the specified point."
    },
    {
      "name": "var numberOfTickMarks: Int",
      "desc": "The number of tick marks associated with the slider, including the tick marks assigned to the minimum and maximum values."
    },
    {
      "name": "func rectOfTickMark(at: Int) -> NSRect",
      "desc": "Returns the bounding rectangle of the tick mark at the specified index."
    },
    {
      "name": "var tickMarkPosition: NSSlider.TickMarkPosition",
      "desc": "The position of the tick marks relative to the receiver."
    },
    {
      "name": "func tickMarkValue(at: Int) -> Double",
      "desc": "Returns the receiver’s value represented by the tick mark at the specified index."
    },
    {
      "name": "enum NSSlider.TickMarkPosition",
      "desc": "The position where a linear slider’s tick marks appear (above, below, leading, or trailing)."
    },
    {
      "name": "enum NSSlider.SliderType",
      "desc": "The types of sliders, used by sliderType."
    }
  ],
  "declaration": "class NSSliderCell : NSActionCell",
  "inheritsFrom": [
    "NSActionCell"
  ]
}