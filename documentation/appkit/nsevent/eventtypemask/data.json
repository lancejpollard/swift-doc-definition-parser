{
  "path": "/documentation/appkit/nsevent/eventtypemask",
  "type": "Structure",
  "name": "NSEvent.EventTypeMask",
  "desc": "Constants that you use to filter out specific event types from the stream of incoming events.",
  "items": [
    {
      "name": "static var leftMouseDown: NSEvent.EventTypeMask",
      "desc": "A mask for left mouse-down events."
    },
    {
      "name": "static var leftMouseUp: NSEvent.EventTypeMask",
      "desc": "A mask for left mouse-up events."
    },
    {
      "name": "static var rightMouseDown: NSEvent.EventTypeMask",
      "desc": "A mask for right mouse-down events."
    },
    {
      "name": "static var rightMouseUp: NSEvent.EventTypeMask",
      "desc": "A mask for right mouse-up events."
    },
    {
      "name": "static var mouseMoved: NSEvent.EventTypeMask",
      "desc": "A mask for mouse-moved events."
    },
    {
      "name": "static var leftMouseDragged: NSEvent.EventTypeMask",
      "desc": "A mask for left mouse-dragged events."
    },
    {
      "name": "static var rightMouseDragged: NSEvent.EventTypeMask",
      "desc": "A mask for right mouse-dragged events."
    },
    {
      "name": "static var mouseEntered: NSEvent.EventTypeMask",
      "desc": "A mask for mouse-entered events."
    },
    {
      "name": "static var mouseExited: NSEvent.EventTypeMask",
      "desc": "A mask for mouse-exited events."
    },
    {
      "name": "static var keyDown: NSEvent.EventTypeMask",
      "desc": "A mask for key-down events."
    },
    {
      "name": "static var keyUp: NSEvent.EventTypeMask",
      "desc": "A mask for key-up events."
    },
    {
      "name": "static var flagsChanged: NSEvent.EventTypeMask",
      "desc": "A mask for flags-changed events."
    },
    {
      "name": "static var appKitDefined: NSEvent.EventTypeMask",
      "desc": "A mask for AppKitâ€“defined events."
    },
    {
      "name": "static var systemDefined: NSEvent.EventTypeMask",
      "desc": "A mask for system-defined events."
    },
    {
      "name": "static var applicationDefined: NSEvent.EventTypeMask",
      "desc": "A mask for app-defined events."
    },
    {
      "name": "static var periodic: NSEvent.EventTypeMask",
      "desc": "A mask for periodic events."
    },
    {
      "name": "static var cursorUpdate: NSEvent.EventTypeMask",
      "desc": "A mask for cursor-update events."
    },
    {
      "name": "static var scrollWheel: NSEvent.EventTypeMask",
      "desc": "A mask for scroll-wheel events."
    },
    {
      "name": "static var tabletPoint: NSEvent.EventTypeMask",
      "desc": "A mask for tablet-point events."
    },
    {
      "name": "static var tabletProximity: NSEvent.EventTypeMask",
      "desc": "A mask for tablet-proximity events."
    },
    {
      "name": "static var otherMouseDown: NSEvent.EventTypeMask",
      "desc": "A mask for tertiary mouse-down events."
    },
    {
      "name": "static var otherMouseUp: NSEvent.EventTypeMask",
      "desc": "A mask for tertiary mouse-up events."
    },
    {
      "name": "static var otherMouseDragged: NSEvent.EventTypeMask",
      "desc": "A mask for tertiary mouse-dragged events."
    },
    {
      "name": "static var gesture: NSEvent.EventTypeMask",
      "desc": "A mask for generic gesture events."
    },
    {
      "name": "static var magnify: NSEvent.EventTypeMask",
      "desc": "A mask for magnify-gesture events."
    },
    {
      "name": "static var swipe: NSEvent.EventTypeMask",
      "desc": "A mask for swipe-gesture events."
    },
    {
      "name": "static var rotate: NSEvent.EventTypeMask",
      "desc": "A mask for rotate-gesture events."
    },
    {
      "name": "static var beginGesture: NSEvent.EventTypeMask",
      "desc": "A mask for begin-gesture events."
    },
    {
      "name": "static var endGesture: NSEvent.EventTypeMask",
      "desc": "A mask for end-gesture events."
    },
    {
      "name": "static var smartMagnify: NSEvent.EventTypeMask",
      "desc": "A mask for smart-zoom gesture events."
    },
    {
      "name": "static var pressure: NSEvent.EventTypeMask",
      "desc": "A mask for pressure-change events."
    },
    {
      "name": "static var directTouch: NSEvent.EventTypeMask",
      "desc": "A mask for touch events."
    },
    {
      "name": "static var changeMode: NSEvent.EventTypeMask",
      "desc": "A mask for change-mode events."
    },
    {
      "name": "static var any: NSEvent.EventTypeMask",
      "desc": "A mask that matches any type of event."
    },
    {
      "name": "init(rawValue: UInt64)"
    },
    {
      "name": "init(type: NSEvent.EventType)",
      "desc": "Returns the event mask for the specified type."
    }
  ],
  "declaration": "struct EventTypeMask, @unchecked Sendable",
  "conformsTo": [
    "OptionSet",
    "Sendable"
  ]
}