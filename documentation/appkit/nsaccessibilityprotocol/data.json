{
  "path": "/documentation/appkit/nsaccessibilityprotocol",
  "type": "Protocol",
  "name": "NSAccessibilityProtocol",
  "desc": "The complete list of properties and methods for accessible elements.",
  "items": [
    {
      "name": "func isAccessibilityElement() -> Bool",
      "desc": "Returns a Boolean value that determines whether the accessibility element participates in the accessibility hierarchy."
    },
    {
      "name": "func setAccessibilityElement(Bool)",
      "desc": "Sets a Boolean value that determines whether the accessibility element participates in the accessibility hierarchy."
    },
    {
      "name": "func isAccessibilityEnabled() -> Bool",
      "desc": "Returns a Boolean value that determines whether the accessibility element responds to user events."
    },
    {
      "name": "func setAccessibilityEnabled(Bool)",
      "desc": "Sets a Boolean value that determines whether the accessibility element responds to user events."
    },
    {
      "name": "func accessibilityFrame() -> NSRect",
      "desc": "Returns the accessibility element’s frame in screen coordinates."
    },
    {
      "name": "func setAccessibilityFrame(NSRect)",
      "desc": "Sets the accessibility element’s frame in screen coordinates."
    },
    {
      "name": "func accessibilityHelp() -> String?",
      "desc": "Returns the help text for the accessibility element."
    },
    {
      "name": "func setAccessibilityHelp(String?)",
      "desc": "Sets the help text for the accessibility element."
    },
    {
      "name": "func accessibilityLabel() -> String?",
      "desc": "Returns a short description of the accessibility element."
    },
    {
      "name": "func setAccessibilityLabel(String?)",
      "desc": "Sets a short description of the accessibility element."
    },
    {
      "name": "func accessibilityTitle() -> String?",
      "desc": "Returns the title of the accessibility element—for example, a button’s visible text."
    },
    {
      "name": "func setAccessibilityTitle(String?)",
      "desc": "Sets the title of the accessibility element."
    },
    {
      "name": "func accessibilityValue() -> Any?",
      "desc": "Returns the accessibility element’s value."
    },
    {
      "name": "func setAccessibilityValue(Any?)",
      "desc": "Sets the accessibility element’s value."
    },
    {
      "name": "func isAccessibilitySelectorAllowed(Selector) -> Bool",
      "desc": "Returns a Boolean value that indicates whether assistive apps can invoke the specified selector on the accessibility element."
    },
    {
      "name": "func accessibilityContents() -> [Any]?",
      "desc": "Returns the contents of the current accessibility element."
    },
    {
      "name": "func setAccessibilityContents([Any]?)",
      "desc": "Sets the contents of the current accessibility element."
    },
    {
      "name": "func accessibilityCriticalValue() -> Any?",
      "desc": "Returns the critical value for the level indicator."
    },
    {
      "name": "func setAccessibilityCriticalValue(Any?)",
      "desc": "Sets the critical value for the level indicator."
    },
    {
      "name": "func accessibilityIdentifier() -> String?",
      "desc": "Returns the accessibility element’s identity."
    },
    {
      "name": "func setAccessibilityIdentifier(String?)",
      "desc": "Sets the accessibility element’s identity."
    },
    {
      "name": "func accessibilityMaxValue() -> Any?",
      "desc": "Returns the maximum value for the accessibility element."
    },
    {
      "name": "func setAccessibilityMaxValue(Any?)",
      "desc": "Sets the maximum value for the accessibility element."
    },
    {
      "name": "func accessibilityMinValue() -> Any?",
      "desc": "Returns the minimum value for the accessibility element."
    },
    {
      "name": "func setAccessibilityMinValue(Any?)",
      "desc": "Sets the minimum value for the accessibility element."
    },
    {
      "name": "func accessibilityOrientation() -> NSAccessibilityOrientation",
      "desc": "Returns the orientation of the accessibility element."
    },
    {
      "name": "func setAccessibilityOrientation(NSAccessibilityOrientation)",
      "desc": "Sets the orientation of the accessibility element."
    },
    {
      "name": "func isAccessibilityProtectedContent() -> Bool",
      "desc": "Returns a Boolean value that determines whether the accessibility element contains protected content."
    },
    {
      "name": "func setAccessibilityProtectedContent(Bool)",
      "desc": "Sets a Boolean value that determines whether the accessibility element contains protected content."
    },
    {
      "name": "func isAccessibilitySelected() -> Bool",
      "desc": "Returns a Boolean value that determines whether the accessibility element is currently in a selected state."
    },
    {
      "name": "func setAccessibilitySelected(Bool)",
      "desc": "Sets a Boolean value that determines whether the accessibility element is currently in a selected state."
    },
    {
      "name": "func accessibilityURL() -> URL?",
      "desc": "Returns the URL for the accessibility element."
    },
    {
      "name": "func setAccessibilityURL(URL?)",
      "desc": "Sets the URL for the accessibility element."
    },
    {
      "name": "func accessibilityValueDescription() -> String?",
      "desc": "Returns the human-readable description of the accessibility element’s value."
    },
    {
      "name": "func setAccessibilityValueDescription(String?)",
      "desc": "Sets the human-readable description of the accessibility element’s value."
    },
    {
      "name": "func accessibilityWarningValue() -> Any?",
      "desc": "Returns the warning value for the level indicator."
    },
    {
      "name": "func setAccessibilityWarningValue(Any?)",
      "desc": "Sets the warning value for the level indicator."
    },
    {
      "name": "enum NSAccessibilityOrientation",
      "desc": "Values that indicate the orientation of accessibility elements, such as scroll bars and split views."
    },
    {
      "name": "func accessibilityChildren() -> [Any]?",
      "desc": "Returns the child accessibility elements in the accessibility hierarchy."
    },
    {
      "name": "func setAccessibilityChildren([Any]?)",
      "desc": "Sets the child accessibility elements in the accessibility hierarchy."
    },
    {
      "name": "func accessibilityChildrenInNavigationOrder() -> [NSAccessibilityElementProtocol]?",
      "desc": "Returns the array of child accessibility elements in order for linear navigation."
    },
    {
      "name": "func setAccessibilityChildrenInNavigationOrder([NSAccessibilityElementProtocol]?)",
      "desc": "Sets the array of child accessibility elements in order for linear navigation."
    },
    {
      "name": "func accessibilityParent() -> Any?",
      "desc": "Returns the accessibility element’s parent in the accessibility hierarchy."
    },
    {
      "name": "func setAccessibilityParent(Any?)",
      "desc": "Sets the accessibility element’s parent in the accessibility hierarchy."
    },
    {
      "name": "func accessibilitySelectedChildren() -> [Any]?",
      "desc": "Returns the accessibility element’s currently selected children."
    },
    {
      "name": "func setAccessibilitySelectedChildren([Any]?)",
      "desc": "Sets the accessibility element’s currently selected children."
    },
    {
      "name": "func accessibilityTopLevelUIElement() -> Any?",
      "desc": "Returns the top-level element that contains the accessibility element."
    },
    {
      "name": "func setAccessibilityTopLevelUIElement(Any?)",
      "desc": "Sets the top-level element that contains the accessibility element."
    },
    {
      "name": "func accessibilityVisibleChildren() -> [Any]?",
      "desc": "Returns the accessibility element’s visible child accessibility elements."
    },
    {
      "name": "func setAccessibilityVisibleChildren([Any]?)",
      "desc": "Sets the accessibility element’s visible child accessibility elements."
    },
    {
      "name": "func accessibilityApplicationFocusedUIElement() -> Any?",
      "desc": "Returns the child accessibility element with the current focus."
    },
    {
      "name": "func setAccessibilityApplicationFocusedUIElement(Any?)",
      "desc": "Sets the child accessibility element with the current focus."
    },
    {
      "name": "func isAccessibilityFocused() -> Bool",
      "desc": "Returns a Boolean value that determines whether the accessibility element has the keyboard focus."
    },
    {
      "name": "func setAccessibilityFocused(Bool)",
      "desc": "Sets a Boolean value that determines whether the accessibility element has the keyboard focus."
    },
    {
      "name": "func accessibilityFocusedWindow() -> Any?",
      "desc": "Returns the child window with the current focus."
    },
    {
      "name": "func setAccessibilityFocusedWindow(Any?)",
      "desc": "Sets the child window with the current focus."
    },
    {
      "name": "func accessibilitySharedFocusElements() -> [Any]?",
      "desc": "Returns the array of elements that shares the keyboard focus with the accessibility element."
    },
    {
      "name": "func setAccessibilitySharedFocusElements([Any]?)",
      "desc": "Sets the array of elements that shares the keyboard focus with the accessibility element."
    },
    {
      "name": "func isAccessibilityRequired() -> Bool",
      "desc": "Returns a Boolean value that determines whether the accessibility element must have content for successful submission of a form."
    },
    {
      "name": "func setAccessibilityRequired(Bool)",
      "desc": "Sets a Boolean value that determines whether the accessibility element must have content for successful submission of a form."
    },
    {
      "name": "func accessibilityRole() -> NSAccessibility.Role?",
      "desc": "Returns the type of interface element that the accessibility element represents."
    },
    {
      "name": "func setAccessibilityRole(NSAccessibility.Role?)",
      "desc": "Sets the type of interface element that the accessibility element represents."
    },
    {
      "name": "func accessibilityRoleDescription() -> String?",
      "desc": "Returns a localized, human-intelligible description of the accessibility element’s role, such as radio button."
    },
    {
      "name": "func setAccessibilityRoleDescription(String?)",
      "desc": "Sets the localized, human-intelligible description of the accessibility element’s role, such as radio button."
    },
    {
      "name": "func accessibilitySubrole() -> NSAccessibility.Subrole?",
      "desc": "Returns the specialized interface element type that the accessibility element represents."
    },
    {
      "name": "func setAccessibilitySubrole(NSAccessibility.Subrole?)",
      "desc": "Sets the specialized interface element type that the accessibility element represents."
    },
    {
      "name": "struct NSAccessibility.Role",
      "desc": "Values that describe types of objects that accessibility elements represent."
    },
    {
      "name": "struct NSAccessibility.Subrole",
      "desc": "Values that describe specialized object subtypes that accessibility elements represent."
    },
    {
      "name": "func accessibilityCustomActions() -> [NSAccessibilityCustomAction]?",
      "desc": "Returns the custom actions of the current accessibility element."
    },
    {
      "name": "func setAccessibilityCustomActions([NSAccessibilityCustomAction]?)",
      "desc": "Sets the custom actions of the current accessibility element."
    },
    {
      "name": "class NSAccessibilityCustomAction",
      "desc": "A custom action to perform on an accessible object."
    },
    {
      "name": "func accessibilityCustomRotors() -> [NSAccessibilityCustomRotor]",
      "desc": "Returns the custom rotors of the current accessibility element."
    },
    {
      "name": "func setAccessibilityCustomRotors([NSAccessibilityCustomRotor])",
      "desc": "Sets the custom rotors of the current accessibility element."
    },
    {
      "name": "class NSAccessibilityCustomRotor",
      "desc": "A context-sensitive function that helps VoiceOver users find the next instance of a related accessibility element."
    },
    {
      "name": "func accessibilityInsertionPointLineNumber() -> Int",
      "desc": "Returns the line number that contains the insertion point."
    },
    {
      "name": "func setAccessibilityInsertionPointLineNumber(Int)",
      "desc": "Sets the line number that contains the insertion point."
    },
    {
      "name": "func accessibilityNumberOfCharacters() -> Int",
      "desc": "Returns the number of characters in the text."
    },
    {
      "name": "func setAccessibilityNumberOfCharacters(Int)",
      "desc": "Sets the number of characters in the text."
    },
    {
      "name": "func accessibilityPlaceholderValue() -> String?",
      "desc": "Returns the placeholder value for the accessibility element."
    },
    {
      "name": "func setAccessibilityPlaceholderValue(String?)",
      "desc": "Sets the placeholder value for the accessibility element."
    },
    {
      "name": "func accessibilitySelectedText() -> String?",
      "desc": "Returns the currently selected text."
    },
    {
      "name": "func setAccessibilitySelectedText(String?)",
      "desc": "Sets the currently selected text."
    },
    {
      "name": "func accessibilitySelectedTextRange() -> NSRange",
      "desc": "Returns the range of the currently selected text."
    },
    {
      "name": "func setAccessibilitySelectedTextRange(NSRange)",
      "desc": "Sets the range of the currently selected text."
    },
    {
      "name": "func accessibilitySelectedTextRanges() -> [NSValue]?",
      "desc": "Returns an array of ranges for the currently selected text."
    },
    {
      "name": "func setAccessibilitySelectedTextRanges([NSValue]?)",
      "desc": "Sets an array of ranges for the currently selected text."
    },
    {
      "name": "func accessibilitySharedCharacterRange() -> NSRange",
      "desc": "Returns the range of characters that the accessibility element displays."
    },
    {
      "name": "func setAccessibilitySharedCharacterRange(NSRange)",
      "desc": "Sets the range of characters that the accessibility element displays."
    },
    {
      "name": "func accessibilitySharedTextUIElements() -> [Any]?",
      "desc": "Returns the other elements that share text with the accessibility element."
    },
    {
      "name": "func setAccessibilitySharedTextUIElements([Any]?)",
      "desc": "Sets the other elements that share text with the accessibility element."
    },
    {
      "name": "func accessibilityVisibleCharacterRange() -> NSRange",
      "desc": "Returns the range of visible characters in the document."
    },
    {
      "name": "func setAccessibilityVisibleCharacterRange(NSRange)",
      "desc": "Sets the range of visible characters in the document."
    },
    {
      "name": "func accessibilityString(for: NSRange) -> String?",
      "desc": "Returns the substring for the specified range."
    },
    {
      "name": "func accessibilityAttributedString(for: NSRange) -> NSAttributedString?",
      "desc": "Returns the attributed substring for the specified range of characters."
    },
    {
      "name": "func accessibilityRTF(for: NSRange) -> Data?",
      "desc": "Returns the rich text format (RTF) data that describes the specified range of characters."
    },
    {
      "name": "func accessibilityFrame(for: NSRange) -> NSRect",
      "desc": "Returns the rectangle that encloses the specified range of characters."
    },
    {
      "name": "func accessibilityLine(for: Int) -> Int",
      "desc": "Returns the line number for the line that contains the specified character index."
    },
    {
      "name": "func accessibilityRange(for: Int) -> NSRange",
      "desc": "Returns the range of characters for the glyph that includes the specified character."
    },
    {
      "name": "func accessibilityStyleRange(for: Int) -> NSRange",
      "desc": "Returns a range of characters that all have the same style as the specified character."
    },
    {
      "name": "func accessibilityRange(forLine: Int) -> NSRange",
      "desc": "Returns the range of characters in the specified line."
    },
    {
      "name": "func accessibilityRange(for: NSPoint) -> NSRange",
      "desc": "Returns the range of characters for the glyph at the specified point."
    },
    {
      "name": "func accessibilityActivationPoint() -> NSPoint",
      "desc": "Returns the activation point for the user interface element."
    },
    {
      "name": "func setAccessibilityActivationPoint(NSPoint)",
      "desc": "Sets the activation point for the user interface element."
    },
    {
      "name": "func isAccessibilityAlternateUIVisible() -> Bool",
      "desc": "Returns the Boolean value that determines whether the accessibility element’s alternative UI is currently visible."
    },
    {
      "name": "func setAccessibilityAlternateUIVisible(Bool)",
      "desc": "Sets the Boolean value that determines whether the accessibility element’s alternative UI is currently visible."
    },
    {
      "name": "func accessibilityCancelButton() -> Any?",
      "desc": "Returns the child accessibility element that represents the window’s cancel button."
    },
    {
      "name": "func setAccessibilityCancelButton(Any?)",
      "desc": "Sets the child accessibility element that represents the window’s cancel button."
    },
    {
      "name": "func accessibilityCloseButton() -> Any?",
      "desc": "Returns the child accessibility element that represents the window’s close button."
    },
    {
      "name": "func setAccessibilityCloseButton(Any?)",
      "desc": "Sets the child accessibility element that represents the window’s close button."
    },
    {
      "name": "func accessibilityDefaultButton() -> Any?",
      "desc": "Returns the child accessibility element that represents the window’s default button."
    },
    {
      "name": "func setAccessibilityDefaultButton(Any?)",
      "desc": "Sets the child accessibility element that represents the window’s default button."
    },
    {
      "name": "func accessibilityFullScreenButton() -> Any?",
      "desc": "Returns the child accessibility element that represents the window’s full-screen button."
    },
    {
      "name": "func setAccessibilityFullScreenButton(Any?)",
      "desc": "Sets the child accessibility element that represents the window’s full-screen button."
    },
    {
      "name": "func accessibilityGrowArea() -> Any?",
      "desc": "Returns the child accessibility element that represents the window’s grow area."
    },
    {
      "name": "func setAccessibilityGrowArea(Any?)",
      "desc": "Sets the child accessibility element that represents the window’s grow area."
    },
    {
      "name": "func isAccessibilityMain() -> Bool",
      "desc": "Returns a Boolean value that determines whether the window is the app’s main window."
    },
    {
      "name": "func setAccessibilityMain(Bool)",
      "desc": "Sets a Boolean value that determines whether the window is the app’s main window."
    },
    {
      "name": "func accessibilityMinimizeButton() -> Any?",
      "desc": "Returns the child accessibility element that represents the window’s minimize button."
    },
    {
      "name": "func setAccessibilityMinimizeButton(Any?)",
      "desc": "Sets the child accessibility element that represents the window’s minimize button."
    },
    {
      "name": "func isAccessibilityMinimized() -> Bool",
      "desc": "Returns the Boolean value that determines whether the window is in a minimized state."
    },
    {
      "name": "func setAccessibilityMinimized(Bool)",
      "desc": "Sets the Boolean value that determines whether the window is in a minimized state."
    },
    {
      "name": "func isAccessibilityModal() -> Bool",
      "desc": "Returns a Boolean value that determines whether the window is modal."
    },
    {
      "name": "func setAccessibilityModal(Bool)",
      "desc": "Sets a Boolean value that determines whether the window is modal."
    },
    {
      "name": "func accessibilityProxy() -> Any?",
      "desc": "Returns the child accessibility element that represents the window’s proxy icon."
    },
    {
      "name": "func setAccessibilityProxy(Any?)",
      "desc": "Sets the child accessibility element that represents the window’s proxy icon."
    },
    {
      "name": "func accessibilityShownMenu() -> Any?",
      "desc": "Returns the menu currently displaying for the accessibility element."
    },
    {
      "name": "func setAccessibilityShownMenu(Any?)",
      "desc": "Sets the menu currently displaying for the accessibility element."
    },
    {
      "name": "func accessibilityToolbarButton() -> Any?",
      "desc": "Returns the child accessibility element that represents the window’s toolbar button."
    },
    {
      "name": "func setAccessibilityToolbarButton(Any?)",
      "desc": "Sets the child accessibility element that represents the window’s toolbar button."
    },
    {
      "name": "func accessibilityWindow() -> Any?",
      "desc": "Returns the window that contains the accessibility element."
    },
    {
      "name": "func setAccessibilityWindow(Any?)",
      "desc": "Sets the window that contains the accessibility element."
    },
    {
      "name": "func accessibilityZoomButton() -> Any?",
      "desc": "Returns the child accessibility element that represents the window’s zoom button."
    },
    {
      "name": "func setAccessibilityZoomButton(Any?)",
      "desc": "Sets the child accessibility element that represents the window’s zoom button."
    },
    {
      "name": "func accessibilityExtrasMenuBar() -> Any?",
      "desc": "Returns the icon for the app’s menu bar extra."
    },
    {
      "name": "func setAccessibilityExtrasMenuBar(Any?)",
      "desc": "Sets the icon for the app’s menu bar extra."
    },
    {
      "name": "func isAccessibilityFrontmost() -> Bool",
      "desc": "Returns a Boolean value that determines whether the app is the frontmost app."
    },
    {
      "name": "func setAccessibilityFrontmost(Bool)",
      "desc": "Sets a Boolean value that determines whether the app is the frontmost app."
    },
    {
      "name": "func isAccessibilityHidden() -> Bool",
      "desc": "Returns a Boolean value that determines whether the app is in a hidden state."
    },
    {
      "name": "func setAccessibilityHidden(Bool)",
      "desc": "Sets a Boolean value that determines whether the app is in a hidden state."
    },
    {
      "name": "func accessibilityMainWindow() -> Any?",
      "desc": "Returns the app’s main window."
    },
    {
      "name": "func setAccessibilityMainWindow(Any?)",
      "desc": "Sets the app’s main window."
    },
    {
      "name": "func accessibilityMenuBar() -> Any?",
      "desc": "Returns the app’s menu bar."
    },
    {
      "name": "func setAccessibilityMenuBar(Any?)",
      "desc": "Sets the app’s menu bar."
    },
    {
      "name": "func accessibilityWindows() -> [Any]?",
      "desc": "Returns an array that contains all the app’s windows."
    },
    {
      "name": "func setAccessibilityWindows([Any]?)",
      "desc": "Sets the array that contains all the app’s windows."
    },
    {
      "name": "func accessibilityColumnCount() -> Int",
      "desc": "Returns the number of columns in the accessibility element’s grid."
    },
    {
      "name": "func setAccessibilityColumnCount(Int)",
      "desc": "Sets the number of columns in the accessibility element’s grid."
    },
    {
      "name": "func isAccessibilityOrderedByRow() -> Bool",
      "desc": "Returns a Boolean value that determines whether the accessibility element’s grid is in row major order or in column major order."
    },
    {
      "name": "func setAccessibilityOrderedByRow(Bool)",
      "desc": "Sets a Boolean value that determines whether the element’s grid is in row major order or in column major order."
    },
    {
      "name": "func accessibilityRowCount() -> Int",
      "desc": "Returns the number of rows in the accessibility element’s grid."
    },
    {
      "name": "func setAccessibilityRowCount(Int)",
      "desc": "Sets the number of rows in the accessibility element’s grid."
    },
    {
      "name": "func accessibilityHorizontalScrollBar() -> Any?",
      "desc": "Returns the horizontal scroll bar for the scroll view."
    },
    {
      "name": "func setAccessibilityHorizontalScrollBar(Any?)",
      "desc": "Sets the horizontal scroll bar for the scroll view."
    },
    {
      "name": "func accessibilityVerticalScrollBar() -> Any?",
      "desc": "Returns the vertical scroll bar for the scroll view."
    },
    {
      "name": "func setAccessibilityVerticalScrollBar(Any?)",
      "desc": "Sets the vertical scroll bar for the scroll view."
    },
    {
      "name": "func accessibilityColumnHeaderUIElements() -> [Any]?",
      "desc": "Returns the column header accessibility elements for the table or outline."
    },
    {
      "name": "func setAccessibilityColumnHeaderUIElements([Any]?)",
      "desc": "Sets the column header accessibility elements for the table or outline."
    },
    {
      "name": "func accessibilityColumns() -> [Any]?",
      "desc": "Returns the column accessibility elements for the table or outline."
    },
    {
      "name": "func setAccessibilityColumns([Any]?)",
      "desc": "Sets the column accessibility elements for the table or outline."
    },
    {
      "name": "func accessibilityColumnTitles() -> [Any]?",
      "desc": "Returns the column titles for the accessibility element."
    },
    {
      "name": "func setAccessibilityColumnTitles([Any]?)",
      "desc": "Sets the column titles for the accessibility element."
    },
    {
      "name": "func isAccessibilityExpanded() -> Bool",
      "desc": "Returns a Boolean value that determines whether the accessibility element is in an expanded state."
    },
    {
      "name": "func setAccessibilityExpanded(Bool)",
      "desc": "Sets a Boolean value that determines whether accessibility element is in an expanded state."
    },
    {
      "name": "func accessibilityHeader() -> Any?",
      "desc": "Returns the header for the table view."
    },
    {
      "name": "func setAccessibilityHeader(Any?)",
      "desc": "Sets the header for the table view."
    },
    {
      "name": "func accessibilityIndex() -> Int",
      "desc": "Returns the index of the row or column that the accessibility element represents."
    },
    {
      "name": "func setAccessibilityIndex(Int)",
      "desc": "Sets the index of the row or column that the accessibility element represents."
    },
    {
      "name": "func accessibilityRowHeaderUIElements() -> [Any]?",
      "desc": "Returns the row header accessibility elements for the table or outline."
    },
    {
      "name": "func setAccessibilityRowHeaderUIElements([Any]?)",
      "desc": "Sets the row header accessibility elements for the table or outline."
    },
    {
      "name": "func accessibilityRows() -> [Any]?",
      "desc": "Returns the row accessibility elements for the table or outline."
    },
    {
      "name": "func setAccessibilityRows([Any]?)",
      "desc": "Sets the row accessibility elements for the table or outline."
    },
    {
      "name": "func accessibilitySelectedColumns() -> [Any]?",
      "desc": "Returns the currently selected columns for the table or outline."
    },
    {
      "name": "func setAccessibilitySelectedColumns([Any]?)",
      "desc": "Sets the currently selected columns for the table or outline."
    },
    {
      "name": "func accessibilitySelectedRows() -> [Any]?",
      "desc": "Returns the currently selected rows for the table or outline."
    },
    {
      "name": "func setAccessibilitySelectedRows([Any]?)",
      "desc": "Sets the currently selected rows for the table or outline."
    },
    {
      "name": "func accessibilitySortDirection() -> NSAccessibilitySortDirection",
      "desc": "Returns the accessibility element’s sort direction."
    },
    {
      "name": "func setAccessibilitySortDirection(NSAccessibilitySortDirection)",
      "desc": "Sets the accessibility element’s sort direction."
    },
    {
      "name": "func accessibilityVisibleColumns() -> [Any]?",
      "desc": "Returns the visible columns for the table or outline."
    },
    {
      "name": "func setAccessibilityVisibleColumns([Any]?)",
      "desc": "Sets the visible columns for the table or outline."
    },
    {
      "name": "func accessibilityVisibleRows() -> [Any]?",
      "desc": "Returns the visible rows for the table or outline."
    },
    {
      "name": "func setAccessibilityVisibleRows([Any]?)",
      "desc": "Sets the visible rows for the table or outline."
    },
    {
      "name": "enum NSAccessibilitySortDirection",
      "desc": "Values that indicate the sort direction of a column."
    },
    {
      "name": "func isAccessibilityDisclosed() -> Bool",
      "desc": "Returns a Boolean value that determines whether the row is disclosing other rows."
    },
    {
      "name": "func setAccessibilityDisclosed(Bool)",
      "desc": "Sets a Boolean value that determines whether the row is disclosing other rows."
    },
    {
      "name": "func accessibilityDisclosedByRow() -> Any?",
      "desc": "Returns the row disclosing the current row."
    },
    {
      "name": "func setAccessibilityDisclosedByRow(Any?)",
      "desc": "Sets the row disclosing the current row."
    },
    {
      "name": "func accessibilityDisclosedRows() -> Any?",
      "desc": "Returns the rows that the current row discloses."
    },
    {
      "name": "func setAccessibilityDisclosedRows(Any?)",
      "desc": "Sets the rows that the current row discloses."
    },
    {
      "name": "func accessibilityDisclosureLevel() -> Int",
      "desc": "Returns the indention level for the row."
    },
    {
      "name": "func setAccessibilityDisclosureLevel(Int)",
      "desc": "Sets the indention level for the row."
    },
    {
      "name": "func accessibilityColumnIndexRange() -> NSRange",
      "desc": "Returns the column index range of the cell."
    },
    {
      "name": "func setAccessibilityColumnIndexRange(NSRange)",
      "desc": "Sets the column index range of the cell."
    },
    {
      "name": "func accessibilityRowIndexRange() -> NSRange",
      "desc": "Returns the row index range of the cell."
    },
    {
      "name": "func setAccessibilityRowIndexRange(NSRange)",
      "desc": "Sets the row index range of the cell."
    },
    {
      "name": "func accessibilitySelectedCells() -> [Any]?",
      "desc": "Returns the currently selected cells for the table."
    },
    {
      "name": "func setAccessibilitySelectedCells([Any]?)",
      "desc": "Sets the currently selected cells for the table."
    },
    {
      "name": "func accessibilityVisibleCells() -> [Any]?",
      "desc": "Returns the visible cells for the table."
    },
    {
      "name": "func setAccessibilityVisibleCells([Any]?)",
      "desc": "Sets the visible cells for the table."
    },
    {
      "name": "func accessibilityCell(forColumn: Int, row: Int) -> Any?",
      "desc": "Returns the cell at the specified column and row."
    },
    {
      "name": "func accessibilityHandles() -> [Any]?",
      "desc": "Returns the drag handle elements for the layout item element."
    },
    {
      "name": "func setAccessibilityHandles([Any]?)",
      "desc": "Sets the drag handle accessibility elements for the layout item element."
    },
    {
      "name": "func accessibilityHorizontalUnits() -> NSAccessibilityUnits",
      "desc": "Returns the units that the layout area uses for horizontal values."
    },
    {
      "name": "func setAccessibilityHorizontalUnits(NSAccessibilityUnits)",
      "desc": "Sets the units that the layout area uses for horizontal values."
    },
    {
      "name": "func accessibilityHorizontalUnitDescription() -> String?",
      "desc": "Returns the description of the layout area’s horizontal units."
    },
    {
      "name": "func setAccessibilityHorizontalUnitDescription(String?)",
      "desc": "Sets the description of the layout area’s horizontal units."
    },
    {
      "name": "func accessibilityVerticalUnits() -> NSAccessibilityUnits",
      "desc": "Returns the units that the layout area uses for vertical values."
    },
    {
      "name": "func setAccessibilityVerticalUnits(NSAccessibilityUnits)",
      "desc": "Sets the units that the layout area uses for vertical values."
    },
    {
      "name": "func accessibilityVerticalUnitDescription() -> String?",
      "desc": "Returns the description of the layout area’s vertical units."
    },
    {
      "name": "func setAccessibilityVerticalUnitDescription(String?)",
      "desc": "Sets the description of the layout area’s vertical units."
    },
    {
      "name": "func accessibilityLayoutPoint(forScreenPoint: NSPoint) -> NSPoint",
      "desc": "Converts the provided point in screen coordinates to a point in the layout area’s coordinate system."
    },
    {
      "name": "func accessibilityLayoutSize(forScreenSize: NSSize) -> NSSize",
      "desc": "Converts the provided size in screen coordinates to a size in the layout area’s coordinate system."
    },
    {
      "name": "func accessibilityScreenPoint(forLayoutPoint: NSPoint) -> NSPoint",
      "desc": "Converts the provided point in the layout area’s coordinates to a point in the screen’s coordinate system."
    },
    {
      "name": "func accessibilityScreenSize(forLayoutSize: NSSize) -> NSSize",
      "desc": "Converts the provided size in the layout area’s coordinates to a size in the screen’s coordinate system."
    },
    {
      "name": "func accessibilityAllowedValues() -> [NSNumber]?",
      "desc": "Returns the allowed values for the slider accessibility element."
    },
    {
      "name": "func setAccessibilityAllowedValues([NSNumber]?)",
      "desc": "Sets the allowed values for the slider accessibility element."
    },
    {
      "name": "func accessibilityLabelUIElements() -> [Any]?",
      "desc": "Returns the child label elements for the slider accessibility element."
    },
    {
      "name": "func setAccessibilityLabelUIElements([Any]?)",
      "desc": "Sets the child label elements for the slider accessibility element."
    },
    {
      "name": "func accessibilityLabelValue() -> Float",
      "desc": "Returns the value of the label accessibility element."
    },
    {
      "name": "func setAccessibilityLabelValue(Float)",
      "desc": "Sets the value of the label accessibility element."
    },
    {
      "name": "func accessibilityNextContents() -> [Any]?",
      "desc": "Returns the contents that follow the divider accessibility element."
    },
    {
      "name": "func setAccessibilityNextContents([Any]?)",
      "desc": "Sets the contents that follow the divider accessibility element."
    },
    {
      "name": "func accessibilityPreviousContents() -> [Any]?",
      "desc": "Returns the contents that precede the divider accessibility element."
    },
    {
      "name": "func setAccessibilityPreviousContents([Any]?)",
      "desc": "Sets the contents that precede the divider accessibility element."
    },
    {
      "name": "func accessibilitySplitters() -> [Any]?",
      "desc": "Returns an array that contains the views and splitter bar from the split view."
    },
    {
      "name": "func setAccessibilitySplitters([Any]?)",
      "desc": "Sets the array that contains the views and splitter bar from the split view."
    },
    {
      "name": "func accessibilityOverflowButton() -> Any?",
      "desc": "Returns the overflow button for the toolbar."
    },
    {
      "name": "func setAccessibilityOverflowButton(Any?)",
      "desc": "Sets the overflow button for the toolbar."
    },
    {
      "name": "func accessibilityTabs() -> [Any]?",
      "desc": "Returns the tab accessibility elements for the tab view."
    },
    {
      "name": "func setAccessibilityTabs([Any]?)",
      "desc": "Sets the tab accessibility elements for the tab view."
    },
    {
      "name": "func accessibilityMarkerGroupUIElement() -> Any?",
      "desc": "Returns the user interface element that functions as a marker group for the ruler accessibility element."
    },
    {
      "name": "func setAccessibilityMarkerGroupUIElement(Any?)",
      "desc": "Sets the user interface element that functions as a marker group for the ruler accessibility element."
    },
    {
      "name": "func accessibilityMarkerTypeDescription() -> String?",
      "desc": "Returns the human-readable description of the marker type."
    },
    {
      "name": "func setAccessibilityMarkerTypeDescription(String?)",
      "desc": "Sets the human-readable description of the marker type."
    },
    {
      "name": "func accessibilityMarkerUIElements() -> [Any]?",
      "desc": "Returns the array of marker accessibility elements for the ruler."
    },
    {
      "name": "func setAccessibilityMarkerUIElements([Any]?)",
      "desc": "Sets the array of marker accessibility elements for the ruler."
    },
    {
      "name": "func accessibilityMarkerValues() -> Any?",
      "desc": "Returns the marker values for the ruler."
    },
    {
      "name": "func setAccessibilityMarkerValues(Any?)",
      "desc": "Sets the marker values for the ruler."
    },
    {
      "name": "func accessibilityRulerMarkerType() -> NSAccessibilityRulerMarkerType",
      "desc": "Returns the type of markers for the ruler."
    },
    {
      "name": "func setAccessibilityRulerMarkerType(NSAccessibilityRulerMarkerType)",
      "desc": "Sets the type of markers for the ruler."
    },
    {
      "name": "func accessibilityUnits() -> NSAccessibilityUnits",
      "desc": "Returns the units for the ruler."
    },
    {
      "name": "func setAccessibilityUnits(NSAccessibilityUnits)",
      "desc": "Sets the units used for the ruler."
    },
    {
      "name": "func accessibilityUnitDescription() -> String?",
      "desc": "Returns the human-readable description of the ruler’s units."
    },
    {
      "name": "func setAccessibilityUnitDescription(String?)",
      "desc": "Sets the human-readable description of the ruler’s units."
    },
    {
      "name": "enum NSAccessibilityRulerMarkerType",
      "desc": "Values that indicate the marker type of an accessibility element."
    },
    {
      "name": "enum NSAccessibilityUnits",
      "desc": "Values that indicate the unit values of a ruler or layout area."
    },
    {
      "name": "func accessibilityDocument() -> String?",
      "desc": "Returns the URL for the file that the accessibility element represents."
    },
    {
      "name": "func setAccessibilityDocument(String?)",
      "desc": "Sets the URL for the file that the accessibility element represents."
    },
    {
      "name": "func isAccessibilityEdited() -> Bool",
      "desc": "Returns a Boolean value that indicates whether the accessibility element is in an edited state."
    },
    {
      "name": "func setAccessibilityEdited(Bool)",
      "desc": "Sets a Boolean value that indicates whether the accessibility element is in an edited state."
    },
    {
      "name": "func accessibilityFilename() -> String?",
      "desc": "Returns the filename for the file that the accessibility element represents."
    },
    {
      "name": "func setAccessibilityFilename(String?)",
      "desc": "Sets the filename for the file that the accessibility element represents."
    },
    {
      "name": "func accessibilityLinkedUIElements() -> [Any]?",
      "desc": "Returns the elements that have links with the accessibility element."
    },
    {
      "name": "func setAccessibilityLinkedUIElements([Any]?)",
      "desc": "Sets the elements that have links with the accessibility element."
    },
    {
      "name": "func accessibilityServesAsTitleForUIElements() -> [Any]?",
      "desc": "Returns the list of elements that the accessibility element is a title for."
    },
    {
      "name": "func setAccessibilityServesAsTitleForUIElements([Any]?)",
      "desc": "Sets the list of elements that the accessibility element is a title for."
    },
    {
      "name": "func accessibilityTitleUIElement() -> Any?",
      "desc": "Returns the static text element that represents the accessibility element’s title."
    },
    {
      "name": "func setAccessibilityTitleUIElement(Any?)",
      "desc": "Sets the static text element that represents the accessibility element’s title."
    },
    {
      "name": "func accessibilityClearButton() -> Any?",
      "desc": "Returns the clear button for the search field."
    },
    {
      "name": "func setAccessibilityClearButton(Any?)",
      "desc": "Sets the clear button for the search field."
    },
    {
      "name": "func accessibilitySearchButton() -> Any?",
      "desc": "Returns the search button for the search field."
    },
    {
      "name": "func setAccessibilitySearchButton(Any?)",
      "desc": "Sets the search button for the search field."
    },
    {
      "name": "func accessibilitySearchMenu() -> Any?",
      "desc": "Returns the search menu for the search field."
    },
    {
      "name": "func setAccessibilitySearchMenu(Any?)",
      "desc": "Sets the search menu for the search field."
    },
    {
      "name": "func accessibilityPerformCancel() -> Bool",
      "desc": "Cancels the current operation."
    },
    {
      "name": "func accessibilityPerformConfirm() -> Bool",
      "desc": "Simulates pressing Return in the accessibility element."
    },
    {
      "name": "func accessibilityPerformPick() -> Bool",
      "desc": "Selects the accessibility element."
    },
    {
      "name": "func accessibilityPerformPress() -> Bool",
      "desc": "Simulates clicking the accessibility element."
    },
    {
      "name": "func accessibilityPerformShowAlternateUI() -> Bool",
      "desc": "Displays the accessibility element’s alternative UI."
    },
    {
      "name": "func accessibilityPerformShowDefaultUI() -> Bool",
      "desc": "Returns to the accessibility element’s original UI."
    },
    {
      "name": "func accessibilityPerformShowMenu() -> Bool",
      "desc": "Displays the menu accessibility element."
    },
    {
      "name": "func accessibilityPerformRaise() -> Bool",
      "desc": "Brings the window to the front."
    },
    {
      "name": "func accessibilityIncrementButton() -> Any?",
      "desc": "Returns the increment button for the stepper accessibility element."
    },
    {
      "name": "func setAccessibilityIncrementButton(Any?)",
      "desc": "Sets the increment button for the stepper accessibility element."
    },
    {
      "name": "func accessibilityDecrementButton() -> Any?",
      "desc": "Returns the decrement button for the stepper accessibility element."
    },
    {
      "name": "func setAccessibilityDecrementButton(Any?)",
      "desc": "Sets the decrement button for the stepper accessibility element."
    },
    {
      "name": "func accessibilityPerformIncrement() -> Bool",
      "desc": "Increments the accessibility element’s value."
    },
    {
      "name": "func accessibilityPerformDecrement() -> Bool",
      "desc": "Decrements the accessibility element’s value."
    },
    {
      "name": "func accessibilityPerformDelete() -> Bool",
      "desc": "Deletes the accessibility element’s value."
    },
    {
      "name": "static func post(element: Any, notification: NSAccessibility.Notification)",
      "desc": "Sends a notification to any observing assistive apps."
    },
    {
      "name": "static func post(element: Any, notification: NSAccessibility.Notification, userInfo: [NSAccessibility.NotificationUserInfoKey : Any]?)",
      "desc": "Sends a notification and an optional user info dictionary to any observing assistive apps."
    },
    {
      "name": "struct NSAccessibility.Notification",
      "desc": "The name of the notification."
    },
    {
      "name": "struct NSAccessibility.NotificationUserInfoKey",
      "desc": "The key in the user info dictionary for a notification."
    },
    {
      "name": "static let ErrorCodeExceptionInfo: String",
      "desc": "An integer error code for debugging."
    },
    {
      "name": "struct NSAccessibility",
      "desc": "A namespace for accessibility symbols for AppKit apps."
    }
  ],
  "declaration": "protocol NSAccessibilityProtocol",
  "inheritsFrom": [
    "NSObjectProtocol"
  ]
}