{
  "path": "/documentation/appkit/nsworkspace/fileoperationname",
  "type": "Structure",
  "name": "NSWorkspace.FileOperationName",
  "desc": "These constants specify different types of file operations used by performFileOperation(_:source:destination:files:tag:).DeprecatedUse FileManager methods instead.",
  "items": [
    {
      "name": "static let compressOperation: NSWorkspace.FileOperationName",
      "desc": "Compress file. This operation always returns an error."
    },
    {
      "name": "static let copyOperation: NSWorkspace.FileOperationName",
      "desc": "Copy file to destination. Behaves the same as copyPath:toPath:handler:."
    },
    {
      "name": "static let decompressOperation: NSWorkspace.FileOperationName",
      "desc": "Decompress file. This operation always returns an error."
    },
    {
      "name": "static let decryptOperation: NSWorkspace.FileOperationName",
      "desc": "Decrypt file. This operation always returns an error."
    },
    {
      "name": "static let destroyOperation: NSWorkspace.FileOperationName",
      "desc": "Destroy file. Behaves the same as removeFileAtPath:handler:."
    },
    {
      "name": "static let duplicateOperation: NSWorkspace.FileOperationName",
      "desc": "Duplicate file in source directory."
    },
    {
      "name": "static let encryptOperation: NSWorkspace.FileOperationName",
      "desc": "Encrypt file. This operation always returns an error."
    },
    {
      "name": "static let linkOperation: NSWorkspace.FileOperationName",
      "desc": "Create hard link to file in destination. Behaves the same as linkPath:toPath:handler:."
    },
    {
      "name": "static let moveOperation: NSWorkspace.FileOperationName",
      "desc": "Move file to destination. Behaves the same as movePath:toPath:handler:."
    },
    {
      "name": "static let recycleOperation: NSWorkspace.FileOperationName",
      "desc": "Move file to trash. The file is moved to the trash folder on the volume containing the file using the same semantics as NSWorkspaceMoveOperation. If a file with the same name currently exists in the trash folder, the new file is renamed. If no trash folder exists on the volume containing the file, the operation fails."
    },
    {
      "name": "init(rawValue: String)"
    }
  ],
  "declaration": "struct FileOperationName, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}