{
  "path": "/documentation/appkit/nsvisualeffectview",
  "type": "Class",
  "name": "NSVisualEffectView",
  "desc": "A view that adds translucency and vibrancy effects to the views in your interface.",
  "items": [
    {
      "name": "var material: NSVisualEffectView.Material",
      "desc": "The material shown by the visual effect view."
    },
    {
      "name": "enum NSVisualEffectView.Material",
      "desc": "Constants to specify the material shown by the visual effect view."
    },
    {
      "name": "var blendingMode: NSVisualEffectView.BlendingMode",
      "desc": "A value indicating how the view’s contents blend with the surrounding content."
    },
    {
      "name": "enum NSVisualEffectView.BlendingMode",
      "desc": "Constants that specify whether the visual effect view blends with what's either behind or within the window."
    },
    {
      "name": "var isEmphasized: Bool",
      "desc": "A Boolean value indicating whether to emphasize the look of the material."
    },
    {
      "name": "var interiorBackgroundStyle: NSView.BackgroundStyle",
      "desc": "The view’s interior background style."
    },
    {
      "name": "var maskImage: NSImage?",
      "desc": "An image whose alpha channel masks the visual effect view's material."
    },
    {
      "name": "var state: NSVisualEffectView.State",
      "desc": "A value that indicates whether a view has a visual effect applied."
    },
    {
      "name": "enum NSVisualEffectView.State",
      "desc": "Constants to specify how the material appearance should reflect window activity state."
    },
    {
      "name": "func viewDidMoveToWindow()",
      "desc": "Notifies the view that it moved to a new window."
    },
    {
      "name": "func viewWillMove(toWindow: NSWindow?)",
      "desc": "Notifies the view immediately before it moves to a new window (which may be nil)."
    }
  ],
  "declaration": "class NSVisualEffectView : NSView",
  "inheritsFrom": [
    "NSView"
  ]
}