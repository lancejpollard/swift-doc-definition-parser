{
  "path": "/documentation/appkit/nstexttable",
  "type": "Class",
  "name": "NSTextTable",
  "desc": "An object that represents a text table as a whole.",
  "items": [
    {
      "name": "var numberOfColumns: Int",
      "desc": "The number of columns in the text table."
    },
    {
      "name": "var layoutAlgorithm: NSTextTable.LayoutAlgorithm",
      "desc": "The text table layout algorithm."
    },
    {
      "name": "var collapsesBorders: Bool",
      "desc": "A Boolean value indicating whether the text table borders are collapsible."
    },
    {
      "name": "var hidesEmptyCells: Bool",
      "desc": "A Boolean value indicating whether the text table hides empty cells."
    },
    {
      "name": "func rect(for: NSTextTableBlock, layoutAt: NSPoint, in: NSRect, textContainer: NSTextContainer, characterRange: NSRange) -> NSRect",
      "desc": "Returns the rectangle within which glyphs should be laid out for a text table block."
    },
    {
      "name": "func boundsRect(for: NSTextTableBlock, contentRect: NSRect, in: NSRect, textContainer: NSTextContainer, characterRange: NSRange) -> NSRect",
      "desc": "Returns the rectangle the text table block actually occupies, including padding, borders, and margins."
    },
    {
      "name": "func drawBackground(for: NSTextTableBlock, withFrame: NSRect, in: NSView, characterRange: NSRange, layoutManager: NSLayoutManager)",
      "desc": "Draws any colors and other decorations for a text table block."
    },
    {
      "name": "enum NSTextTable.LayoutAlgorithm",
      "desc": "These constants, specifying the type of text table layout algorithm, are used with layoutAlgorithm."
    }
  ],
  "declaration": "class NSTextTable : NSTextBlock",
  "inheritsFrom": [
    "NSTextBlock"
  ]
}