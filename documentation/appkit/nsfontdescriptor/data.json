{
  "path": "/documentation/appkit/nsfontdescriptor",
  "type": "Class",
  "name": "NSFontDescriptor",
  "desc": "A dictionary of attributes that describe a font.",
  "items": [
    {
      "name": "class func preferredFontDescriptor(forTextStyle: NSFont.TextStyle, options: [NSFont.TextStyleOptionKey : Any]) -> NSFontDescriptor",
      "desc": "Returns a font descriptor that contains the text style."
    },
    {
      "name": "init(name: String, matrix: AffineTransform)",
      "desc": "Returns a font descriptor with the name and matrix attributes set to the given values."
    },
    {
      "name": "init(name: String, size: CGFloat)",
      "desc": "Returns a font descriptor with the name and size attributes set to the given values."
    },
    {
      "name": "init(fontAttributes: [NSFontDescriptor.AttributeName : Any]?)",
      "desc": "Initializes and returns a new font descriptor with the specified attributes."
    },
    {
      "name": "func addingAttributes([NSFontDescriptor.AttributeName : Any]) -> NSFontDescriptor",
      "desc": "Returns a new font descriptor based on the current object, but with the specified attributes taking precedence over the existing ones."
    },
    {
      "name": "func withFace(String) -> NSFontDescriptor",
      "desc": "Returns a new font descriptor based on the current object, but with the specified face."
    },
    {
      "name": "func withFamily(String) -> NSFontDescriptor",
      "desc": "Returns a new font descriptor based on the current object, but with the specified font family."
    },
    {
      "name": "func withMatrix(AffineTransform) -> NSFontDescriptor",
      "desc": "Returns a new font descriptor based on the current object, but with the specified font matrix."
    },
    {
      "name": "func withSize(CGFloat) -> NSFontDescriptor",
      "desc": "Returns a new font descriptor based on the current object, but with the specified point size."
    },
    {
      "name": "func withSymbolicTraits(NSFontDescriptor.SymbolicTraits) -> NSFontDescriptor",
      "desc": "Returns a new font descriptor based on the current object, but with the specified symbolic traits taking precedence over the existing ones."
    },
    {
      "name": "func withDesign(NSFontDescriptor.SystemDesign) -> Self?",
      "desc": "Returns a new font descriptor based on the current object, but with the specified design style."
    },
    {
      "name": "struct NSFontDescriptor.SystemDesign",
      "desc": "Constants for font designs, such as monospace, rounded, and serif."
    },
    {
      "name": "func matchingFontDescriptors(withMandatoryKeys: Set<NSFontDescriptor.AttributeName>?) -> [NSFontDescriptor]",
      "desc": "Returns all the fonts available on the system whose specified attributes match those of the receiver."
    },
    {
      "name": "func matchingFontDescriptor(withMandatoryKeys: Set<NSFontDescriptor.AttributeName>?) -> NSFontDescriptor?",
      "desc": "Returns a normalized font descriptor whose specified attributes match those of the receiver."
    },
    {
      "name": "var fontAttributes: [NSFontDescriptor.AttributeName : Any]",
      "desc": "The receiverâ€™s dictionary of attributes."
    },
    {
      "name": "func object(forKey: NSFontDescriptor.AttributeName) -> Any?",
      "desc": "Returns the font attribute specified by the given key."
    },
    {
      "name": "struct NSFontDescriptor.AttributeName",
      "desc": "Constants for the names of font attributes."
    },
    {
      "name": "struct NSFontDescriptor.SymbolicTraits",
      "desc": "A symbolic description of the stylistic aspects of a font."
    },
    {
      "name": "var matrix: AffineTransform?",
      "desc": "The current transform matrix of the receiver."
    },
    {
      "name": "var pointSize: CGFloat",
      "desc": "The point size of the receiver."
    },
    {
      "name": "var postscriptName: String?",
      "desc": "The PostScript name of the receiver."
    },
    {
      "name": "struct NSFontDescriptor.FeatureKey",
      "desc": "Constants to use as keys to retrieve information about a font descriptor from its feature dictionary."
    },
    {
      "name": "typealias NSFontFamilyClass",
      "desc": "Constants that classify certain stylistic qualities of the font."
    },
    {
      "name": "struct NSFontDescriptor.VariationKey",
      "desc": "Constants that can be used as keys to retrieve information about a font descriptor from its variation axis dictionary."
    },
    {
      "name": "var symbolicTraits: NSFontDescriptor.SymbolicTraits",
      "desc": "A bit mask that describes the traits of the receiver."
    },
    {
      "name": "typealias NSFontSymbolicTraits",
      "desc": "A symbolic description of stylistic aspects of a font."
    },
    {
      "name": "struct NSFontDescriptor.TraitKey",
      "desc": "Constants that can be used as keys to retrieve information about a font descriptor from its trait dictionary."
    },
    {
      "name": "var requiresFontAssetRequest: Bool"
    }
  ],
  "declaration": "class NSFontDescriptor : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSSecureCoding"
  ]
}