{
  "path": "/documentation/appkit/nsscroller",
  "type": "Class",
  "name": "NSScroller",
  "desc": "An object that controls scrolling of a document view within a scroll view or other type of container view.",
  "items": [
    {
      "name": "class func scrollerWidth(for: NSControl.ControlSize, scrollerStyle: NSScroller.Style) -> CGFloat",
      "desc": "Returns the width for scrollers of the receiving class for a given control size and scroller style."
    },
    {
      "name": "var controlSize: NSControl.ControlSize",
      "desc": "The size of the scroller."
    },
    {
      "name": "func rect(for: NSScroller.Part) -> NSRect",
      "desc": "Returns the rectangle occupied by aPart, which for this method is interpreted literally rather than as an indicator of scrolling direction."
    },
    {
      "name": "func testPart(NSPoint) -> NSScroller.Part",
      "desc": "Returns the part that would be hit by a mouse-down event at aPoint (expressed in the window’s coordinate system)."
    },
    {
      "name": "func checkSpaceForParts()",
      "desc": "Checks to see if there is enough room in the receiver to display the knob and buttons."
    },
    {
      "name": "var usableParts: NSScroller.UsableParts",
      "desc": "A value that indicates which parts of the receiver are displayed and usable."
    },
    {
      "name": "func drawKnobSlot(in: NSRect, highlight: Bool)",
      "desc": "Draws the portion of the scroller’s track, possibly including the line increment and decrement arrow buttons, that falls in the given rectangle."
    },
    {
      "name": "func drawKnob()",
      "desc": "Draws the knob."
    },
    {
      "name": "var hitPart: NSScroller.Part",
      "desc": "A part code indicating the manner in which the scrolling should be performed."
    },
    {
      "name": "func trackKnob(with: NSEvent)",
      "desc": "Tracks the knob and sends action messages to the receiver’s target."
    },
    {
      "name": "class var preferredScrollerStyle: NSScroller.Style",
      "desc": "Returns the style of scrollers that applications should use wherever possible."
    },
    {
      "name": "var scrollerStyle: NSScroller.Style",
      "desc": "The scroller style for this scroller."
    },
    {
      "name": "var knobStyle: NSScroller.KnobStyle",
      "desc": "The scroller’s knob style."
    },
    {
      "name": "enum NSScroller.Style",
      "desc": "Constants to specify the scroller style."
    },
    {
      "name": "enum NSScroller.KnobStyle",
      "desc": "Specify different knob styles."
    },
    {
      "name": "enum NSScroller.Part",
      "desc": "These constants specify the different parts of the scroller:"
    },
    {
      "name": "enum NSScroller.UsableParts",
      "desc": "These constants specify which parts of the scroller are visible."
    },
    {
      "name": "class let preferredScrollerStyleDidChangeNotification: NSNotification.Name",
      "desc": "Posted if the preferred scroller style changes."
    },
    {
      "name": "var knobProportion: CGFloat",
      "desc": "The proportion of the knob slot that the knob should fill."
    },
    {
      "name": "class var isCompatibleWithOverlayScrollers: Bool"
    }
  ],
  "declaration": "class NSScroller : NSControl",
  "inheritsFrom": [
    "NSControl"
  ]
}