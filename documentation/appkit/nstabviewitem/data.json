{
  "path": "/documentation/appkit/nstabviewitem",
  "type": "Class",
  "name": "NSTabViewItem",
  "desc": "An item in a tab view.",
  "items": [
    {
      "name": "init(identifier: Any?)",
      "desc": "Performs default initialization for the receiver."
    },
    {
      "name": "func drawLabel(Bool, in: NSRect)",
      "desc": "Draws the receiver’s label in tabRect, which is the area between the curved end caps."
    },
    {
      "name": "var label: String",
      "desc": "Sets the label text for the receiver to label."
    },
    {
      "name": "func sizeOfLabel(Bool) -> NSSize",
      "desc": "Calculates the size of the receiver’s label."
    },
    {
      "name": "var tabState: NSTabViewItem.State",
      "desc": "Returns the current display state of the tab associated with the receiver."
    },
    {
      "name": "var identifier: Any?",
      "desc": "Sets the receiver’s optional identifier object to identifier."
    },
    {
      "name": "var color: NSColor",
      "desc": "Sets the background color for content in the view."
    },
    {
      "name": "var view: NSView?",
      "desc": "Sets the view associated with the receiver to view."
    },
    {
      "name": "var initialFirstResponder: NSView?",
      "desc": "Sets the initial first responder for the view associated with the receiver (the view that is displayed when a user clicks on the tab) to view."
    },
    {
      "name": "var tabView: NSTabView?",
      "desc": "Returns the parent tab view for the receiver."
    },
    {
      "name": "var toolTip: String?",
      "desc": "Sets the tooltip displayed for the tab view item."
    },
    {
      "name": "enum NSTabViewItem.State",
      "desc": "These constants describe the current display state of a tab:"
    },
    {
      "name": "init(viewController: NSViewController)"
    },
    {
      "name": "var image: NSImage?"
    },
    {
      "name": "var viewController: NSViewController?"
    }
  ],
  "declaration": "class NSTabViewItem : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCoding"
  ]
}