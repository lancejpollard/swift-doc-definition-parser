{
  "path": "/documentation/appkit/nsmenuitemcell",
  "type": "Class",
  "name": "NSMenuItemCell",
  "desc": "An object that handles the measurement and display of a single menu item in its encompassing frame.",
  "items": [
    {
      "name": "init(coder: NSCoder)"
    },
    {
      "name": "init(textCell: String)"
    },
    {
      "name": "var menuItem: NSMenuItem?",
      "desc": "The menu item object associated with the cell."
    },
    {
      "name": "func calcSize()",
      "desc": "Calculates the minimum required width and height of the receiver’s menu item."
    },
    {
      "name": "var needsSizing: Bool",
      "desc": "A Boolean value indicating whether the size of the menu needs to be calculated."
    },
    {
      "name": "var imageWidth: CGFloat",
      "desc": "The width of the image associated with the menu item."
    },
    {
      "name": "var titleWidth: CGFloat",
      "desc": "The width of the menu item’s text, measured in points."
    },
    {
      "name": "var keyEquivalentWidth: CGFloat",
      "desc": "The width of the menu item’s key equivalent string."
    },
    {
      "name": "var stateImageWidth: CGFloat",
      "desc": "The width of the image used to indicate the state of the menu item."
    },
    {
      "name": "func keyEquivalentRect(forBounds: NSRect) -> NSRect",
      "desc": "Returns the rectangle into which the menu item’s key equivalent should be drawn."
    },
    {
      "name": "func stateImageRect(forBounds: NSRect) -> NSRect",
      "desc": "Returns the rectangle into which the menu item’s state image should be drawn."
    },
    {
      "name": "func titleRect(forBounds: NSRect) -> NSRect",
      "desc": "Returns the rectangle into which the menu item’s title should be drawn."
    },
    {
      "name": "func drawBorderAndBackground(withFrame: NSRect, in: NSView)",
      "desc": "Draws the borders and background associated with the receiver’s menu item (if any)."
    },
    {
      "name": "func drawImage(withFrame: NSRect, in: NSView)",
      "desc": "Draws the image associated with the menu item."
    },
    {
      "name": "func drawKeyEquivalent(withFrame: NSRect, in: NSView)",
      "desc": "Draws the key equivalent associated with the menu item."
    },
    {
      "name": "func drawSeparatorItem(withFrame: NSRect, in: NSView)",
      "desc": "Draws a menu item separator."
    },
    {
      "name": "func drawStateImage(withFrame: NSRect, in: NSView)",
      "desc": "Draws the state image associated with the menu item."
    },
    {
      "name": "func drawTitle(withFrame: NSRect, in: NSView)",
      "desc": "Draws the title associated with the menu item."
    },
    {
      "name": "var needsDisplay: Bool",
      "desc": "A Boolean value indicating whether the menu item needs to be displayed."
    },
    {
      "name": "var tag: Int",
      "desc": "The integer tag of the selected menu item."
    }
  ],
  "declaration": "class NSMenuItemCell : NSButtonCell",
  "inheritsFrom": [
    "NSButtonCell"
  ]
}