{
  "path": "/documentation/appkit/nsform",
  "type": "Class",
  "name": "NSForm",
  "desc": "An NSForm object is a vertical matrix of NSFormCell objects to implement the fields.",
  "items": [
    {
      "name": "func addEntry(String) -> NSFormCell",
      "desc": "Adds a new entry to the end of the receiver and gives it the specified title."
    },
    {
      "name": "func insertEntry(String, at: Int) -> NSFormCell!",
      "desc": "Inserts an entry with the specified title into the receiver."
    },
    {
      "name": "func removeEntry(at: Int)",
      "desc": "Removes and releases the entry at the specified index."
    },
    {
      "name": "func setBezeled(Bool)",
      "desc": "Sets whether the receiver's entries should display a bezel around their editable text."
    },
    {
      "name": "func setBordered(Bool)",
      "desc": "Sets whether the receiver's entries should display a border around their editable text fields."
    },
    {
      "name": "func setEntryWidth(CGFloat)",
      "desc": "Sets the width of all the entries in the receiver."
    },
    {
      "name": "func setFrameSize(NSSize)",
      "desc": "Sets the size of the receiver’s frame size to the specified value."
    },
    {
      "name": "func setInterlineSpacing(CGFloat)",
      "desc": "Sets the spacing between entries"
    },
    {
      "name": "func setTitleAlignment(NSTextAlignment)",
      "desc": "Sets the alignment for all of the entry titles."
    },
    {
      "name": "func setTitleBaseWritingDirection(NSWritingDirection)",
      "desc": "Sets the writing direction for the title of every control embedded in the form."
    },
    {
      "name": "func setTextAlignment(NSTextAlignment)",
      "desc": "Sets the alignment for all of the receiver’s editable text."
    },
    {
      "name": "func setTextBaseWritingDirection(NSWritingDirection)",
      "desc": "Sets the writing direction for the text content of every control embedded in the form."
    },
    {
      "name": "func setTitleFont(NSFont)",
      "desc": "Sets the font for all of the entry titles."
    },
    {
      "name": "func setTextFont(NSFont)",
      "desc": "Sets the font for all of the receiver’s editable text fields"
    },
    {
      "name": "func indexOfCell(withTag: Int) -> Int",
      "desc": "Returns the index of the entry whose tag is tag."
    },
    {
      "name": "func indexOfSelectedItem() -> Int",
      "desc": "Returns the index of the selected entry."
    },
    {
      "name": "func cell(at: Int) -> Any!",
      "desc": "Returns the entry at the specified index."
    },
    {
      "name": "func drawCell(at: Int)",
      "desc": "Displays the entry at the specified index."
    },
    {
      "name": "func preferredTextFieldWidth() -> CGFloat",
      "desc": "The preferred width of the form’s cells when using Auto Layout."
    },
    {
      "name": "func setPreferredTextFieldWidth(CGFloat)",
      "desc": "Sets the preferred text field width used by Auto Layout."
    },
    {
      "name": "func selectText(at: Int)",
      "desc": "Selects the entry at the specified index."
    }
  ],
  "declaration": "class NSForm : NSMatrix",
  "inheritsFrom": [
    "NSMatrix"
  ]
}