{
  "path": "/documentation/appkit/nscombobox",
  "type": "Class",
  "name": "NSComboBox",
  "desc": "A view that displays a list of values in a pop-up menu where the user selects a value or types in a custom value.",
  "items": [
    {
      "name": "var hasVerticalScroller: Bool",
      "desc": "A Boolean value indicating whether the combo box has a vertical scroller."
    },
    {
      "name": "var intercellSpacing: NSSize",
      "desc": "The horizontal and vertical spacing between cells in the pop-up list."
    },
    {
      "name": "var isButtonBordered: Bool",
      "desc": "A Boolean value indicating whether the combo box displays a border."
    },
    {
      "name": "var itemHeight: CGFloat",
      "desc": "The height of each item in the pop-up list."
    },
    {
      "name": "var numberOfVisibleItems: Int",
      "desc": "The maximum number of visible items to display in the pop-up list at one time."
    },
    {
      "name": "var dataSource: NSComboBoxDataSource?",
      "desc": "The object that provides the item data for the combo box."
    },
    {
      "name": "var usesDataSource: Bool",
      "desc": "A Boolean value indicating whether the combo box retrieves its items from a data source object."
    },
    {
      "name": "func addItems(withObjectValues: [Any])",
      "desc": "Adds multiple objects to the end of the receiver’s internal item list."
    },
    {
      "name": "func addItem(withObjectValue: Any)",
      "desc": "Adds an object to the end of the receiver’s internal item list."
    },
    {
      "name": "func insertItem(withObjectValue: Any, at: Int)",
      "desc": "Inserts an object at the specified location in the receiver’s internal item list."
    },
    {
      "name": "var objectValues: [Any]",
      "desc": "An array of the items from the combo box’s internal list."
    },
    {
      "name": "func removeAllItems()",
      "desc": "Removes all items from the receiver’s internal item list."
    },
    {
      "name": "func removeItem(at: Int)",
      "desc": "Removes the object at the specified location from the receiver’s internal item list."
    },
    {
      "name": "func removeItem(withObjectValue: Any)",
      "desc": "Removes all occurrences of the given object from the receiver’s internal item list."
    },
    {
      "name": "var numberOfItems: Int",
      "desc": "The total number of items in the pop-up list."
    },
    {
      "name": "func indexOfItem(withObjectValue: Any) -> Int",
      "desc": "Searches the receiver’s internal item list for the specified object and returns the lowest matching index."
    },
    {
      "name": "func itemObjectValue(at: Int) -> Any",
      "desc": "Returns the object located at the given index within the receiver’s internal item list."
    },
    {
      "name": "func noteNumberOfItemsChanged()",
      "desc": "Informs the receiver that the number of items in its data source has changed."
    },
    {
      "name": "func reloadData()",
      "desc": "Marks the receiver as needing redisplay, so that it will reload the data for visible pop-up items and draw the new values."
    },
    {
      "name": "func scrollItemAtIndexToTop(Int)",
      "desc": "Scrolls the receiver’s pop-up list vertically so that the item at the specified index is as close to the top as possible."
    },
    {
      "name": "func scrollItemAtIndexToVisible(Int)",
      "desc": "Scrolls the receiver’s pop-up list vertically so that the item at the specified index is visible."
    },
    {
      "name": "func deselectItem(at: Int)",
      "desc": "Deselects the pop-up list item at the specified index if it’s selected."
    },
    {
      "name": "var indexOfSelectedItem: Int",
      "desc": "The index of the last item selected from the pop-up list."
    },
    {
      "name": "var objectValueOfSelectedItem: Any?",
      "desc": "The object corresponding to the last item selected from the pop-up list."
    },
    {
      "name": "func selectItem(at: Int)",
      "desc": "Selects the pop-up list row at the given index."
    },
    {
      "name": "func selectItem(withObjectValue: Any?)",
      "desc": "Selects the first pop-up list item that corresponds to the given object."
    },
    {
      "name": "var completes: Bool",
      "desc": "A Boolean value indicating whether the combo box tries to complete what the user types."
    },
    {
      "name": "var delegate: NSComboBoxDelegate?",
      "desc": "Sets the receiver’s delegate."
    },
    {
      "name": "class let selectionDidChangeNotification: NSNotification.Name",
      "desc": "Posted after the pop-up list selection of the NSComboBox changes."
    },
    {
      "name": "class let selectionIsChangingNotification: NSNotification.Name",
      "desc": "Posted whenever the pop-up list selection of the NSComboBox is changing."
    },
    {
      "name": "class let willDismissNotification: NSNotification.Name",
      "desc": "Posted whenever the pop-up list of the NSComboBox is about to be dismissed."
    },
    {
      "name": "class let willPopUpNotification: NSNotification.Name",
      "desc": "Posted whenever the pop-up list of the NSComboBox is going to be displayed."
    }
  ],
  "declaration": "class NSComboBox : NSTextField",
  "inheritsFrom": [
    "NSTextField"
  ]
}