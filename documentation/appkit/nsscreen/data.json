{
  "path": "/documentation/appkit/nsscreen",
  "type": "Class",
  "name": "NSScreen",
  "desc": "An object that describes the attributes of a computer’s monitor or screen.",
  "items": [
    {
      "name": "class var main: NSScreen?",
      "desc": "Returns the screen object containing the window with the keyboard focus."
    },
    {
      "name": "class var deepest: NSScreen?",
      "desc": "Returns a screen object representing the screen that can best represent color."
    },
    {
      "name": "class var screens: [NSScreen]",
      "desc": "Returns an array of screen objects representing all of the screens available on the system."
    },
    {
      "name": "var depth: NSWindow.Depth",
      "desc": "The current bit depth and colorspace information of the screen."
    },
    {
      "name": "var frame: NSRect",
      "desc": "The dimensions and location of the screen."
    },
    {
      "name": "var supportedWindowDepths: UnsafePointer<NSWindow.Depth>",
      "desc": "A zero-terminated array of the window depths supported by the screen."
    },
    {
      "name": "var deviceDescription: [NSDeviceDescriptionKey : Any]",
      "desc": "The device dictionary for the screen."
    },
    {
      "name": "struct NSDeviceDescriptionKey",
      "desc": "These constants are the keys for device description dictionaries."
    },
    {
      "name": "var colorSpace: NSColorSpace?",
      "desc": "The color space of the screen."
    },
    {
      "name": "var localizedName: String",
      "desc": "The localized name of the display."
    },
    {
      "name": "func canRepresent(NSDisplayGamut) -> Bool",
      "desc": "A Boolean value indicating whether the color space of the screen is capable of representing the specified display gamut."
    },
    {
      "name": "enum NSDisplayGamut"
    },
    {
      "name": "class var screensHaveSeparateSpaces: Bool",
      "desc": "Returns a Boolean value indicating whether each screen can have its own set of spaces."
    },
    {
      "name": "func backingAlignedRect(NSRect, options: AlignmentOptions) -> NSRect",
      "desc": "Converts a rectangle in global screen coordinates to a pixel aligned rectangle."
    },
    {
      "name": "var backingScaleFactor: CGFloat",
      "desc": "The backing store pixel scale factor for the screen."
    },
    {
      "name": "func convertRectFromBacking(NSRect) -> NSRect",
      "desc": "Converts the rectangle from the device pixel aligned coordinates system of a screen."
    },
    {
      "name": "func convertRectToBacking(NSRect) -> NSRect",
      "desc": "Converts the rectangle to the device pixel aligned coordinates system of a screen."
    },
    {
      "name": "var visibleFrame: NSRect",
      "desc": "The current location and dimensions of the visible screen."
    },
    {
      "name": "var safeAreaInsets: NSEdgeInsets",
      "desc": "The distances from the screen’s edges at which content isn’t obscured."
    },
    {
      "name": "var auxiliaryTopLeftArea: NSRect?",
      "desc": "The unobscured portion of the top-left corner of the screen."
    },
    {
      "name": "var auxiliaryTopRightArea: NSRect?",
      "desc": "The unobscured portion of the top-right corner of the screen."
    },
    {
      "name": "var maximumPotentialExtendedDynamicRangeColorComponentValue: CGFloat",
      "desc": "The maximum possible color component value for the screen when it's in extended dynamic range (EDR) mode."
    },
    {
      "name": "var maximumExtendedDynamicRangeColorComponentValue: CGFloat",
      "desc": "The current maximum color component value for the screen."
    },
    {
      "name": "var maximumReferenceExtendedDynamicRangeColorComponentValue: CGFloat",
      "desc": "The current maximum color component value for reference rendering to the screen."
    },
    {
      "name": "var maximumFramesPerSecond: Int",
      "desc": "The maximum number of frames per second that the screen supports."
    },
    {
      "name": "var minimumRefreshInterval: TimeInterval",
      "desc": "The shortest refresh interval that the screen supports."
    },
    {
      "name": "var maximumRefreshInterval: TimeInterval",
      "desc": "The largest refresh interval that the screen supports."
    },
    {
      "name": "var displayUpdateGranularity: TimeInterval",
      "desc": "The number of seconds between the screen’s supported update rates, for screens that support fixed update rates."
    },
    {
      "name": "var lastDisplayUpdateTimestamp: TimeInterval",
      "desc": "The time of the last framebuffer update, expressed as the number of seconds since system startup."
    },
    {
      "name": "class let colorSpaceDidChangeNotification: NSNotification.Name",
      "desc": "Posted when the color space of the screen has changed."
    }
  ],
  "declaration": "class NSScreen : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}