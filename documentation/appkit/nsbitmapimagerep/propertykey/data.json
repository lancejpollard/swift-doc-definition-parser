{
  "path": "/documentation/appkit/nsbitmapimagerep/propertykey",
  "type": "Structure",
  "name": "NSBitmapImageRep.PropertyKey",
  "desc": "Constants that identify bitmap image representation properties.",
  "items": [
    {
      "name": "static let colorSyncProfileData: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSData object containing the ColorSync profile data."
    },
    {
      "name": "static let compressionFactor: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSNumber object containing the compression factor of the image."
    },
    {
      "name": "static let compressionMethod: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSNumber object identifying the compression method of the image."
    },
    {
      "name": "static let currentFrame: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSNumber object containing the current frame for an animated GIF file."
    },
    {
      "name": "static let currentFrameDuration: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSNumber object containing the duration (in seconds) of the current frame for an animated GIF image."
    },
    {
      "name": "static let ditherTransparency: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSNumber object containing a Boolean that indicates whether the image is dithered."
    },
    {
      "name": "static let exifData: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSDictionary object containing the EXIF data for the image."
    },
    {
      "name": "static let fallbackBackgroundColor: NSBitmapImageRep.PropertyKey",
      "desc": "Specifies the background color to use when writing to an image format (such as JPEG) that doesn't support alpha. The color's alpha value is ignored. The default background color, when this property is not specified, is white. The value of the property should be an NSColor object. This constant corresponds to the kCGImageDestinationBackgroundColor constant in Quartz."
    },
    {
      "name": "static let frameCount: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSNumber object containing the number of frames in an animated GIF file."
    },
    {
      "name": "static let gamma: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSNumber object containing the gamma value for the image."
    },
    {
      "name": "static let interlaced: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSNumber object containing a Boolean value that indicates whether the image is interlaced."
    },
    {
      "name": "static let loopCount: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSNumber object containing the number of loops to make when animating a GIF image."
    },
    {
      "name": "static let progressive: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSNumber object containing a Boolean that indicates whether the image uses progressive encoding."
    },
    {
      "name": "static let rgbColorTable: NSBitmapImageRep.PropertyKey",
      "desc": "Identifies an NSData object containing the RGB color table."
    },
    {
      "name": "init(String)"
    },
    {
      "name": "init(rawValue: String)"
    },
    {
      "name": "static let imageIPTCData: NSBitmapImageRep.PropertyKey"
    }
  ],
  "declaration": "struct PropertyKey, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}