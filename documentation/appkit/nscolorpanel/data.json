{
  "path": "/documentation/appkit/nscolorpanel",
  "type": "Class",
  "name": "NSColorPanel",
  "desc": "A standard user interface for selecting color in an app.",
  "items": [
    {
      "name": "class var shared: NSColorPanel",
      "desc": "Returns the shared NSColorPanel instance, creating it if necessary."
    },
    {
      "name": "class var sharedColorPanelExists: Bool",
      "desc": "Returns a Boolean value indicating whether the NSColorPanel has been created already."
    },
    {
      "name": "class func setPickerMode(NSColorPanel.Mode)",
      "desc": "Specifies the color panel’s initial picker."
    },
    {
      "name": "var mode: NSColorPanel.Mode",
      "desc": "The mode of the receiver the mode is one of the modes allowed by the color mask."
    },
    {
      "name": "enum NSColorPanel.Mode",
      "desc": "A type defined for the enum constants specifying color panel modes."
    },
    {
      "name": "class func setPickerMask(NSColorPanel.Options)",
      "desc": "Determines which color selection modes are available in an application’s NSColorPanel."
    },
    {
      "name": "struct NSColorPanel.Options",
      "desc": "The color modes that are enabled for a color panel."
    },
    {
      "name": "var accessoryView: NSView?",
      "desc": "The accessory view."
    },
    {
      "name": "var isContinuous: Bool",
      "desc": "A Boolean value indicating whether the receiver continuously sends the action message to the target."
    },
    {
      "name": "func setAction(Selector?)",
      "desc": "Sets the color panel's action message."
    },
    {
      "name": "func setTarget(Any?)",
      "desc": "Sets the target of the receiver."
    },
    {
      "name": "var showsAlpha: Bool",
      "desc": "A Boolean value indicating whether or not the receiver shows alpha values and an opacity slider."
    },
    {
      "name": "func attachColorList(NSColorList)",
      "desc": "Adds the list of NSColor objects specified to all the color pickers in the receiver that display color lists by invoking attachColorList(_:) on all color pickers in the application."
    },
    {
      "name": "func detachColorList(NSColorList)",
      "desc": "Removes the list of colors from all the color pickers in the receiver that display color lists by invoking detachColorList(_:) on all color pickers in the application."
    },
    {
      "name": "class func dragColor(NSColor, with: NSEvent, from: NSView) -> Bool",
      "desc": "Drags a color into a destination view from the specified source view."
    },
    {
      "name": "var color: NSColor",
      "desc": "The color of the receiver."
    },
    {
      "name": "var alpha: CGFloat",
      "desc": "The receiver’s current alpha value based on its opacity slider."
    },
    {
      "name": "protocol NSColorChanging"
    },
    {
      "name": "class let colorDidChangeNotification: NSNotification.Name",
      "desc": "Posted when the color of the NSColorPanel is set, as when NSColorPanel is invoked."
    }
  ],
  "declaration": "class NSColorPanel : NSPanel",
  "inheritsFrom": [
    "NSPanel"
  ]
}