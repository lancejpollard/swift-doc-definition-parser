{
  "path": "/documentation/appkit/nsruleeditor/predicatepartkey",
  "type": "Structure",
  "name": "NSRuleEditor.PredicatePartKey",
  "desc": "These strings are used as keys to the dictionary returned from the delegateâ€™s ruleEditor(_:predicatePartsForCriterion:withDisplayValue:inRow:) optional method. To construct a valid predicate, the union of the dictionaries for each item in the row must contain the required parts.",
  "items": [
    {
      "name": "static let comparisonModifier: NSRuleEditor.PredicatePartKey",
      "desc": "The corresponding value is an NSNumber object representing a NSComparisonPredicate.Modifier constant the of the predicate."
    },
    {
      "name": "static let compoundType: NSRuleEditor.PredicatePartKey",
      "desc": "The corresponding value is an NSNumber object representing a NSCompoundPredicate.LogicalType constant."
    },
    {
      "name": "static let customSelector: NSRuleEditor.PredicatePartKey",
      "desc": "The corresponding value is an NSString object representing a custom selector."
    },
    {
      "name": "static let leftExpression: NSRuleEditor.PredicatePartKey",
      "desc": "The corresponding value is an NSExpression object representing the left expression in the predicate."
    },
    {
      "name": "static let operatorType: NSRuleEditor.PredicatePartKey",
      "desc": "The corresponding value is an NSNumber object representing a NSComparisonPredicate.Operator constant."
    },
    {
      "name": "static let options: NSRuleEditor.PredicatePartKey",
      "desc": "The corresponding value is an NSNumber object representing a NSComparisonPredicate_Optionsbitfield."
    },
    {
      "name": "static let rightExpression: NSRuleEditor.PredicatePartKey",
      "desc": "The corresponding value is an NSExpression object representing the right expression in the predicate."
    },
    {
      "name": "init(rawValue: String)"
    }
  ],
  "declaration": "struct PredicatePartKey, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}