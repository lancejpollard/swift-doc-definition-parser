{
  "path": "/documentation/appkit/nspasteboard",
  "type": "Class",
  "name": "NSPasteboard",
  "desc": "An object that transfers data to and from the pasteboard server.",
  "items": [
    {
      "name": "class var general: NSPasteboard",
      "desc": "The shared pasteboard object to use for general content."
    },
    {
      "name": "init(byFilteringData: Data, ofType: NSPasteboard.PasteboardType)",
      "desc": "Creates a new pasteboard object that supplies the specified data in as many types as possible based on the available filter services."
    },
    {
      "name": "init(byFilteringFile: String)",
      "desc": "Creates a new pasteboard object that supplies the specified file in as many types as possible based on the available filter services."
    },
    {
      "name": "init(byFilteringTypesIn: NSPasteboard)",
      "desc": "Creates a new pasteboard object that supplies the specified pasteboard data in as many types as possible based on the available filter services."
    },
    {
      "name": "init(name: NSPasteboard.Name)",
      "desc": "Returns the pasteboard with the specified name."
    },
    {
      "name": "struct NSPasteboard.Name",
      "desc": "Constants that represent the standard pasteboard names."
    },
    {
      "name": "class func withUniqueName() -> NSPasteboard",
      "desc": "Creates and returns a new pasteboard with a name that is guaranteed to be unique with respect to other pasteboards in the system."
    },
    {
      "name": "func releaseGlobally()",
      "desc": "Releases the receiver’s resources in the pasteboard server."
    },
    {
      "name": "func clearContents() -> Int",
      "desc": "Clears the existing contents of the pasteboard."
    },
    {
      "name": "func writeObjects([NSPasteboardWriting]) -> Bool",
      "desc": "Writes an array of objects to the receiver."
    },
    {
      "name": "func setData(Data?, forType: NSPasteboard.PasteboardType) -> Bool",
      "desc": "Sets the data as the representation for the specified type for the first item on the receiver."
    },
    {
      "name": "func setPropertyList(Any, forType: NSPasteboard.PasteboardType) -> Bool",
      "desc": "Sets the given property list as the representation for the specified type for the first item on the receiver."
    },
    {
      "name": "func setString(String, forType: NSPasteboard.PasteboardType) -> Bool",
      "desc": "Sets the given string as the representation for the specified type for the first item on the receiver."
    },
    {
      "name": "struct NSPasteboard.PasteboardType",
      "desc": "The supported pasteboard types."
    },
    {
      "name": "func readObjects(forClasses: [AnyClass], options: [NSPasteboard.ReadingOptionKey : Any]?) -> [Any]?",
      "desc": "Reads from the receiver objects that best match the specified array of classes."
    },
    {
      "name": "struct NSPasteboard.ReadingOptionKey",
      "desc": "Options for reading pasteboard data."
    },
    {
      "name": "struct NSPasteboard.ReadingOptions",
      "desc": "Options to specify how data on the pasteboard should be interpreted to initialize pasteboard data."
    },
    {
      "name": "var pasteboardItems: [NSPasteboardItem]?",
      "desc": "An array that contains all the items held by the pasteboard."
    },
    {
      "name": "func index(of: NSPasteboardItem) -> Int",
      "desc": "Returns the index of the specified pasteboard item."
    },
    {
      "name": "func data(forType: NSPasteboard.PasteboardType) -> Data?",
      "desc": "Returns the data for the specified type from the first item in the receiver that contains the type."
    },
    {
      "name": "func propertyList(forType: NSPasteboard.PasteboardType) -> Any?",
      "desc": "Returns the property list for the specified type from the first item in the receiver that contains the type."
    },
    {
      "name": "func string(forType: NSPasteboard.PasteboardType) -> String?",
      "desc": "Returns a concatenation of the strings for the specified type from all the items in the receiver that contain the type."
    },
    {
      "name": "func availableType(from: [NSPasteboard.PasteboardType]) -> NSPasteboard.PasteboardType?",
      "desc": "Scans the specified types for a type that the receiver supports."
    },
    {
      "name": "func canReadItem(withDataConformingToTypes: [String]) -> Bool",
      "desc": "Returns a Boolean value that indicates whether the receiver contains any items that conform to the specified UTIs."
    },
    {
      "name": "func canReadObject(forClasses: [AnyClass], options: [NSPasteboard.ReadingOptionKey : Any]?) -> Bool",
      "desc": "Returns a Boolean value that indicates whether the receiver contains any items that can be represented as an instance of any class in a given array."
    },
    {
      "name": "var types: [NSPasteboard.PasteboardType]?",
      "desc": "An array of the receiver’s supported data types."
    },
    {
      "name": "class func types(filterableTo: NSPasteboard.PasteboardType) -> [NSPasteboard.PasteboardType]",
      "desc": "Returns the data types that can be converted to the specified type using the available filter services."
    },
    {
      "name": "func prepareForNewContents(with: NSPasteboard.ContentsOptions) -> Int",
      "desc": "Prepares the pasteboard to receive new contents, removing the existing pasteboard contents."
    },
    {
      "name": "struct NSPasteboard.ContentsOptions",
      "desc": "Options for preparing the pasteboard."
    },
    {
      "name": "var name: NSPasteboard.Name",
      "desc": "The receiver’s name."
    },
    {
      "name": "var changeCount: Int",
      "desc": "The receiver’s change count."
    },
    {
      "name": "func declareTypes([NSPasteboard.PasteboardType], owner: Any?) -> Int",
      "desc": "Prepares the receiver for a change in its contents by declaring the new types of data it will contain and a new owner."
    },
    {
      "name": "func addTypes([NSPasteboard.PasteboardType], owner: Any?) -> Int",
      "desc": "Adds promises for the specified types to the first pasteboard item."
    },
    {
      "name": "func writeFileContents(String) -> Bool",
      "desc": "Writes the contents of the specified file to the pasteboard."
    },
    {
      "name": "func write(FileWrapper) -> Bool",
      "desc": "Writes the serialized contents of the specified file wrapper to the pasteboard."
    },
    {
      "name": "func readFileContentsType(NSPasteboard.PasteboardType?, toFile: String) -> String?",
      "desc": "Reads data representing a file’s contents from the receiver and writes it to the specified file."
    },
    {
      "name": "func readFileWrapper() -> FileWrapper?",
      "desc": "Reads data representing a file’s contents from the receiver and returns it as a file wrapper."
    },
    {
      "name": "struct NSPasteboard.WritingOptions",
      "desc": "Type to specify options for writing to a pasteboard."
    }
  ],
  "declaration": "class NSPasteboard : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}