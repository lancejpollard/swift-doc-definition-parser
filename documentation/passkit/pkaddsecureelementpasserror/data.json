{
  "path": "/documentation/passkit/pkaddsecureelementpasserror",
  "type": "Structure",
  "name": "PKAddSecureElementPassError",
  "desc": "An error object that PassKit uses when it adds Secure Element passes.",
  "items": [
    {
      "name": "init(Code, userInfo: [String : Any])",
      "desc": "Creates a Secure Element payment pass error object of the specified type with the specified user information."
    },
    {
      "name": "static var deviceNotReadyError: PKAddSecureElementPassError.Code",
      "desc": "The device isn’t ready to add Secure Element passes."
    },
    {
      "name": "static var deviceNotSupportedError: PKAddSecureElementPassError.Code",
      "desc": "The device doesn’t support adding Secure Element passes."
    },
    {
      "name": "static var invalidConfigurationError: PKAddSecureElementPassError.Code",
      "desc": "An error that occurs when they system attempts to add a Secure Element pass using an invalid configuration."
    },
    {
      "name": "static var unavailableError: PKAddSecureElementPassError.Code",
      "desc": "PassKit is temporarily unable to add Secure Element passes."
    },
    {
      "name": "static var unknownError: PKAddSecureElementPassError.Code",
      "desc": "An error that occurs when PassKit cancels the addition of a Secure Element pass due to an unknown failure."
    },
    {
      "name": "static var userCanceledError: PKAddSecureElementPassError.Code",
      "desc": "An error that occurs when the user cancels the addition of a Secure Element pass."
    },
    {
      "name": "enum PKAddSecureElementPassError.Code",
      "desc": "Error codes for problems that occur when you add a secure element passes."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The error domain that PassKit uses for errors that relate to adding Secure Element passes."
    },
    {
      "name": "var code: Code",
      "desc": "The code that provides context for the error."
    },
    {
      "name": "var errorCode: Int",
      "desc": "The code that provides context for the error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized description of the error."
    },
    {
      "name": "var userInfo: [String : Any]",
      "desc": "A dictionary that contains custom information that relates to the error."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "A dictionary that contains custom information that relates to the error."
    },
    {
      "name": "let PKAddSecureElementPassErrorDomain: String",
      "desc": "The error domain for errors that occur when adding a secure pass."
    },
    {
      "name": "static func == (PKAddSecureElementPassError, PKAddSecureElementPassError) -> Bool",
      "desc": "Returns a Boolean value that indicates whether the two add secure element pass errors are equal."
    },
    {
      "name": "static func != (PKAddSecureElementPassError, PKAddSecureElementPassError) -> Bool",
      "desc": "Returns a Boolean value that indicates whether the two errors are unequal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the Secure Element pass error object by feeding the item into the given hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value for the Secure Element pass error."
    }
  ],
  "declaration": "struct PKAddSecureElementPassError"
}