{
  "path": "/documentation/naturallanguage/nltokenizer",
  "type": "Class",
  "name": "NLTokenizer",
  "desc": "A tokenizer that segments natural language text into semantic units.",
  "items": [
    {
      "name": "init(unit: NLTokenUnit)",
      "desc": "Creates a tokenizer with the specified unit."
    },
    {
      "name": "var string: String?",
      "desc": "The text to be tokenized."
    },
    {
      "name": "func setLanguage(NLLanguage)",
      "desc": "Sets the language of the text to be tokenized."
    },
    {
      "name": "var unit: NLTokenUnit",
      "desc": "The linguistic unit that this tokenizer uses."
    },
    {
      "name": "struct NLTokenizer.Attributes",
      "desc": "Hints about the contents of the string for the tokenizer."
    },
    {
      "name": "func enumerateTokens(in: Range<String.Index>, using: (Range<String.Index>, NLTokenizer.Attributes) -> Bool)",
      "desc": "Enumerates over a given range of the string and calls the specified block for each token."
    },
    {
      "name": "func tokens(for: Range<String.Index>) -> [Range<String.Index>]",
      "desc": "Tokenizes the string within the provided range."
    },
    {
      "name": "func tokenRange(at: String.Index) -> Range<String.Index>",
      "desc": "Finds the range of the token at the given index."
    },
    {
      "name": "func tokenRange(for: Range<String.Index>) -> Range<String.Index>",
      "desc": "Finds the entire range of all tokens contained completely or partially within the specified range."
    }
  ],
  "declaration": "class NLTokenizer : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}