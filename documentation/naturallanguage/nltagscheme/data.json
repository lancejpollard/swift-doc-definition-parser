{
  "path": "/documentation/naturallanguage/nltagscheme",
  "type": "Structure",
  "name": "NLTagScheme",
  "desc": "Constants for the tag schemes specified when initializing a linguistic tagger.",
  "items": [
    {
      "name": "static let tokenType: NLTagScheme",
      "desc": "A scheme that classifies tokens according to their broad type: word, punctuation, or whitespace."
    },
    {
      "name": "static let lexicalClass: NLTagScheme",
      "desc": "A scheme that classifies tokens according to class: part of speech, type of punctuation, or whitespace."
    },
    {
      "name": "static let nameType: NLTagScheme",
      "desc": "A scheme that classifies tokens according to whether they are part of a named entity."
    },
    {
      "name": "static let nameTypeOrLexicalClass: NLTagScheme",
      "desc": "A scheme that classifies tokens corresponding to names according to nameType, and classifies all other tokens according to lexicalClass."
    },
    {
      "name": "static let lemma: NLTagScheme",
      "desc": "A scheme that supplies a stem form of a word token, if known."
    },
    {
      "name": "static let language: NLTagScheme",
      "desc": "A scheme that supplies the language for a token, if it can determine one."
    },
    {
      "name": "static let script: NLTagScheme",
      "desc": "A scheme that supplies the script for a token, if it can determine one."
    },
    {
      "name": "static let sentimentScore: NLTagScheme",
      "desc": "A scheme that scores text as positive, negative, or neutral based on its sentiment polarity."
    },
    {
      "name": "init(String)"
    },
    {
      "name": "init(rawValue: String)"
    }
  ],
  "declaration": "struct NLTagScheme, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}