{
  "path": "/documentation/naturallanguage/nlembedding",
  "type": "Class",
  "name": "NLEmbedding",
  "desc": "A map of strings to vectors, which locates neighboring, similar strings.",
  "items": [
    {
      "name": "class func wordEmbedding(for: NLLanguage) -> NLEmbedding?",
      "desc": "Retrieves a word embedding for a given language."
    },
    {
      "name": "class func wordEmbedding(for: NLLanguage, revision: Int) -> NLEmbedding?",
      "desc": "Retrieves a word embedding for a given language and revision."
    },
    {
      "name": "init(contentsOf: URL)",
      "desc": "Creates a word embedding from a model file."
    },
    {
      "name": "class func sentenceEmbedding(for: NLLanguage) -> NLEmbedding?",
      "desc": "Retrieves a sentence embedding for a given language."
    },
    {
      "name": "class func sentenceEmbedding(for: NLLanguage, revision: Int) -> NLEmbedding?",
      "desc": "Retrieves a sentence embedding for a given language and revision."
    },
    {
      "name": "func neighbors(for: String, maximumCount: Int, distanceType: NLDistanceType) -> [(String, NLDistance)]",
      "desc": "Retrieves a limited number of strings near a string in the vocabulary."
    },
    {
      "name": "func neighbors(for: [Double], maximumCount: Int, distanceType: NLDistanceType) -> [(String, NLDistance)]",
      "desc": "Retrieves a limited number of strings near a location in the vocabulary space."
    },
    {
      "name": "func enumerateNeighbors(for: String, maximumCount: Int, distanceType: NLDistanceType, using: (String, NLDistance) -> Bool)",
      "desc": "Passes the nearest strings of a string in the vocabulary to a closure."
    },
    {
      "name": "func enumerateNeighbors(for: [Double], maximumCount: Int, distanceType: NLDistanceType, using: (String, NLDistance) -> Bool)",
      "desc": "Passes the nearest strings of a location in the vocabulary space to a closure."
    },
    {
      "name": "func distance(between: String, and: String, distanceType: NLDistanceType) -> NLDistance",
      "desc": "Calculates the distance between two strings in the vocabulary space."
    },
    {
      "name": "typealias NLDistance",
      "desc": "The distance between two strings in a text embedding."
    },
    {
      "name": "var dimension: Int",
      "desc": "The number of dimensions in the vocabularyâ€™s vector space."
    },
    {
      "name": "var vocabularySize: Int",
      "desc": "The number of words in the vocabulary."
    },
    {
      "name": "var language: NLLanguage?",
      "desc": "The language of the text in the word embedding."
    },
    {
      "name": "func contains(String) -> Bool",
      "desc": "Requests a Boolean value that indicates whether the term is in the vocabulary."
    },
    {
      "name": "func vector(for: String) -> [Double]?",
      "desc": "Requests the vector for the given term."
    },
    {
      "name": "var revision: Int",
      "desc": "The revision of the word embedding."
    },
    {
      "name": "class func write([String : [Double]], language: NLLanguage?, revision: Int, to: URL)",
      "desc": "Exports the word embedding contained within a Core ML model file at the given URL."
    },
    {
      "name": "class func currentRevision(for: NLLanguage) -> Int",
      "desc": "Retrieves the current version of a word embedding for the given language."
    },
    {
      "name": "class func supportedRevisions(for: NLLanguage) -> IndexSet",
      "desc": "Retrieves all version numbers of a word embedding for the given language."
    },
    {
      "name": "class func currentSentenceEmbeddingRevision(for: NLLanguage) -> Int",
      "desc": "Retrieves the current version of a sentence embedding for the given language."
    },
    {
      "name": "class func supportedSentenceEmbeddingRevisions(for: NLLanguage) -> IndexSet",
      "desc": "Retrieves all version numbers of a sentence embedding for the given language."
    }
  ],
  "declaration": "class NLEmbedding : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}