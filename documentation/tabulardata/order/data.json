{
  "path": "/documentation/tabulardata/order",
  "type": "Enumeration",
  "name": "Order",
  "desc": "A type that represents a sort ordering.",
  "items": [
    {
      "name": "static func == (Order, Order) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    },
    {
      "name": "case ascending",
      "desc": "A sort ordering that starts with the lowest value and monotonically proceeds to higher values."
    },
    {
      "name": "case descending",
      "desc": "A sort ordering that starts with the highest value and monotonically proceeds to lower values."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "func areOrdered<T>(T, T) -> Bool",
      "desc": "Returns a Boolean that indicates whether the comparable types match the orderâ€™s state."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    }
  ],
  "declaration": "enum Order",
  "conformsTo": [
    "Equatable",
    "Hashable"
  ]
}