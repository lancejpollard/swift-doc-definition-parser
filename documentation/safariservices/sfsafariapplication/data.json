{
  "path": "/documentation/safariservices/sfsafariapplication",
  "type": "Class",
  "name": "SFSafariApplication",
  "desc": "A proxy for the Safari app.",
  "items": [
    {
      "name": "class func dispatchMessage(withName: String, toExtensionWithIdentifier: String, userInfo: [String : Any]?, completionHandler: ((Error?) -> Void)?)",
      "desc": "Sends a message to a Safari app extension, launching Safari if necessary."
    },
    {
      "name": "class func getActiveWindow(completionHandler: (SFSafariWindow?) -> Void)",
      "desc": "Calls the completion handler with the active browser window."
    },
    {
      "name": "class func openWindow(with: URL, completionHandler: ((SFSafariWindow?) -> Void)?)",
      "desc": "Opens a new window with the desired webpage."
    },
    {
      "name": "class func showPreferencesForExtension(withIdentifier: String, completionHandler: ((Error?) -> Void)?)",
      "desc": "Launches Safari and opens the preferences panel for a Safari app extension."
    },
    {
      "name": "class func setToolbarItemsNeedUpdate()",
      "desc": "Updates the enabled states and badges of toolbar items."
    },
    {
      "name": "class func getAllWindows(completionHandler: ([SFSafariWindow]) -> Void)"
    },
    {
      "name": "class func getHostApplication(completionHandler: (NSRunningApplication) -> Void)"
    }
  ],
  "declaration": "class SFSafariApplication : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}