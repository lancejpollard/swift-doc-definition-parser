{
  "path": "/documentation/foundation/xmldtdnode/dtdkind",
  "type": "Enumeration",
  "name": "XMLDTDNode.DTDKind",
  "desc": "The type defined for the constants that specify the kind and subkind of DTD declaration represented by an NSXMLDTDNode object. You set the DTD-node kind using the setDTDKind: method.",
  "items": [
    {
      "name": "case cdataAttribute",
      "desc": "Identifies an attribute-list declaration with a CDATA (character data) value type."
    },
    {
      "name": "case entitiesAttribute",
      "desc": "Identifies an attribute-list declaration with an ENTITIES value type (refers to multiple unparsed entities declared elsewhere in document)."
    },
    {
      "name": "case entityAttribute",
      "desc": "Identifies an attribute-list declaration with an ENTITY value type (refers to unparsed entity declared in document)."
    },
    {
      "name": "case enumerationAttribute",
      "desc": "Identifies an attribute-list declaration with an enumeration value type (list of all possible values)."
    },
    {
      "name": "case idAttribute",
      "desc": "Identifies an attribute-list declaration with an ID value type (per-document unique element name)."
    },
    {
      "name": "case idRefAttribute",
      "desc": "Identifies an attribute-list declaration with an IDREF value type (refers to element ID type)."
    },
    {
      "name": "case idRefsAttribute",
      "desc": "Identifies an attribute-list declaration with an IDREFS value type (refers to multiple elements of ID type)."
    },
    {
      "name": "case nmTokenAttribute",
      "desc": "Identifies an attribute-list declaration with a NMTOKEN value type (name token)."
    },
    {
      "name": "case nmTokensAttribute",
      "desc": "Identifies an attribute-list declaration with a NMTOKENS value type (multiple name tokens)"
    },
    {
      "name": "case notationAttribute",
      "desc": "Identifies an attribute-list declaration with a NOTATION value type (name of declared notation)."
    },
    {
      "name": "case anyDeclaration",
      "desc": "Identifies an ANY element declaration."
    },
    {
      "name": "case elementDeclaration",
      "desc": "Identifies a declaration of an element with child elements."
    },
    {
      "name": "case emptyDeclaration",
      "desc": "Identifies a declaration (EMPTY) of an empty element."
    },
    {
      "name": "case mixedDeclaration",
      "desc": "Identifies a declaration of an element with mixed content ((#PCDATA | child))."
    },
    {
      "name": "case undefinedDeclaration",
      "desc": "Identifies an undefined element declaration."
    },
    {
      "name": "case general",
      "desc": "Identifies a general entity declaration."
    },
    {
      "name": "case parameter",
      "desc": "Identifies a parameter entity declaration."
    },
    {
      "name": "case parsed",
      "desc": "Identifies a parsed entity declaration."
    },
    {
      "name": "case predefined",
      "desc": "Identifies a predefined entity declaration."
    },
    {
      "name": "case unparsed",
      "desc": "Identifies an unparsed entity declaration."
    }
  ],
  "declaration": "enum DTDKind : UInt, @unchecked Sendable",
  "conformsTo": [
    "Sendable"
  ]
}