{
  "path": "/documentation/foundation/nspointerarray",
  "type": "Class",
  "name": "NSPointerArray",
  "desc": "A collection similar to an array, but with a broader range of available memory semantics.",
  "items": [
    {
      "name": "init(options: NSPointerFunctions.Options)",
      "desc": "Initializes the receiver to use the given options."
    },
    {
      "name": "init(pointerFunctions: NSPointerFunctions)",
      "desc": "Initializes the receiver to use the given functions."
    },
    {
      "name": "class func strongObjects() -> NSPointerArray",
      "desc": "Returns a new pointer array that maintains strong references to its elements."
    },
    {
      "name": "class func weakObjects() -> NSPointerArray",
      "desc": "Returns a new pointer array that maintains weak references to its elements."
    },
    {
      "name": "var count: Int",
      "desc": "The number of elements in the receiver."
    },
    {
      "name": "var allObjects: [Any]",
      "desc": "All the objects in the receiver."
    },
    {
      "name": "func pointer(at: Int) -> UnsafeMutableRawPointer?",
      "desc": "Returns the pointer at a given index."
    },
    {
      "name": "func addPointer(UnsafeMutableRawPointer?)",
      "desc": "Adds a given pointer to the receiver."
    },
    {
      "name": "func removePointer(at: Int)",
      "desc": "Removes the pointer at a given index."
    },
    {
      "name": "func insertPointer(UnsafeMutableRawPointer?, at: Int)",
      "desc": "Inserts a pointer at a given index."
    },
    {
      "name": "func replacePointer(at: Int, withPointer: UnsafeMutableRawPointer?)",
      "desc": "Replaces the pointer at a given index."
    },
    {
      "name": "func compact()",
      "desc": "Removes NULL values from the receiver."
    },
    {
      "name": "var pointerFunctions: NSPointerFunctions",
      "desc": "The functions in use by the receiver."
    },
    {
      "name": "class NSPointerFunctions",
      "desc": "An instance of NSPointerFunctions defines callout functions appropriate for managing a pointer reference held somewhere else."
    }
  ],
  "declaration": "class NSPointerArray : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSFastEnumeration",
    "NSSecureCoding"
  ]
}