{
  "path": "/documentation/foundation/attributescopes/foundationattributes/numberformatattributes/symbolattribute/symbol",
  "type": "Enumeration",
  "name": "AttributeScopes.FoundationAttributes.NumberFormatAttributes.SymbolAttribute.Symbol",
  "desc": "No overview available.",
  "items": [
    {
      "name": "typealias AttributeScopes.FoundationAttributes.NumberFormatAttributes.SymbolAttribute.Symbol.RawValue"
    },
    {
      "name": "case currency"
    },
    {
      "name": "case decimalSeparator"
    },
    {
      "name": "case groupingSeparator"
    },
    {
      "name": "case percent"
    },
    {
      "name": "case sign"
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new instance by decoding from the given decoder, when the type’s RawValue is Int."
    },
    {
      "name": "init?(rawValue: Int)"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var rawValue: Int"
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes this value into the given encoder, when the type’s RawValue is Int."
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func != (AttributeScopes.FoundationAttributes.NumberFormatAttributes.SymbolAttribute.Symbol, AttributeScopes.FoundationAttributes.NumberFormatAttributes.SymbolAttribute.Symbol) -> Bool"
    }
  ],
  "declaration": "enum AttributeScopes.FoundationAttributes.NumberFormatAttributes.SymbolAttribute.Symbol : Int, Codable",
  "conformsTo": [
    "Decodable",
    "Encodable"
  ]
}