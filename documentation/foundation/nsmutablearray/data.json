{
  "path": "/documentation/foundation/nsmutablearray",
  "type": "Class",
  "name": "NSMutableArray",
  "desc": "An object representing a dynamic ordered collection, for use instead of an Array variable in cases that require reference semantics.",
  "items": [
    {
      "name": "init()",
      "desc": "Initializes a newly allocated array."
    },
    {
      "name": "init(capacity: Int)",
      "desc": "Returns an array, initialized with enough memory to initially hold a given number of objects."
    },
    {
      "name": "func add(Any)",
      "desc": "Inserts a given object at the end of the array."
    },
    {
      "name": "func addObjects(from: [Any])",
      "desc": "Adds the objects contained in another given array to the end of the receiving array’s content."
    },
    {
      "name": "func insert(Any, at: Int)",
      "desc": "Inserts a given object into the array’s contents at a given index."
    },
    {
      "name": "func insert([Any], at: IndexSet)",
      "desc": "Inserts the objects in the provided array into the receiving array at the specified indexes."
    },
    {
      "name": "func removeAllObjects()",
      "desc": "Empties the array of all its elements."
    },
    {
      "name": "func removeLastObject()",
      "desc": "Removes the object with the highest-valued index in the array"
    },
    {
      "name": "func remove(Any)",
      "desc": "Removes all occurrences in the array of a given object."
    },
    {
      "name": "func remove(Any, in: NSRange)",
      "desc": "Removes all occurrences within a specified range in the array of a given object."
    },
    {
      "name": "func removeObject(at: Int)",
      "desc": "Removes the object at index ."
    },
    {
      "name": "func removeObjects(at: IndexSet)",
      "desc": "Removes the objects at the specified indexes from the array."
    },
    {
      "name": "func removeObject(identicalTo: Any)",
      "desc": "Removes all occurrences of a given object in the array."
    },
    {
      "name": "func removeObject(identicalTo: Any, in: NSRange)",
      "desc": "Removes all occurrences of anObject within the specified range in the array."
    },
    {
      "name": "func removeObjects(in: [Any])",
      "desc": "Removes from the receiving array the objects in another given array."
    },
    {
      "name": "func removeObjects(in: NSRange)",
      "desc": "Removes from the array each of the objects within a given range."
    },
    {
      "name": "func replaceObject(at: Int, with: Any)",
      "desc": "Replaces the object at index with anObject."
    },
    {
      "name": "func replaceObjects(at: IndexSet, with: [Any])",
      "desc": "Replaces the objects in the receiving array at locations specified with the objects from a given array."
    },
    {
      "name": "func replaceObjects(in: NSRange, withObjectsFrom: [Any], range: NSRange)",
      "desc": "Replaces the objects in the receiving array specified by one given range with the objects in another array specified by another range."
    },
    {
      "name": "func replaceObjects(in: NSRange, withObjectsFrom: [Any])",
      "desc": "Replaces the objects in the receiving array specified by a given range with all of the objects from a given array."
    },
    {
      "name": "func setArray([Any])",
      "desc": "Sets the receiving array’s elements to those in another given array."
    },
    {
      "name": "func filter(using: NSPredicate)",
      "desc": "Evaluates a given predicate against the array’s content and leaves only objects that match."
    },
    {
      "name": "func exchangeObject(at: Int, withObjectAt: Int)",
      "desc": "Exchanges the objects in the array at given indexes."
    },
    {
      "name": "func sort(using: [NSSortDescriptor])",
      "desc": "Sorts the receiver using a given array of sort descriptors."
    },
    {
      "name": "func sort(comparator: (Any, Any) -> ComparisonResult)",
      "desc": "Sorts the receiver in ascending order using the comparison method specified by a given Comparator block."
    },
    {
      "name": "func sort(options: NSSortOptions, usingComparator: (Any, Any) -> ComparisonResult)",
      "desc": "Sorts the receiver in ascending order using the specified options and the comparison method specified by a given Comparator block."
    },
    {
      "name": "func sort((Any, Any, UnsafeMutableRawPointer?) -> Int, context: UnsafeMutableRawPointer?)",
      "desc": "Sorts the receiver in ascending order as defined by the comparison function compare."
    },
    {
      "name": "func sort(using: Selector)",
      "desc": "Sorts the receiver in ascending order, as determined by the comparison method specified by a given selector."
    },
    {
      "name": "init?(coder: NSCoder)"
    }
  ],
  "declaration": "class NSMutableArray : NSArray",
  "inheritsFrom": [
    "NSArray"
  ]
}