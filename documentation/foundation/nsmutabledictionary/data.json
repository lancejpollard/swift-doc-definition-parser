{
  "path": "/documentation/foundation/nsmutabledictionary",
  "type": "Class",
  "name": "NSMutableDictionary",
  "desc": "An object representing a dynamic collection of key-value pairs, for use instead of a Dictionary variable in cases that require reference semantics.",
  "items": [
    {
      "name": "init(capacity: Int)",
      "desc": "Initializes a newly allocated mutable dictionary, allocating enough memory to hold numItems entries."
    },
    {
      "name": "init()",
      "desc": "Initializes a newly allocated mutable dictionary."
    },
    {
      "name": "init(sharedKeySet: Any)",
      "desc": "Creates a mutable dictionary which is optimized for dealing with a known set of keys."
    },
    {
      "name": "func setObject(Any, forKey: NSCopying)",
      "desc": "Adds a given key-value pair to the dictionary."
    },
    {
      "name": "func setValue(Any?, forKey: String)",
      "desc": "Adds a given key-value pair to the dictionary."
    },
    {
      "name": "func addEntries(from: [AnyHashable : Any])",
      "desc": "Adds to the receiving dictionary the entries from another dictionary."
    },
    {
      "name": "func setDictionary([AnyHashable : Any])",
      "desc": "Sets the contents of the receiving dictionary to entries in a given dictionary."
    },
    {
      "name": "func removeObject(forKey: Any)",
      "desc": "Removes a given key and its associated value from the dictionary."
    },
    {
      "name": "func removeAllObjects()",
      "desc": "Empties the dictionary of its entries."
    },
    {
      "name": "func removeObjects(forKeys: [Any])",
      "desc": "Removes from the dictionary entries specified by elements in a given array."
    },
    {
      "name": "init!(obexHeadersData: Data!)"
    },
    {
      "name": "init!(obexHeadersData: UnsafeRawPointer!, headersDataSize: Int)"
    },
    {
      "name": "init?(coder: NSCoder)"
    },
    {
      "name": "func addApplicationParameterHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addAuthorizationChallengeHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addAuthorizationResponseHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addBodyHeader(UnsafeRawPointer!, length: UInt32, endOfBody: Bool) -> OBEXError"
    },
    {
      "name": "func addByteSequenceHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addConnectionIDHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addCountHeader(UInt32) -> OBEXError"
    },
    {
      "name": "func addDescriptionHeader(String!) -> OBEXError"
    },
    {
      "name": "func addHTTPHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addImageDescriptorHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addImageHandleHeader(String!) -> OBEXError"
    },
    {
      "name": "func addLengthHeader(UInt32) -> OBEXError"
    },
    {
      "name": "func addNameHeader(String!) -> OBEXError"
    },
    {
      "name": "func addObjectClassHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addTargetHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addTime4ByteHeader(UInt32) -> OBEXError"
    },
    {
      "name": "func addTimeISOHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addTypeHeader(String!) -> OBEXError"
    },
    {
      "name": "func addUserDefinedHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func addWhoHeader(UnsafeRawPointer!, length: UInt32) -> OBEXError"
    },
    {
      "name": "func getHeaderBytes() -> NSMutableData!"
    },
    {
      "name": "subscript(Any) -> Any?"
    }
  ],
  "declaration": "class NSMutableDictionary : NSDictionary",
  "inheritsFrom": [
    "NSDictionary"
  ]
}