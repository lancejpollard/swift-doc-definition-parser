{
  "path": "/documentation/foundation/nsexpression/expressiontype",
  "type": "Enumeration",
  "name": "NSExpression.ExpressionType",
  "desc": "Defines the possible types of an expression.",
  "items": [
    {
      "name": "case constantValue",
      "desc": "An expression that always returns the same value."
    },
    {
      "name": "case evaluatedObject",
      "desc": "An expression that always returns the parameter object itself."
    },
    {
      "name": "case variable",
      "desc": "An expression that always returns whatever value is associated with the key specified by ‘variable’ in the bindings dictionary."
    },
    {
      "name": "case keyPath",
      "desc": "An expression that returns something that can be used as a key path."
    },
    {
      "name": "case function",
      "desc": "An expression that returns the result of evaluating a function."
    },
    {
      "name": "case unionSet",
      "desc": "An expression that creates a union of the results of two nested expressions."
    },
    {
      "name": "case intersectSet",
      "desc": "An expression that creates an intersection of the results of two nested expressions."
    },
    {
      "name": "case minusSet",
      "desc": "An expression that combines two nested expression results by set subtraction."
    },
    {
      "name": "case subquery",
      "desc": "An expression that filters a collection using a subpredicate."
    },
    {
      "name": "case aggregate",
      "desc": "An expression that defines an aggregate of NSExpression objects."
    },
    {
      "name": "case anyKey",
      "desc": "An expression that represents any key."
    },
    {
      "name": "case block",
      "desc": "An expression that uses a Block."
    },
    {
      "name": "case conditional"
    }
  ],
  "declaration": "enum ExpressionType : UInt, @unchecked Sendable",
  "conformsTo": [
    "Sendable"
  ]
}