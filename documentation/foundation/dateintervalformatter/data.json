{
  "path": "/documentation/foundation/dateintervalformatter",
  "type": "Class",
  "name": "DateIntervalFormatter",
  "desc": "A formatter that creates string representations of time intervals.",
  "items": [
    {
      "name": "func string(from: Date, to: Date) -> String",
      "desc": "Returns a formatted string based on the specified start and end dates."
    },
    {
      "name": "var dateStyle: DateIntervalFormatter.Style",
      "desc": "The style to use when formatting day, month, and year information."
    },
    {
      "name": "var timeStyle: DateIntervalFormatter.Style",
      "desc": "The style to use when formatting hour, minute, and second information."
    },
    {
      "name": "var dateTemplate: String!",
      "desc": "The template for formatting one date and time value."
    },
    {
      "name": "var calendar: Calendar!",
      "desc": "The calendar to use for date values."
    },
    {
      "name": "var locale: Locale!",
      "desc": "The locale to use when formatting date and time values."
    },
    {
      "name": "var timeZone: TimeZone!",
      "desc": "The time zone with which to specify time values."
    },
    {
      "name": "enum DateIntervalFormatter.Style",
      "desc": "Formatting styles for individual date and time values."
    },
    {
      "name": "func string(from: DateInterval) -> String?"
    }
  ],
  "declaration": "class DateIntervalFormatter : Formatter",
  "inheritsFrom": [
    "Formatter"
  ]
}