{
  "path": "/documentation/foundation/notificationcenter",
  "type": "Class",
  "name": "NotificationCenter",
  "desc": "A notification dispatch mechanism that enables the broadcast of information to registered observers.",
  "items": [
    {
      "name": "class var `default`: NotificationCenter",
      "desc": "The appâ€™s default notification center."
    },
    {
      "name": "func addObserver(forName: NSNotification.Name?, object: Any?, queue: OperationQueue?, using: (Notification) -> Void) -> NSObjectProtocol",
      "desc": "Adds an entry to the notification center to receive notifications that passed to the provided block."
    },
    {
      "name": "func addObserver(Any, selector: Selector, name: NSNotification.Name?, object: Any?)",
      "desc": "Adds an entry to the notification center to call the provided selector with the notification."
    },
    {
      "name": "func removeObserver(Any, name: NSNotification.Name?, object: Any?)",
      "desc": "Removes matching entries from the notification center's dispatch table."
    },
    {
      "name": "func removeObserver(Any)",
      "desc": "Removes all entries specifying an observer from the notification center's dispatch table."
    },
    {
      "name": "func post(Notification)",
      "desc": "Posts a given notification to the notification center."
    },
    {
      "name": "func post(name: NSNotification.Name, object: Any?, userInfo: [AnyHashable : Any]?)",
      "desc": "Creates a notification with a given name, sender, and information and posts it to the notification center."
    },
    {
      "name": "func post(name: NSNotification.Name, object: Any?)",
      "desc": "Creates a notification with a given name and sender and posts it to the notification center."
    },
    {
      "name": "func notifications(named: Notification.Name, object: AnyObject?) -> NotificationCenter.Notifications",
      "desc": "Returns an asynchronous sequence of notifications produced by this center for a given notification name and optional source object."
    },
    {
      "name": "class NotificationCenter.Notifications",
      "desc": "An asynchronous sequence of notifications generated by a notification center."
    },
    {
      "name": "func publisher(for: Notification.Name, object: AnyObject?) -> NotificationCenter.Publisher",
      "desc": "Returns a publisher that emits events when broadcasting notifications."
    },
    {
      "name": "struct NotificationCenter.Publisher",
      "desc": "A publisher that emits elements when broadcasting notifications."
    }
  ],
  "declaration": "class NotificationCenter : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}