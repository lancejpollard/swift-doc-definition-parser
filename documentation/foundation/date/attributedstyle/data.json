{
  "path": "/documentation/foundation/date/attributedstyle",
  "type": "Structure",
  "name": "Date.AttributedStyle",
  "desc": "A structure that creates a locale-appropriate attributed string representation of a date instance.",
  "items": [
    {
      "name": "func locale(Locale) -> Date.AttributedStyle",
      "desc": "Modifies the date attributed style to use the specified locale."
    },
    {
      "name": "func format(Date) -> AttributedString",
      "desc": "Creates a locale-aware attributed string representation from a date value."
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new instance by decoding from the given decoder."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes this value into the given encoder."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value of the style format."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "typealias Date.AttributedStyle.FormatInput",
      "desc": "The type of data to format."
    },
    {
      "name": "typealias Date.AttributedStyle.FormatOutput",
      "desc": "The type of the formatted data."
    },
    {
      "name": "static func != (Date.AttributedStyle, Date.AttributedStyle) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are not equal."
    },
    {
      "name": "static func == (Date.AttributedStyle, Date.AttributedStyle) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are equal."
    }
  ],
  "declaration": "struct AttributedStyle",
  "conformsTo": [
    "FormatStyle"
  ]
}