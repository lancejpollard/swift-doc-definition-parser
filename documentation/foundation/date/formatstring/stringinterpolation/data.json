{
  "path": "/documentation/foundation/date/formatstring/stringinterpolation",
  "type": "Structure",
  "name": "Date.FormatString.StringInterpolation",
  "desc": "No overview available.",
  "items": [
    {
      "name": "typealias Date.FormatString.StringInterpolation.StringLiteralType"
    },
    {
      "name": "init(literalCapacity: Int, interpolationCount: Int)"
    },
    {
      "name": "func appendInterpolation(cyclicYear: Date.FormatStyle.Symbol.CyclicYear)"
    },
    {
      "name": "func appendInterpolation(day: Date.FormatStyle.Symbol.Day)"
    },
    {
      "name": "func appendInterpolation(dayOfYear: Date.FormatStyle.Symbol.DayOfYear)"
    },
    {
      "name": "func appendInterpolation(dayPeriod: Date.FormatStyle.Symbol.DayPeriod)"
    },
    {
      "name": "func appendInterpolation(era: Date.FormatStyle.Symbol.Era)"
    },
    {
      "name": "func appendInterpolation(hour: Date.FormatStyle.Symbol.VerbatimHour)"
    },
    {
      "name": "func appendInterpolation(minute: Date.FormatStyle.Symbol.Minute)"
    },
    {
      "name": "func appendInterpolation(month: Date.FormatStyle.Symbol.Month)"
    },
    {
      "name": "func appendInterpolation(quarter: Date.FormatStyle.Symbol.Quarter)"
    },
    {
      "name": "func appendInterpolation(second: Date.FormatStyle.Symbol.Second)"
    },
    {
      "name": "func appendInterpolation(secondFraction: Date.FormatStyle.Symbol.SecondFraction)"
    },
    {
      "name": "func appendInterpolation(standaloneMonth: Date.FormatStyle.Symbol.StandaloneMonth)"
    },
    {
      "name": "func appendInterpolation(standaloneQuarter: Date.FormatStyle.Symbol.StandaloneQuarter)"
    },
    {
      "name": "func appendInterpolation(standaloneWeekday: Date.FormatStyle.Symbol.StandaloneWeekday)"
    },
    {
      "name": "func appendInterpolation(timeZone: Date.FormatStyle.Symbol.TimeZone)"
    },
    {
      "name": "func appendInterpolation(week: Date.FormatStyle.Symbol.Week)"
    },
    {
      "name": "func appendInterpolation(weekday: Date.FormatStyle.Symbol.Weekday)"
    },
    {
      "name": "func appendInterpolation(year: Date.FormatStyle.Symbol.Year)"
    },
    {
      "name": "func appendInterpolation(yearForWeekOfYear: Date.FormatStyle.Symbol.YearForWeekOfYear)"
    },
    {
      "name": "func appendLiteral(String)"
    }
  ],
  "declaration": "struct StringInterpolation",
  "conformsTo": [
    "StringInterpolationProtocol"
  ]
}