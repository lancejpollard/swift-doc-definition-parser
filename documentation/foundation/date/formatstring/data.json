{
  "path": "/documentation/foundation/date/formatstring",
  "type": "Structure",
  "name": "Date.FormatString",
  "desc": "No overview available.",
  "items": [
    {
      "name": "typealias Date.FormatString.ExtendedGraphemeClusterLiteralType"
    },
    {
      "name": "typealias Date.FormatString.StringLiteralType"
    },
    {
      "name": "typealias Date.FormatString.UnicodeScalarLiteralType"
    },
    {
      "name": "init(extendedGraphemeClusterLiteral: String)",
      "desc": "Creates an instance initialized to the given value."
    },
    {
      "name": "init(stringInterpolation: Date.FormatString.StringInterpolation)"
    },
    {
      "name": "init(stringLiteral: String)"
    },
    {
      "name": "init(unicodeScalarLiteral: String)",
      "desc": "Creates an instance initialized to the given value."
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func != (Date.FormatString, Date.FormatString) -> Bool"
    },
    {
      "name": "static func == (Date.FormatString, Date.FormatString) -> Bool"
    },
    {
      "name": "struct Date.FormatString.StringInterpolation"
    }
  ],
  "declaration": "struct FormatString",
  "conformsTo": [
    "ExpressibleByStringInterpolation",
    "Hashable"
  ]
}