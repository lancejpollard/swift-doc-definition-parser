{
  "path": "/documentation/foundation/date/relativeformatstyle/unitsstyle",
  "type": "Structure",
  "name": "Date.RelativeFormatStyle.UnitsStyle",
  "desc": "A type that represents the style to use when formatting the units of relative dates.",
  "items": [
    {
      "name": "static var abbreviated: Date.RelativeFormatStyle.UnitsStyle",
      "desc": "A style that uses abbreviated units, such as “2 mo. ago”."
    },
    {
      "name": "static var narrow: Date.RelativeFormatStyle.UnitsStyle",
      "desc": "A style that uses the shortest units, such as “2 mo. ago”."
    },
    {
      "name": "static var spellOut: Date.RelativeFormatStyle.UnitsStyle",
      "desc": "A style that spells out units, such as “two months ago”."
    },
    {
      "name": "static var wide: Date.RelativeFormatStyle.UnitsStyle",
      "desc": "A style that uses full representation of units, such as “2 months ago”."
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new instance by decoding from the given decoder."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes this value into the given encoder."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value of the style format."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "static func != (Date.RelativeFormatStyle.UnitsStyle, Date.RelativeFormatStyle.UnitsStyle) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are not equal."
    },
    {
      "name": "static func == (Date.RelativeFormatStyle.UnitsStyle, Date.RelativeFormatStyle.UnitsStyle) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are equal."
    }
  ],
  "declaration": "struct Date.RelativeFormatStyle.UnitsStyle",
  "conformsTo": [
    "Decodable",
    "Encodable",
    "Hashable"
  ]
}