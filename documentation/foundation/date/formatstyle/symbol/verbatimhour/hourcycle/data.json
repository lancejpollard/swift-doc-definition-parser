{
  "path": "/documentation/foundation/date/formatstyle/symbol/verbatimhour/hourcycle",
  "type": "Structure",
  "name": "Date.FormatStyle.Symbol.VerbatimHour.HourCycle",
  "desc": "A type that specifies the start of a clock representation for the format of a hour.",
  "items": [
    {
      "name": "static let oneBased: Date.FormatStyle.Symbol.VerbatimHour.HourCycle",
      "desc": "A hour cycle that indicates a clock that starts at one."
    },
    {
      "name": "static let zeroBased: Date.FormatStyle.Symbol.VerbatimHour.HourCycle",
      "desc": "A hour cycle that indicates a clock that starts at zero."
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new instance by decoding from the given decoder."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes the value into the given encoder."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the value by feeding them into the given hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value of the style format."
    },
    {
      "name": "static func != (Date.FormatStyle.Symbol.VerbatimHour.HourCycle, Date.FormatStyle.Symbol.VerbatimHour.HourCycle) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are not equal."
    },
    {
      "name": "static func == (Date.FormatStyle.Symbol.VerbatimHour.HourCycle, Date.FormatStyle.Symbol.VerbatimHour.HourCycle) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are equal."
    }
  ],
  "declaration": "struct HourCycle",
  "conformsTo": [
    "Decodable",
    "Encodable",
    "Hashable"
  ]
}