{
  "path": "/documentation/foundation/date/formatstyle/symbol/verbatimhour",
  "type": "Structure",
  "name": "Date.FormatStyle.Symbol.VerbatimHour",
  "desc": "A type that specifies a format for the hour in a date format style.",
  "items": [
    {
      "name": "static func defaultDigits(clock: Date.FormatStyle.Symbol.VerbatimHour.Clock, hourCycle: Date.FormatStyle.Symbol.VerbatimHour.HourCycle) -> Date.FormatStyle.Symbol.VerbatimHour",
      "desc": "Creates a custom format style portraying the minimum number of digits that represents the hour."
    },
    {
      "name": "static func twoDigits(clock: Date.FormatStyle.Symbol.VerbatimHour.Clock, hourCycle: Date.FormatStyle.Symbol.VerbatimHour.HourCycle) -> Date.FormatStyle.Symbol.VerbatimHour",
      "desc": "Creates a custom format style portraying two digits that represent the hour."
    },
    {
      "name": "struct Date.FormatStyle.Symbol.VerbatimHour.Clock",
      "desc": "A type that specifies a clock representation for the format of an hour."
    },
    {
      "name": "struct Date.FormatStyle.Symbol.VerbatimHour.HourCycle",
      "desc": "A type that specifies the start of a clock representation for the format of a hour."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value of the style format."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "static func != (Date.FormatStyle.Symbol.VerbatimHour, Date.FormatStyle.Symbol.VerbatimHour) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are not equal."
    },
    {
      "name": "static func == (Date.FormatStyle.Symbol.VerbatimHour, Date.FormatStyle.Symbol.VerbatimHour) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are equal."
    }
  ],
  "declaration": "struct Date.FormatStyle.Symbol.VerbatimHour",
  "conformsTo": [
    "Hashable"
  ]
}