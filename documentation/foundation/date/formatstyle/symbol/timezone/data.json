{
  "path": "/documentation/foundation/date/formatstyle/symbol/timezone",
  "type": "Structure",
  "name": "Date.FormatStyle.Symbol.TimeZone",
  "desc": "A type that specifies a format for the time zone in a date format style.",
  "items": [
    {
      "name": "static func specificName(Date.FormatStyle.Symbol.TimeZone.Width) -> Date.FormatStyle.Symbol.TimeZone",
      "desc": "Returns the specific, non-location representation of a timezone."
    },
    {
      "name": "static func genericName(Date.FormatStyle.Symbol.TimeZone.Width) -> Date.FormatStyle.Symbol.TimeZone",
      "desc": "Returns the generic, non-location representation of a timezone."
    },
    {
      "name": "static func iso8601(Date.FormatStyle.Symbol.TimeZone.Width) -> Date.FormatStyle.Symbol.TimeZone",
      "desc": "Creates the ISO 8601 representation of the timezone with hours, minutes, and optional seconds."
    },
    {
      "name": "static func localizedGMT(Date.FormatStyle.Symbol.TimeZone.Width) -> Date.FormatStyle.Symbol.TimeZone",
      "desc": "Returns the localized GMT format representation of a timezone."
    },
    {
      "name": "static func identifier(Date.FormatStyle.Symbol.TimeZone.Width) -> Date.FormatStyle.Symbol.TimeZone",
      "desc": "Returns the timezone identifier."
    },
    {
      "name": "static var exemplarLocation: Date.FormatStyle.Symbol.TimeZone",
      "desc": "The exemplar city for a timezone."
    },
    {
      "name": "static var genericLocation: Date.FormatStyle.Symbol.TimeZone",
      "desc": "The generic location representation of a timezone."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value of the style format."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "static func != (Date.FormatStyle.Symbol.TimeZone, Date.FormatStyle.Symbol.TimeZone) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are not equal."
    },
    {
      "name": "static func == (Date.FormatStyle.Symbol.TimeZone, Date.FormatStyle.Symbol.TimeZone) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are equal."
    },
    {
      "name": "enum Date.FormatStyle.Symbol.TimeZone.Width",
      "desc": "A type representing the width of a timezone in a format style."
    }
  ],
  "declaration": "struct Date.FormatStyle.Symbol.TimeZone",
  "conformsTo": [
    "Hashable"
  ]
}