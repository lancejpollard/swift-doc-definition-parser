{
  "path": "/documentation/foundation/measurement/formatstyle/unitwidth",
  "type": "Structure",
  "name": "Measurement.FormatStyle.UnitWidth",
  "desc": "Specifies the width of the unit, determining the textual representation.",
  "items": [
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new instance by decoding from the specified decoder."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value of the style format."
    },
    {
      "name": "static var abbreviated: Measurement<UnitType>.FormatStyle.UnitWidth",
      "desc": "An abbreviated unit width."
    },
    {
      "name": "static var narrow: Measurement<UnitType>.FormatStyle.UnitWidth",
      "desc": "The shortest unit width."
    },
    {
      "name": "static var wide: Measurement<UnitType>.FormatStyle.UnitWidth",
      "desc": "A unit width that shows the full unit name."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes the value into the specified encoder."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the value by feeding them into the specified hasher."
    },
    {
      "name": "static func != (Measurement<UnitType>.FormatStyle.UnitWidth, Measurement<UnitType>.FormatStyle.UnitWidth) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are unequal."
    },
    {
      "name": "static func == (Measurement<UnitType>.FormatStyle.UnitWidth, Measurement<UnitType>.FormatStyle.UnitWidth) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are equal."
    }
  ],
  "declaration": "struct Measurement<UnitType>.FormatStyle.UnitWidth",
  "conformsTo": [
    "Decodable",
    "Encodable",
    "Hashable"
  ]
}