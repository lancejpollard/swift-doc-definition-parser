{
  "path": "/documentation/foundation/nsurlcomponents",
  "type": "Class",
  "name": "NSURLComponents",
  "desc": "An object that parses URLs into and constructs URLs from their constituent parts that bridges to URLComponents; use NSURLComponents when you need reference semantics or other Foundation-specific behavior.",
  "items": [
    {
      "name": "init()",
      "desc": "Initializes a URL components object with nil for every component."
    },
    {
      "name": "init?(string: String)",
      "desc": "Initializes a URL components object by parsing a URL in string form."
    },
    {
      "name": "init?(url: URL, resolvingAgainstBaseURL: Bool)",
      "desc": "Initializes a URL components object by parsing the URL from an NSURL object."
    },
    {
      "name": "var string: String?",
      "desc": "A URL derived from the components object, in string form."
    },
    {
      "name": "var url: URL?",
      "desc": "A URL object derived from the components object."
    },
    {
      "name": "func url(relativeTo: URL?) -> URL?",
      "desc": "Returns a URL object derived from the components object."
    },
    {
      "name": "var fragment: String?",
      "desc": "The fragment URL component (the part after a # symbol), or nil if not present."
    },
    {
      "name": "var host: String?",
      "desc": "The host URL subcomponent, or nil if not present."
    },
    {
      "name": "var password: String?",
      "desc": "The password URL subcomponent, or nil if not present."
    },
    {
      "name": "var path: String?",
      "desc": "The path URL component, or nil if not present."
    },
    {
      "name": "var port: NSNumber?",
      "desc": "The port number URL component, or nil if not present."
    },
    {
      "name": "var query: String?",
      "desc": "The query URL component as a string, or nil if not present."
    },
    {
      "name": "var queryItems: [URLQueryItem]?",
      "desc": "The query URL component as an array of name/value pairs."
    },
    {
      "name": "var scheme: String?",
      "desc": "The scheme URL component, or nil if not present."
    },
    {
      "name": "var user: String?",
      "desc": "The username URL subcomponent, or nil if not present."
    },
    {
      "name": "var percentEncodedFragment: String?",
      "desc": "The fragment URL component (the part after a # symbol) expressed as a URL-encoded string, or nil if not present."
    },
    {
      "name": "var percentEncodedHost: String?",
      "desc": "The host URL subcomponent expressed as a URL-encoded string, or nil if not present."
    },
    {
      "name": "var percentEncodedPassword: String?",
      "desc": "The password URL subcomponent expressed as a URL-encoded string, or nil if not present."
    },
    {
      "name": "var percentEncodedPath: String?",
      "desc": "The path URL component expressed as a URL-encoded string, or nil if not present."
    },
    {
      "name": "var percentEncodedQuery: String?",
      "desc": "The query URL component expressed as a URL-encoded string, or nil if not present."
    },
    {
      "name": "var percentEncodedUser: String?",
      "desc": "The username URL subcomponent expressed as a URL-encoded string, or nil if not present."
    },
    {
      "name": "var percentEncodedQueryItems: [URLQueryItem]?"
    },
    {
      "name": "var rangeOfFragment: NSRange",
      "desc": "Returns the character range of the fragment in the string returned by the string property."
    },
    {
      "name": "var rangeOfHost: NSRange",
      "desc": "Returns the character range of the host in the string returned by the string property."
    },
    {
      "name": "var rangeOfPassword: NSRange",
      "desc": "Returns the character range of the password in the string returned by the string property."
    },
    {
      "name": "var rangeOfPath: NSRange",
      "desc": "Returns the character range of the path in the string returned by the string property."
    },
    {
      "name": "var rangeOfPort: NSRange",
      "desc": "Returns the character range of the port in the string returned by the string property."
    },
    {
      "name": "var rangeOfQuery: NSRange",
      "desc": "Returns the character range of the query in the string returned by the string property."
    },
    {
      "name": "var rangeOfScheme: NSRange",
      "desc": "Returns the character range of the scheme in the string returned by the string property."
    },
    {
      "name": "var rangeOfUser: NSRange",
      "desc": "Returns the character range of the user in the string returned by the string property."
    }
  ],
  "declaration": "class NSURLComponents : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying"
  ]
}