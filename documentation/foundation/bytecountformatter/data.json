{
  "path": "/documentation/foundation/bytecountformatter",
  "type": "Class",
  "name": "ByteCountFormatter",
  "desc": "A formatter that converts a byte count value into a localized description that is formatted with the appropriate byte modifier (KB, MB, GB and so on).",
  "items": [
    {
      "name": "class func string(fromByteCount: Int64, countStyle: ByteCountFormatter.CountStyle) -> String",
      "desc": "Converts a byte count into the specified string format without creating an NSNumber object."
    },
    {
      "name": "func string(fromByteCount: Int64) -> String",
      "desc": "Converts a byte count into a string without creating an NSNumber object."
    },
    {
      "name": "var formattingContext: Formatter.Context",
      "desc": "Specify the formatting context for the formatted string."
    },
    {
      "name": "var countStyle: ByteCountFormatter.CountStyle",
      "desc": "Specify the number of bytes to be used for kilobytes."
    },
    {
      "name": "var allowsNonnumericFormatting: Bool",
      "desc": "Determines whether to allow more natural display of some values."
    },
    {
      "name": "var includesActualByteCount: Bool",
      "desc": "Determines whether to include the number of bytes after the formatted string."
    },
    {
      "name": "var isAdaptive: Bool",
      "desc": "Determines the display style of the size representation."
    },
    {
      "name": "var allowedUnits: ByteCountFormatter.Units",
      "desc": "Specify the units that can be used in the output."
    },
    {
      "name": "var includesCount: Bool",
      "desc": "Determines whether to include the count in the resulting formatted string."
    },
    {
      "name": "var includesUnit: Bool",
      "desc": "Determines whether to include the units in the resulting formatted string."
    },
    {
      "name": "var zeroPadsFractionDigits: Bool",
      "desc": "Determines whether to zero pad fraction digits so a consistent number of characters is displayed in a representation."
    },
    {
      "name": "struct ByteCountFormatter.Units",
      "desc": "Specifies the units appropriate for the formatter to display. Specifying any units explicitly causes just those units to be used in showing the number."
    },
    {
      "name": "enum ByteCountFormatter.CountStyle",
      "desc": "Specifies display of file or storage byte counts. The display style is platform specific."
    },
    {
      "name": "func string(for: Any?) -> String?"
    },
    {
      "name": "func string(from: Measurement<UnitInformationStorage>) -> String"
    },
    {
      "name": "class func string(from: Measurement<UnitInformationStorage>, countStyle: ByteCountFormatter.CountStyle) -> String"
    }
  ],
  "declaration": "class ByteCountFormatter : Formatter",
  "inheritsFrom": [
    "Formatter"
  ]
}