{
  "path": "/documentation/foundation/nsdateinterval",
  "type": "Class",
  "name": "NSDateInterval",
  "desc": "An object representing the span of time between two dates that bridges to DateInterval; use NSDateInterval when you need reference semantics or other Foundation-specific behavior.",
  "items": [
    {
      "name": "init()",
      "desc": "Initializes a date interval by setting the start and end date to the current date."
    },
    {
      "name": "init(start: Date, duration: TimeInterval)",
      "desc": "Initializes a date interval with a given start date and duration."
    },
    {
      "name": "init(start: Date, end: Date)",
      "desc": "Initializes a date interval from a given start date and end date."
    },
    {
      "name": "init(coder: NSCoder)",
      "desc": "Returns a date interval initialized from data in the given unarchiver."
    },
    {
      "name": "var startDate: Date",
      "desc": "The start date of the date interval."
    },
    {
      "name": "var endDate: Date",
      "desc": "The end date of the date interval."
    },
    {
      "name": "var duration: TimeInterval",
      "desc": "The duration of the date interval."
    },
    {
      "name": "func compare(DateInterval) -> ComparisonResult",
      "desc": "Compares the receiver with the specified date interval."
    },
    {
      "name": "func isEqual(to: DateInterval) -> Bool",
      "desc": "Indicates whether the receiver is equal to the specified date interval."
    },
    {
      "name": "func intersects(DateInterval) -> Bool",
      "desc": "Indicates whether the receiver intersects with the specified date interval."
    },
    {
      "name": "func intersection(with: DateInterval) -> DateInterval?",
      "desc": "Returns the intersection between the receiver and the specified date interval."
    },
    {
      "name": "func contains(Date) -> Bool",
      "desc": "Indicates whether the receiver contains the specified date."
    }
  ],
  "declaration": "class NSDateInterval : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSSecureCoding"
  ]
}