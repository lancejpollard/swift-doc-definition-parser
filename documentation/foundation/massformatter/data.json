{
  "path": "/documentation/foundation/massformatter",
  "type": "Class",
  "name": "MassFormatter",
  "desc": "A formatter that provides localized descriptions of mass and weight values.",
  "items": [
    {
      "name": "var isForPersonMassUse: Bool",
      "desc": "A Boolean value that indicates whether the resulting string represents a personâ€™s mass."
    },
    {
      "name": "func getObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject?>?, for: String, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool",
      "desc": "This method is not supported for the NSMassFormatter class."
    },
    {
      "name": "var numberFormatter: NumberFormatter!",
      "desc": "The number formatter used to format the numbers in a mass strings."
    },
    {
      "name": "func string(fromKilograms: Double) -> String",
      "desc": "Returns a mass string for the provided value."
    },
    {
      "name": "func string(fromValue: Double, unit: MassFormatter.Unit) -> String",
      "desc": "Returns a properly formatted mass string for the given value and unit."
    },
    {
      "name": "func unitString(fromKilograms: Double, usedUnit: UnsafeMutablePointer<MassFormatter.Unit>?) -> String",
      "desc": "Returns the unit string for the provided value."
    },
    {
      "name": "func unitString(fromValue: Double, unit: MassFormatter.Unit) -> String",
      "desc": "Returns the unit string based on the provided value and unit."
    },
    {
      "name": "var unitStyle: Formatter.UnitStyle",
      "desc": "The unit style used by this formatter."
    },
    {
      "name": "enum MassFormatter.Unit",
      "desc": "The units supported by the NSMassFormatter class."
    }
  ],
  "declaration": "class MassFormatter : Formatter",
  "inheritsFrom": [
    "Formatter"
  ]
}