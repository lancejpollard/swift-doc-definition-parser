{
  "path": "/documentation/foundation/nsattributedstring/key",
  "type": "Structure",
  "name": "NSAttributedString.Key",
  "desc": "Attributes that you can apply to text in an attributed string.",
  "items": [
    {
      "name": "static let attachment: NSAttributedString.Key",
      "desc": "The attachment for the text."
    },
    {
      "name": "static let backgroundColor: NSAttributedString.Key",
      "desc": "The color of the background behind the text."
    },
    {
      "name": "static let baselineOffset: NSAttributedString.Key",
      "desc": "The vertical offset for the position of the text."
    },
    {
      "name": "static let cursor: NSAttributedString.Key",
      "desc": "The cursor object."
    },
    {
      "name": "static let expansion: NSAttributedString.Key",
      "desc": "The expansion factor of the text."
    },
    {
      "name": "static let font: NSAttributedString.Key",
      "desc": "The font of the text."
    },
    {
      "name": "static let foregroundColor: NSAttributedString.Key",
      "desc": "The color of the text."
    },
    {
      "name": "static let glyphInfo: NSAttributedString.Key",
      "desc": "The name of a glyph info object."
    },
    {
      "name": "static let kern: NSAttributedString.Key",
      "desc": "The kerning of the text."
    },
    {
      "name": "static let ligature: NSAttributedString.Key",
      "desc": "The ligature of the text."
    },
    {
      "name": "static let link: NSAttributedString.Key",
      "desc": "The link for the text."
    },
    {
      "name": "static let markedClauseSegment: NSAttributedString.Key",
      "desc": "The index of the marked clause segment."
    },
    {
      "name": "static let obliqueness: NSAttributedString.Key",
      "desc": "The obliqueness of the text."
    },
    {
      "name": "static let paragraphStyle: NSAttributedString.Key",
      "desc": "The paragraph style of the text."
    },
    {
      "name": "static let shadow: NSAttributedString.Key",
      "desc": "The shadow of the text."
    },
    {
      "name": "static let spellingState: NSAttributedString.Key",
      "desc": "The spelling state of the text."
    },
    {
      "name": "static let strikethroughColor: NSAttributedString.Key",
      "desc": "The color of the strikethrough."
    },
    {
      "name": "static let strikethroughStyle: NSAttributedString.Key",
      "desc": "The strikethrough style of the text."
    },
    {
      "name": "static let strokeColor: NSAttributedString.Key",
      "desc": "The color of the stroke."
    },
    {
      "name": "static let strokeWidth: NSAttributedString.Key",
      "desc": "The width of the stroke."
    },
    {
      "name": "static let superscript: NSAttributedString.Key",
      "desc": "The superscript of the text."
    },
    {
      "name": "static let textAlternatives: NSAttributedString.Key",
      "desc": "The alternatives for the text."
    },
    {
      "name": "static let textEffect: NSAttributedString.Key",
      "desc": "The text effect."
    },
    {
      "name": "static let toolTip: NSAttributedString.Key",
      "desc": "The tooltip text."
    },
    {
      "name": "static let underlineColor: NSAttributedString.Key",
      "desc": "The color of the underline."
    },
    {
      "name": "static let underlineStyle: NSAttributedString.Key",
      "desc": "The underline style of the text."
    },
    {
      "name": "static let verticalGlyphForm: NSAttributedString.Key",
      "desc": "The vertical glyph form of the text."
    },
    {
      "name": "static let writingDirection: NSAttributedString.Key",
      "desc": "The writing direction of the text."
    },
    {
      "name": "static let accessibilityAlignment: NSAttributedString.Key"
    },
    {
      "name": "static let accessibilityAnnotationTextAttribute: NSAttributedString.Key"
    },
    {
      "name": "static let accessibilityAttachment: NSAttributedString.Key",
      "desc": "Text attachment (id)."
    },
    {
      "name": "static let accessibilityAutocorrected: NSAttributedString.Key",
      "desc": "Autocorrected text (NSNumber as a Boolean value)."
    },
    {
      "name": "static let accessibilityBackgroundColor: NSAttributedString.Key",
      "desc": "Text background color (CGColorRef)."
    },
    {
      "name": "static let accessibilityCustomText: NSAttributedString.Key"
    },
    {
      "name": "static let accessibilityFont: NSAttributedString.Key",
      "desc": "Font keys (NSDictionary)."
    },
    {
      "name": "static let accessibilityForegroundColor: NSAttributedString.Key",
      "desc": "Text foreground color (CGColorRef)."
    },
    {
      "name": "static let accessibilityLanguage: NSAttributedString.Key"
    },
    {
      "name": "static let accessibilityLink: NSAttributedString.Key",
      "desc": "Text link (id)."
    },
    {
      "name": "static let accessibilityListItemIndex: NSAttributedString.Key"
    },
    {
      "name": "static let accessibilityListItemLevel: NSAttributedString.Key"
    },
    {
      "name": "static let accessibilityListItemPrefix: NSAttributedString.Key"
    },
    {
      "name": "static let accessibilityMarkedMisspelled: NSAttributedString.Key",
      "desc": "Misspelled text that is visibly marked as misspelled (NSNumber as a Boolean value). If you’re implementing a custom text-editing app, use NSAccessibilityMarkedMisspelledTextAttribute to ensure that VoiceOver properly identifies misspelled text to users."
    },
    {
      "name": "static let accessibilityMisspelled: NSAttributedString.Key",
      "desc": "Misspelled text that isn’t necessarily visibly marked as misspelled (NSNumber as a Boolean value). Beginning in macOS 10.9, VoiceOver no longer checks for this attribute; instead, VoiceOver uses accessibilityMarkedMisspelled."
    },
    {
      "name": "static let accessibilityShadow: NSAttributedString.Key",
      "desc": "Text shadow (NSNumber as a Boolean value)."
    },
    {
      "name": "static let accessibilitySpeechIPANotation: NSAttributedString.Key",
      "desc": "A key that indicates the pronunciation of a specific word or phrase, such as a proper name."
    },
    {
      "name": "static let accessibilitySpeechLanguage: NSAttributedString.Key",
      "desc": "A key that indicates the language to use when speaking a string."
    },
    {
      "name": "static let accessibilitySpeechPitch: NSAttributedString.Key",
      "desc": "A key that indicates the pitch to apply to spoken content."
    },
    {
      "name": "static let accessibilitySpeechPunctuation: NSAttributedString.Key",
      "desc": "A key that indicates whether to speak punctuation."
    },
    {
      "name": "static let accessibilitySpeechQueueAnnouncement: NSAttributedString.Key",
      "desc": "A key that indicates whether to queue an announcement behind existing speech or to interrupt it."
    },
    {
      "name": "static let accessibilitySpeechSpellOut: NSAttributedString.Key"
    },
    {
      "name": "static let accessibilityTextCustom: NSAttributedString.Key",
      "desc": "A key for specifying custom attributes to apply to the text."
    },
    {
      "name": "static let accessibilityTextHeadingLevel: NSAttributedString.Key",
      "desc": "A key for specifying the heading level of the text."
    },
    {
      "name": "static let accessibilityStrikethrough: NSAttributedString.Key",
      "desc": "Text strikethrough (NSNumber as a Boolean value)."
    },
    {
      "name": "static let accessibilityStrikethroughColor: NSAttributedString.Key",
      "desc": "Text strikethrough color (CGColorRef)."
    },
    {
      "name": "static let accessibilitySuperscript: NSAttributedString.Key",
      "desc": "Text superscript style (NSNumber). Values > 0 are superscript; values < 0 are subscript."
    },
    {
      "name": "static let accessibilityUnderline: NSAttributedString.Key",
      "desc": "Text underline style (NSNumber)."
    },
    {
      "name": "static let accessibilityUnderlineColor: NSAttributedString.Key",
      "desc": "Text underline color (CGColorRef)."
    },
    {
      "name": "static let UIAccessibilityTextAttributeContext: NSAttributedString.Key"
    },
    {
      "name": "init(String)",
      "desc": "Creates an attributed string key."
    },
    {
      "name": "init(rawValue: String)",
      "desc": "Creates an attributed string key with the specified raw value."
    },
    {
      "name": "static let alternateDescription: NSAttributedString.Key"
    },
    {
      "name": "static let imageURL: NSAttributedString.Key"
    },
    {
      "name": "static let inflectionAlternative: NSAttributedString.Key"
    },
    {
      "name": "static let inflectionRule: NSAttributedString.Key"
    },
    {
      "name": "static let inlinePresentationIntent: NSAttributedString.Key"
    },
    {
      "name": "static let languageIdentifier: NSAttributedString.Key"
    },
    {
      "name": "static let morphology: NSAttributedString.Key"
    },
    {
      "name": "static let presentationIntentAttributeName: NSAttributedString.Key"
    },
    {
      "name": "static let replacementIndex: NSAttributedString.Key"
    },
    {
      "name": "static let tracking: NSAttributedString.Key"
    }
  ],
  "declaration": "struct Key, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}