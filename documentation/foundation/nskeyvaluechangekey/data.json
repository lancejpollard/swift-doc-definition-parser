{
  "path": "/documentation/foundation/nskeyvaluechangekey",
  "type": "Structure",
  "name": "NSKeyValueChangeKey",
  "desc": "The keys that can appear in the change dictionary.",
  "items": [
    {
      "name": "static let indexesKey: NSKeyValueChangeKey",
      "desc": "If the value of the kindKey entry is NSKeyValueChange.insertion, NSKeyValueChange.removal, or NSKeyValueChange.replacement, the value of this key is an NSIndexSet object that contains the indexes of the inserted, removed, or replaced objects."
    },
    {
      "name": "static let kindKey: NSKeyValueChangeKey",
      "desc": "An NSNumber object that contains a value corresponding to one of the NSKeyValueChange enums, indicating what sort of change has occurred."
    },
    {
      "name": "static let newKey: NSKeyValueChangeKey",
      "desc": "If the value of the kindKey entry is NSKeyValueChange.setting, and new was specified when the observer was registered, the value of this key is the new value for the attribute."
    },
    {
      "name": "static let notificationIsPriorKey: NSKeyValueChangeKey",
      "desc": "If the prior option was specified when the observer was registered this notification is sent prior to a change."
    },
    {
      "name": "static let oldKey: NSKeyValueChangeKey",
      "desc": "If the value of the kindKey entry is NSKeyValueChange.setting, and old was specified when the observer was registered, the value of this key is the value before the attribute was changed."
    },
    {
      "name": "init(rawValue: String)"
    }
  ],
  "declaration": "struct NSKeyValueChangeKey, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}