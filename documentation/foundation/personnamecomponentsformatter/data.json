{
  "path": "/documentation/foundation/personnamecomponentsformatter",
  "type": "Class",
  "name": "PersonNameComponentsFormatter",
  "desc": "A formatter that provides localized representations of the components of a personâ€™s name.",
  "items": [
    {
      "name": "var style: PersonNameComponentsFormatter.Style",
      "desc": "The formatting style of the receiver."
    },
    {
      "name": "var isPhonetic: Bool",
      "desc": "A Boolean value that specifies whether the receiver should use only the phonetic representations of name components. false by default."
    },
    {
      "name": "class func localizedString(from: PersonNameComponents, style: PersonNameComponentsFormatter.Style, options: PersonNameComponentsFormatter.Options) -> String",
      "desc": "Returns a string formatted for a given NSPersonNameComponents object using the provided style and options."
    },
    {
      "name": "func string(from: PersonNameComponents) -> String",
      "desc": "Returns a string formatted for a given NSPersonNameComponents object."
    },
    {
      "name": "func annotatedString(from: PersonNameComponents) -> NSAttributedString",
      "desc": "Returns an attributed string formatted for a given NSPersonNameComponents object, with attribute annotations for each component."
    },
    {
      "name": "func personNameComponents(from: String) -> PersonNameComponents?",
      "desc": "Returns a person name components object from a given string."
    },
    {
      "name": "func getObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject?>?, for: String, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool",
      "desc": "Returns by reference a person name components object after creating it from a given string."
    },
    {
      "name": "enum PersonNameComponentsFormatter.Style"
    },
    {
      "name": "struct PersonNameComponentsFormatter.Options"
    },
    {
      "name": "var locale: Locale!"
    }
  ],
  "declaration": "class PersonNameComponentsFormatter : Formatter",
  "inheritsFrom": [
    "Formatter"
  ]
}