{
  "path": "/documentation/foundation/xmlparser/errorcode",
  "type": "Enumeration",
  "name": "XMLParser.ErrorCode",
  "desc": "The following error codes are defined by NSXMLParser. For error codes not listed here, see the <libxml/xmlerror.h> header file.",
  "items": [
    {
      "name": "case internalError",
      "desc": "The parser object encountered an internal error."
    },
    {
      "name": "case outOfMemoryError",
      "desc": "The parser object ran out of memory."
    },
    {
      "name": "case documentStartError",
      "desc": "The parser object is unable to start parsing."
    },
    {
      "name": "case emptyDocumentError",
      "desc": "The document is empty."
    },
    {
      "name": "case prematureDocumentEndError",
      "desc": "The document ended unexpectedly."
    },
    {
      "name": "case invalidHexCharacterRefError",
      "desc": "Invalid hexadecimal character reference encountered."
    },
    {
      "name": "case invalidDecimalCharacterRefError",
      "desc": "Invalid decimal character reference encountered."
    },
    {
      "name": "case invalidCharacterRefError",
      "desc": "Invalid character reference encountered."
    },
    {
      "name": "case invalidCharacterError",
      "desc": "Invalid character encountered."
    },
    {
      "name": "case characterRefAtEOFError",
      "desc": "Target of character reference cannot be found."
    },
    {
      "name": "case characterRefInPrologError",
      "desc": "Invalid character found in the prolog."
    },
    {
      "name": "case characterRefInEpilogError",
      "desc": "Invalid character found in the epilog."
    },
    {
      "name": "case characterRefInDTDError",
      "desc": "Invalid character encountered in the DTD."
    },
    {
      "name": "case entityRefAtEOFError",
      "desc": "Target of entity reference is not found."
    },
    {
      "name": "case entityRefInPrologError",
      "desc": "Invalid entity reference found in the prolog."
    },
    {
      "name": "case entityRefInEpilogError",
      "desc": "Invalid entity reference found in the epilog."
    },
    {
      "name": "case entityRefInDTDError",
      "desc": "Invalid entity reference found in the DTD."
    },
    {
      "name": "case parsedEntityRefAtEOFError",
      "desc": "Target of parsed entity reference is not found."
    },
    {
      "name": "case parsedEntityRefInPrologError",
      "desc": "Target of parsed entity reference is not found in prolog."
    },
    {
      "name": "case parsedEntityRefInEpilogError",
      "desc": "Target of parsed entity reference is not found in epilog."
    },
    {
      "name": "case parsedEntityRefInInternalSubsetError",
      "desc": "Target of parsed entity reference is not found in internal subset."
    },
    {
      "name": "case entityReferenceWithoutNameError",
      "desc": "Entity reference is without name."
    },
    {
      "name": "case entityReferenceMissingSemiError",
      "desc": "Entity reference is missing semicolon."
    },
    {
      "name": "case parsedEntityRefNoNameError",
      "desc": "Parsed entity reference is without an entity name."
    },
    {
      "name": "case parsedEntityRefMissingSemiError",
      "desc": "Parsed entity reference is missing semicolon."
    },
    {
      "name": "case undeclaredEntityError",
      "desc": "Entity is not declared."
    },
    {
      "name": "case unparsedEntityError",
      "desc": "Cannot parse entity."
    },
    {
      "name": "case entityIsExternalError",
      "desc": "Cannot parse external entity."
    },
    {
      "name": "case entityIsParameterError",
      "desc": "Entity is a parameter."
    },
    {
      "name": "case unknownEncodingError",
      "desc": "Document encoding is unknown."
    },
    {
      "name": "case encodingNotSupportedError",
      "desc": "Document encoding is not supported."
    },
    {
      "name": "case stringNotStartedError",
      "desc": "String is not started."
    },
    {
      "name": "case stringNotClosedError",
      "desc": "String is not closed."
    },
    {
      "name": "case namespaceDeclarationError",
      "desc": "Invalid namespace declaration encountered."
    },
    {
      "name": "case entityNotStartedError",
      "desc": "Entity is not started."
    },
    {
      "name": "case entityNotFinishedError",
      "desc": "Entity is not finished."
    },
    {
      "name": "case lessThanSymbolInAttributeError",
      "desc": "Angle bracket is used in attribute."
    },
    {
      "name": "case attributeNotStartedError",
      "desc": "Attribute is not started."
    },
    {
      "name": "case attributeNotFinishedError",
      "desc": "Attribute is not finished."
    },
    {
      "name": "case attributeHasNoValueError",
      "desc": "Attribute doesnâ€™t contain a value."
    },
    {
      "name": "case attributeRedefinedError",
      "desc": "Attribute is redefined."
    },
    {
      "name": "case literalNotStartedError",
      "desc": "Literal is not started."
    },
    {
      "name": "case literalNotFinishedError",
      "desc": "Literal is not finished."
    },
    {
      "name": "case commentNotFinishedError",
      "desc": "Comment is not finished."
    },
    {
      "name": "case processingInstructionNotStartedError",
      "desc": "Processing instruction is not started."
    },
    {
      "name": "case processingInstructionNotFinishedError",
      "desc": "Processing instruction is not finished."
    },
    {
      "name": "case notationNotStartedError",
      "desc": "Notation is not started."
    },
    {
      "name": "case notationNotFinishedError",
      "desc": "Notation is not finished."
    },
    {
      "name": "case attributeListNotStartedError",
      "desc": "Attribute list is not started."
    },
    {
      "name": "case attributeListNotFinishedError",
      "desc": "Attribute list is not finished."
    },
    {
      "name": "case mixedContentDeclNotStartedError",
      "desc": "Mixed content declaration is not started."
    },
    {
      "name": "case mixedContentDeclNotFinishedError",
      "desc": "Mixed content declaration is not finished."
    },
    {
      "name": "case elementContentDeclNotStartedError",
      "desc": "Element content declaration is not started."
    },
    {
      "name": "case elementContentDeclNotFinishedError",
      "desc": "Element content declaration is not finished."
    },
    {
      "name": "case xmlDeclNotStartedError",
      "desc": "XML declaration is not started."
    },
    {
      "name": "case xmlDeclNotFinishedError",
      "desc": "XML declaration is not finished."
    },
    {
      "name": "case conditionalSectionNotStartedError",
      "desc": "Conditional section is not started."
    },
    {
      "name": "case conditionalSectionNotFinishedError",
      "desc": "Conditional section is not finished."
    },
    {
      "name": "case externalSubsetNotFinishedError",
      "desc": "External subset is not finished."
    },
    {
      "name": "case doctypeDeclNotFinishedError",
      "desc": "Document type declaration is not finished."
    },
    {
      "name": "case misplacedCDATAEndStringError",
      "desc": "Misplaced CDATA end string."
    },
    {
      "name": "case cdataNotFinishedError",
      "desc": "CDATA block is not finished."
    },
    {
      "name": "case misplacedXMLDeclarationError",
      "desc": "Misplaced XML declaration."
    },
    {
      "name": "case spaceRequiredError",
      "desc": "Space is required."
    },
    {
      "name": "case separatorRequiredError",
      "desc": "Separator is required."
    },
    {
      "name": "case nmtokenRequiredError",
      "desc": "Name token is required."
    },
    {
      "name": "case nameRequiredError",
      "desc": "Name is required."
    },
    {
      "name": "case pcdataRequiredError",
      "desc": "CDATA is required."
    },
    {
      "name": "case uriRequiredError",
      "desc": "URI is required."
    },
    {
      "name": "case publicIdentifierRequiredError",
      "desc": "Public identifier is required."
    },
    {
      "name": "case ltRequiredError",
      "desc": "Left angle bracket is required."
    },
    {
      "name": "case gtRequiredError",
      "desc": "Right angle bracket is required."
    },
    {
      "name": "case ltSlashRequiredError",
      "desc": "Left angle bracket slash is required."
    },
    {
      "name": "case equalExpectedError",
      "desc": "Equal sign expected."
    },
    {
      "name": "case tagNameMismatchError",
      "desc": "Tag name mismatch."
    },
    {
      "name": "case unfinishedTagError",
      "desc": "Unfinished tag found."
    },
    {
      "name": "case standaloneValueError",
      "desc": "Standalone value found."
    },
    {
      "name": "case invalidEncodingNameError",
      "desc": "Invalid encoding name found."
    },
    {
      "name": "case commentContainsDoubleHyphenError",
      "desc": "Comment contains double hyphen."
    },
    {
      "name": "case invalidEncodingError",
      "desc": "Invalid encoding."
    },
    {
      "name": "case externalStandaloneEntityError",
      "desc": "External standalone entity."
    },
    {
      "name": "case invalidConditionalSectionError",
      "desc": "Invalid conditional section."
    },
    {
      "name": "case entityValueRequiredError",
      "desc": "Entity value is required."
    },
    {
      "name": "case notWellBalancedError",
      "desc": "Document is not well balanced."
    },
    {
      "name": "case extraContentError",
      "desc": "Error in content found."
    },
    {
      "name": "case invalidCharacterInEntityError",
      "desc": "Invalid character in entity found."
    },
    {
      "name": "case parsedEntityRefInInternalError",
      "desc": "Internal error in parsed entity reference found."
    },
    {
      "name": "case entityRefLoopError",
      "desc": "Entity reference loop encountered."
    },
    {
      "name": "case entityBoundaryError",
      "desc": "Entity boundary error."
    },
    {
      "name": "case invalidURIError",
      "desc": "Invalid URI specified."
    },
    {
      "name": "case uriFragmentError",
      "desc": "URI fragment."
    },
    {
      "name": "case noDTDError",
      "desc": "Missing DTD."
    },
    {
      "name": "case delegateAbortedParseError",
      "desc": "Delegate aborted parse."
    }
  ],
  "declaration": "enum ErrorCode : Int, @unchecked Sendable",
  "conformsTo": [
    "Sendable"
  ]
}