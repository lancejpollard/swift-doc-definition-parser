{
  "path": "/documentation/foundation/urlprotocolclient",
  "type": "Protocol",
  "name": "URLProtocolClient",
  "desc": "The interface used by URLProtocol subclasses to communicate with the URL Loading System.",
  "items": [
    {
      "name": "func urlProtocol(URLProtocol, didReceive: URLResponse, cacheStoragePolicy: URLCache.StoragePolicy)",
      "desc": "Tells the client that the protocol implementation has created a response object for the request."
    },
    {
      "name": "func urlProtocol(URLProtocol, wasRedirectedTo: URLRequest, redirectResponse: URLResponse)",
      "desc": "Tells the client that the protocol implementation has been redirected."
    },
    {
      "name": "func urlProtocol(URLProtocol, cachedResponseIsValid: CachedURLResponse)",
      "desc": "Tells the client that a cached response is valid."
    },
    {
      "name": "func urlProtocol(URLProtocol, didCancel: URLAuthenticationChallenge)",
      "desc": "Tells the client that an authentication challenge has been canceled."
    },
    {
      "name": "func urlProtocol(URLProtocol, didReceive: URLAuthenticationChallenge)",
      "desc": "Tells the client that the URL Loading System received an authentication challenge."
    },
    {
      "name": "func urlProtocol(URLProtocol, didFailWithError: Error)",
      "desc": "Tells the client that the load request failed due to an error."
    },
    {
      "name": "func urlProtocol(URLProtocol, didLoad: Data)",
      "desc": "Tells the client that the protocol implementation has loaded some data."
    },
    {
      "name": "func urlProtocolDidFinishLoading(URLProtocol)",
      "desc": "Tells the client that the protocol implementation has finished loading."
    }
  ],
  "declaration": "protocol URLProtocolClient",
  "inheritsFrom": [
    "NSObjectProtocol"
  ]
}