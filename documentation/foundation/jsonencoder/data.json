{
  "path": "/documentation/foundation/jsonencoder",
  "type": "Class",
  "name": "JSONEncoder",
  "desc": "An object that encodes instances of a data type as JSON objects.",
  "items": [
    {
      "name": "init()",
      "desc": "Creates a new, reusable JSON encoder with the default formatting settings and encoding strategies."
    },
    {
      "name": "func encode<T>(T) -> Data",
      "desc": "Returns a JSON-encoded representation of the value you supply."
    },
    {
      "name": "var outputFormatting: JSONEncoder.OutputFormatting",
      "desc": "A value that determines the readability, size, and element order of the encoded JSON object."
    },
    {
      "name": "struct JSONEncoder.OutputFormatting",
      "desc": "The output formatting options that determine the readability, size, and element order of an encoded JSON object."
    },
    {
      "name": "var keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy",
      "desc": "A value that determines how to encode a typeâ€™s coding keys as JSON keys."
    },
    {
      "name": "enum JSONEncoder.KeyEncodingStrategy",
      "desc": "The values that determine how to encode a type's coding keys as JSON keys."
    },
    {
      "name": "var userInfo: [CodingUserInfoKey : Any]",
      "desc": "A dictionary you use to customize the encoding process by providing contextual information."
    },
    {
      "name": "var dateEncodingStrategy: JSONEncoder.DateEncodingStrategy",
      "desc": "The strategy used when encoding dates as part of a JSON object."
    },
    {
      "name": "enum JSONEncoder.DateEncodingStrategy",
      "desc": "The formatting strategies available for formatting dates when encoding a date as JSON."
    },
    {
      "name": "var dataEncodingStrategy: JSONEncoder.DataEncodingStrategy",
      "desc": "The strategy that an encoder uses to encode raw data."
    },
    {
      "name": "enum JSONEncoder.DataEncodingStrategy",
      "desc": "The strategies for encoding raw data."
    },
    {
      "name": "var nonConformingFloatEncodingStrategy: JSONEncoder.NonConformingFloatEncodingStrategy",
      "desc": "The strategy used by an encoder when it encounters exceptional floating-point values."
    },
    {
      "name": "enum JSONEncoder.NonConformingFloatEncodingStrategy",
      "desc": "The strategies for encoding nonconforming floating-point numbers, also known as IEEE 754 exceptional values."
    },
    {
      "name": "typealias JSONEncoder.Output",
      "desc": "The type of output produced by the JSON encoder."
    }
  ],
  "declaration": "class JSONEncoder",
  "conformsTo": [
    "TopLevelEncoder"
  ]
}