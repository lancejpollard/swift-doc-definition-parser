{
  "path": "/documentation/foundation/morphology/partofspeech",
  "type": "Enumeration",
  "name": "Morphology.PartOfSpeech",
  "desc": "A representation of grammatical parts of speech, used for inflecting strings.",
  "items": [
    {
      "name": "init?(rawValue: Int)",
      "desc": "Creates a grammatical part of speech instance from the provided enumeration value."
    },
    {
      "name": "case determiner",
      "desc": "A determiner, as used as a part of speech."
    },
    {
      "name": "case pronoun",
      "desc": "A pronoun, as used as a part of speech."
    },
    {
      "name": "case letter",
      "desc": "A letter, as used as a part of speech."
    },
    {
      "name": "case adverb",
      "desc": "An adverb, as used as a part of speech."
    },
    {
      "name": "case particle",
      "desc": "A particle, as used as a part of speech."
    },
    {
      "name": "case adjective",
      "desc": "An adjective, as used as a part of speech."
    },
    {
      "name": "case adposition",
      "desc": "An adposition, as used as a part of speech."
    },
    {
      "name": "case verb",
      "desc": "A verb, as used as a part of speech."
    },
    {
      "name": "case noun",
      "desc": "A noun, as used as a part of speech."
    },
    {
      "name": "case conjunction",
      "desc": "A conjunction, as used as a part of speech."
    },
    {
      "name": "case numeral",
      "desc": "A numeral, as used as a part of speech."
    },
    {
      "name": "case interjection",
      "desc": "An interjection, as used as a part of speech."
    },
    {
      "name": "case preposition",
      "desc": "A preposition, as used as a part of speech."
    },
    {
      "name": "case abbreviation",
      "desc": "An abbreviation, as used as a part of speech."
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new instance by decoding from the given decoder."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes this value into the given encoder."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "typealias Morphology.PartOfSpeech.RawValue",
      "desc": "The raw value type of the grammatical part of speech enumeration."
    },
    {
      "name": "var rawValue: Int",
      "desc": "The raw value of the grammatical part of speech instance."
    },
    {
      "name": "static func != (Morphology.PartOfSpeech, Morphology.PartOfSpeech) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are not equal."
    }
  ],
  "declaration": "enum Morphology.PartOfSpeech : Int, Hashable",
  "conformsTo": [
    "Decodable",
    "Encodable",
    "Hashable"
  ]
}