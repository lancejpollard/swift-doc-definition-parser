{
  "path": "/documentation/foundation/morphology/grammaticalgender",
  "type": "Enumeration",
  "name": "Morphology.GrammaticalGender",
  "desc": "A representation of grammatical gender, used for inflecting strings.",
  "items": [
    {
      "name": "init?(rawValue: Int)",
      "desc": "Creates a grammatical gender instance from the provided enumeration value."
    },
    {
      "name": "case feminine",
      "desc": "The feminine grammatical gender."
    },
    {
      "name": "case masculine",
      "desc": "The masculine grammatical gender."
    },
    {
      "name": "case neuter",
      "desc": "A value to not specify gender when inflecting a string."
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new instance by decoding from the given decoder."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes this value into the given encoder."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "typealias Morphology.GrammaticalGender.RawValue",
      "desc": "The raw value type of the grammatical gender enumeration."
    },
    {
      "name": "var rawValue: Int",
      "desc": "The raw value of the grammatical gender instance."
    },
    {
      "name": "static func != (Morphology.GrammaticalGender, Morphology.GrammaticalGender) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are not equal."
    }
  ],
  "declaration": "enum Morphology.GrammaticalGender : Int, Hashable",
  "conformsTo": [
    "Decodable",
    "Encodable",
    "Hashable"
  ]
}