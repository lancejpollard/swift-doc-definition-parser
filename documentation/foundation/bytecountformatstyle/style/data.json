{
  "path": "/documentation/foundation/bytecountformatstyle/style",
  "type": "Enumeration",
  "name": "ByteCountFormatStyle.Style",
  "desc": "No overview available.",
  "items": [
    {
      "name": "typealias ByteCountFormatStyle.Style.RawValue"
    },
    {
      "name": "case binary"
    },
    {
      "name": "case decimal"
    },
    {
      "name": "case file"
    },
    {
      "name": "case memory"
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new instance by decoding from the given decoder, when the type’s RawValue is Int."
    },
    {
      "name": "init?(rawValue: Int)"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var rawValue: Int"
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes this value into the given encoder, when the type’s RawValue is Int."
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func != (ByteCountFormatStyle.Style, ByteCountFormatStyle.Style) -> Bool"
    }
  ],
  "declaration": "enum ByteCountFormatStyle.Style : Int, Codable, Hashable",
  "conformsTo": [
    "Decodable",
    "Encodable",
    "Hashable"
  ]
}