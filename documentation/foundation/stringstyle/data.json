{
  "path": "/documentation/foundation/stringstyle",
  "type": "Structure",
  "name": "StringStyle",
  "desc": "No overview available.",
  "items": [
    {
      "name": "typealias StringStyle.FormatInput"
    },
    {
      "name": "typealias StringStyle.FormatOutput"
    },
    {
      "name": "func format(String) -> String"
    },
    {
      "name": "init(from: Decoder)"
    },
    {
      "name": "func encode(to: Encoder)"
    },
    {
      "name": "func locale(Locale) -> StringStyle"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func == (StringStyle, StringStyle) -> Bool"
    },
    {
      "name": "static func != (StringStyle, StringStyle) -> Bool"
    },
    {
      "name": "static func list<MemberStyle, Base>(memberStyle: MemberStyle, type: ListFormatStyle<MemberStyle, Base>.ListType, width: ListFormatStyle<MemberStyle, Base>.Width) -> ListFormatStyle<MemberStyle, Base>"
    },
    {
      "name": "static func list<Base>(type: ListFormatStyle<StringStyle, Base>.ListType, width: ListFormatStyle<StringStyle, Base>.Width) -> ListFormatStyle<StringStyle, Base>"
    },
    {
      "name": "static func currency<Value>(code: String) -> FloatingPointFormatStyle<Value>.Currency"
    },
    {
      "name": "static func currency<V>(code: String) -> IntegerFormatStyle<V>.Currency"
    },
    {
      "name": "static func measurement(width: Measurement<UnitTemperature>.FormatStyle.UnitWidth, usage: MeasurementFormatUnitUsage<UnitTemperature>, hidesScaleName: Bool, numberFormatStyle: FloatingPointFormatStyle<Double>?) -> Measurement<UnitTemperature>.FormatStyle"
    },
    {
      "name": "static func measurement<UnitType>(width: Measurement<UnitType>.FormatStyle.UnitWidth, usage: MeasurementFormatUnitUsage<UnitType>, numberFormatStyle: FloatingPointFormatStyle<Double>?) -> Measurement<UnitType>.FormatStyle"
    }
  ],
  "declaration": "struct StringStyle",
  "conformsTo": [
    "FormatStyle"
  ]
}