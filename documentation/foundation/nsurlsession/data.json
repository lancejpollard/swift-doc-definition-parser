{
  "path": "/documentation/foundation/nsurlsession",
  "type": "Class",
  "name": "NSURLSession",
  "desc": "An object that coordinates a group of related, network data transfer tasks.",
  "items": [
    {
      "name": "+ sessionWithConfiguration:",
      "desc": "Creates a session with the specified session configuration."
    },
    {
      "name": "+ sessionWithConfiguration:delegate:delegateQueue:",
      "desc": "Creates a session with the specified session configuration, delegate, and operation queue."
    },
    {
      "name": "- dataTaskWithURL:",
      "desc": "Creates a task that retrieves the contents of the specified URL."
    },
    {
      "name": "- dataTaskWithURL:completionHandler:",
      "desc": "Creates a task that retrieves the contents of the specified URL, then calls a handler upon completion."
    },
    {
      "name": "- dataTaskWithRequest:",
      "desc": "Creates a task that retrieves the contents of a URL based on the specified URL request object."
    },
    {
      "name": "- dataTaskWithRequest:completionHandler:",
      "desc": "Creates a task that retrieves the contents of a URL based on the specified URL request object, and calls a handler upon completion."
    },
    {
      "name": "- downloadTaskWithURL:",
      "desc": "Creates a download task that retrieves the contents of the specified URL and saves the results to a file."
    },
    {
      "name": "- downloadTaskWithURL:completionHandler:",
      "desc": "Creates a download task that retrieves the contents of the specified URL, saves the results to a file, and calls a handler upon completion."
    },
    {
      "name": "- downloadTaskWithRequest:",
      "desc": "Creates a download task that retrieves the contents of a URL based on the specified URL request object and saves the results to a file."
    },
    {
      "name": "- downloadTaskWithRequest:completionHandler:",
      "desc": "Creates a download task that retrieves the contents of a URL based on the specified URL request object, saves the results to a file, and calls a handler upon completion."
    },
    {
      "name": "- downloadTaskWithResumeData:",
      "desc": "Creates a download task to resume a previously canceled or failed download."
    },
    {
      "name": "- downloadTaskWithResumeData:completionHandler:",
      "desc": "Creates a download task to resume a previously canceled or failed download and calls a handler upon completion."
    },
    {
      "name": "- uploadTaskWithRequest:fromData:",
      "desc": "Creates a task that performs an HTTP request for the specified URL request object and uploads the provided data."
    },
    {
      "name": "- uploadTaskWithRequest:fromData:completionHandler:",
      "desc": "Creates a task that performs an HTTP request for the specified URL request object, uploads the provided data, and calls a handler upon completion."
    },
    {
      "name": "- uploadTaskWithRequest:fromFile:",
      "desc": "Creates a task that performs an HTTP request for uploading the specified file."
    },
    {
      "name": "- uploadTaskWithRequest:fromFile:completionHandler:",
      "desc": "Creates a task that performs an HTTP request for uploading the specified file, then calls a handler upon completion."
    },
    {
      "name": "- uploadTaskWithStreamedRequest:",
      "desc": "Creates a task that performs an HTTP request for uploading data based on the specified URL request."
    },
    {
      "name": "- streamTaskWithHostName:port:",
      "desc": "Creates a task that establishes a bidirectional TCP/IP connection to a specified hostname and port."
    },
    {
      "name": "- webSocketTaskWithURL:",
      "desc": "Creates a WebSocket task for the provided URL."
    },
    {
      "name": "- webSocketTaskWithRequest:",
      "desc": "Creates a WebSocket task for the provided URL request."
    },
    {
      "name": "- webSocketTaskWithURL:protocols:",
      "desc": "Creates a WebSocket task given a URL and an array of protocols."
    },
    {
      "name": "- finishTasksAndInvalidate",
      "desc": "Invalidates the session, allowing any outstanding tasks to finish."
    },
    {
      "name": "- flushWithCompletionHandler:",
      "desc": "Flushes cookies and credentials to disk, clears transient caches, and ensures that future requests occur on a new TCP connection."
    },
    {
      "name": "- getTasksWithCompletionHandler:",
      "desc": "Asynchronously calls a completion callback with all data, upload, and download tasks in a session."
    },
    {
      "name": "- getAllTasksWithCompletionHandler:",
      "desc": "Asynchronously calls a completion callback with all tasks in a session"
    },
    {
      "name": "- invalidateAndCancel",
      "desc": "Cancels all outstanding tasks and then invalidates the session."
    },
    {
      "name": "- resetWithCompletionHandler:",
      "desc": "Empties all cookies, caches and credential stores, removes disk files, flushes in-progress downloads to disk, and ensures that future requests occur on a new socket."
    }
  ],
  "declaration": "@interface NSURLSession : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}