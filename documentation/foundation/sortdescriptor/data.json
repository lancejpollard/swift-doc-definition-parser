{
  "path": "/documentation/foundation/sortdescriptor",
  "type": "Generic Structure",
  "name": "SortDescriptor",
  "desc": "A serializable description of how to sort numerics and strings.",
  "items": [
    {
      "name": "init?(NSSortDescriptor, comparing: Compared.Type)",
      "desc": "Creates a sort descriptor using a sort descriptor and a type that you specify."
    },
    {
      "name": "init(KeyPath<Compared, Date>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to a date."
    },
    {
      "name": "init(KeyPath<Compared, Date?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional date."
    },
    {
      "name": "init(KeyPath<Compared, UUID>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to a UUID."
    },
    {
      "name": "init(KeyPath<Compared, UUID?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional UUID."
    },
    {
      "name": "init(KeyPath<Compared, Bool>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to a Boolean value."
    },
    {
      "name": "init(KeyPath<Compared, Bool?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional Boolean value."
    },
    {
      "name": "init(KeyPath<Compared, Double>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to a double."
    },
    {
      "name": "init(KeyPath<Compared, Double?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional double."
    },
    {
      "name": "init(KeyPath<Compared, Float>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to a float."
    },
    {
      "name": "init(KeyPath<Compared, Float?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional float."
    },
    {
      "name": "init(KeyPath<Compared, String>, comparator: String.StandardComparator)",
      "desc": "Creates a sort descriptor using a key path to a string."
    },
    {
      "name": "init(KeyPath<Compared, String?>, comparator: String.StandardComparator)",
      "desc": "Creates a sort descriptor using a key path to an optional string."
    },
    {
      "name": "init(KeyPath<Compared, String>, comparator: String.StandardComparator, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to a string that uses a sort order that you specify."
    },
    {
      "name": "init(KeyPath<Compared, String?>, comparator: String.StandardComparator, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional string that uses a sort order that you specify."
    },
    {
      "name": "init(KeyPath<Compared, Int>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an integer."
    },
    {
      "name": "init(KeyPath<Compared, Int?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional integer."
    },
    {
      "name": "init(KeyPath<Compared, UInt>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an unsigned integer."
    },
    {
      "name": "init(KeyPath<Compared, UInt?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional unsigned integer."
    },
    {
      "name": "init(KeyPath<Compared, Int8>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an 8-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, Int8?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional 8-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, Int16>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to a 16-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, Int16?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional 16-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, Int32>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to a 32-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, Int32?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional 32-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, Int64>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to a 64-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, Int64?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional 64-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, UInt8>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an unsigned 8-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, UInt8?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional unsigned 8-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, UInt16>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an unsigned 16-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, UInt16?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional unsigned 16-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, UInt32>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an unsigned 32-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, UInt32?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional unsigned 32-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, UInt64>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an unsigned 64-bit integer."
    },
    {
      "name": "init(KeyPath<Compared, UInt64?>, order: SortOrder)",
      "desc": "Creates a sort descriptor using a key path to an optional unsigned 64-bit integer."
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a sort descriptor by decoding from the decoder you specify."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes the sort descriptor into the encoder you specify."
    },
    {
      "name": "func compare(Compared, Compared) -> ComparisonResult",
      "desc": "Provides the relative ordering of two elements."
    },
    {
      "name": "var order: SortOrder",
      "desc": "The sort order that the sort descriptor uses to compare."
    },
    {
      "name": "static func == (SortDescriptor<Compared>, SortDescriptor<Compared>) -> Bool",
      "desc": "A Boolean value that indicates whether two sort descriptors are equal."
    },
    {
      "name": "static func != (SortDescriptor<Compared>, SortDescriptor<Compared>) -> Bool",
      "desc": "A Boolean value that indicates whether two sort descriptors are unequal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the comparator by feeding them into the specified hash function."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hashed value of the comparator."
    }
  ],
  "declaration": "struct SortDescriptor<Compared>",
  "conformsTo": [
    "Decodable",
    "Encodable",
    "SortComparator"
  ]
}