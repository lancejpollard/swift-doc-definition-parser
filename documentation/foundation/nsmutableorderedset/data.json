{
  "path": "/documentation/foundation/nsmutableorderedset",
  "type": "Class",
  "name": "NSMutableOrderedSet",
  "desc": "A dynamic, ordered collection of unique objects.",
  "items": [
    {
      "name": "init(capacity: Int)",
      "desc": "Returns an initialized mutable ordered set with a given initial capacity."
    },
    {
      "name": "init()",
      "desc": "Initializes a newly allocated mutable ordered set."
    },
    {
      "name": "func add(Any)",
      "desc": "Appends a given object to the end of the mutable ordered set, if it is not already a member."
    },
    {
      "name": "func add(UnsafePointer<AnyObject>?, count: Int)",
      "desc": "Appends the given number of objects from a given C array to the end of the mutable ordered set."
    },
    {
      "name": "func addObjects(from: [Any])",
      "desc": "Appends to the end of the mutable ordered set each object contained in a given array that is not already a member."
    },
    {
      "name": "func insert(Any, at: Int)",
      "desc": "Inserts the given object at the specified index of the mutable ordered set, if it is not already a member."
    },
    {
      "name": "func insert([Any], at: IndexSet)",
      "desc": "Inserts the objects in the array at the specified indexes."
    },
    {
      "name": "func remove(Any)",
      "desc": "Removes a given object from the mutable ordered set."
    },
    {
      "name": "func removeObject(at: Int)",
      "desc": "Removes a the object at the specified index from the mutable ordered set."
    },
    {
      "name": "func removeObjects(at: IndexSet)",
      "desc": "Removes the objects at the specified indexes from the mutable ordered set."
    },
    {
      "name": "func removeObjects(in: [Any])",
      "desc": "Removes the objects in the array from the mutable ordered set."
    },
    {
      "name": "func removeObjects(in: NSRange)",
      "desc": "Removes from the mutable ordered set each of the objects within a given range."
    },
    {
      "name": "func removeAllObjects()",
      "desc": "Removes all the objects from the mutable ordered set."
    },
    {
      "name": "func replaceObject(at: Int, with: Any)",
      "desc": "Replaces the object at the specified index with the new object."
    },
    {
      "name": "func replaceObjects(at: IndexSet, with: [Any])",
      "desc": "Replaces the objects at the specified indexes with the new objects."
    },
    {
      "name": "func replaceObjects(in: NSRange, with: UnsafePointer<AnyObject>?, count: Int)",
      "desc": "Replaces the objects in the receiving mutable ordered set at the range with the specified number of objects from a given C array."
    },
    {
      "name": "func setObject(Any, at: Int)",
      "desc": "Appends or replaces the object at the specified index."
    },
    {
      "name": "func moveObjects(at: IndexSet, to: Int)",
      "desc": "Moves the objects at the specified indexes to the new location."
    },
    {
      "name": "func exchangeObject(at: Int, withObjectAt: Int)",
      "desc": "Exchanges the object at the specified index with the object at the other index."
    },
    {
      "name": "func filter(using: NSPredicate)",
      "desc": "Evaluates a given predicate against the mutable ordered set’s content and leaves only objects that match."
    },
    {
      "name": "func sort(using: [NSSortDescriptor])",
      "desc": "Sorts the receiving ordered set using a given array of sort descriptors."
    },
    {
      "name": "func sort(comparator: (Any, Any) -> ComparisonResult)",
      "desc": "Sorts the mutable ordered set using the comparison method specified by the comparator block."
    },
    {
      "name": "func sort(options: NSSortOptions, usingComparator: (Any, Any) -> ComparisonResult)",
      "desc": "Sorts the mutable ordered set using the specified options and the comparison method specified by a given comparator block."
    },
    {
      "name": "func sortRange(NSRange, options: NSSortOptions, usingComparator: (Any, Any) -> ComparisonResult)",
      "desc": "Sorts the specified range of the mutable ordered set using the specified options and the comparison method specified by a given comparator block."
    },
    {
      "name": "func intersect(NSOrderedSet)",
      "desc": "Removes from the receiving ordered set each object that isn’t a member of another ordered set."
    },
    {
      "name": "func intersectSet(Set<AnyHashable>)",
      "desc": "Removes from the receiving ordered set each object that isn’t a member of another set."
    },
    {
      "name": "func minus(NSOrderedSet)",
      "desc": "Removes each object in another given ordered set from the receiving mutable ordered set, if present."
    },
    {
      "name": "func minusSet(Set<AnyHashable>)",
      "desc": "Removes each object in another given set from the receiving mutable ordered set, if present."
    },
    {
      "name": "func union(NSOrderedSet)",
      "desc": "Adds each object in another given ordered set to the receiving mutable ordered set, if not present."
    },
    {
      "name": "func unionSet(Set<AnyHashable>)",
      "desc": "Adds each object in another given set to the receiving mutable ordered set, if not present."
    },
    {
      "name": "init?(coder: NSCoder)"
    }
  ],
  "declaration": "class NSMutableOrderedSet : NSOrderedSet",
  "inheritsFrom": [
    "NSOrderedSet"
  ]
}