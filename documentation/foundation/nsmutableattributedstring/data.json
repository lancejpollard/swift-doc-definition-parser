{
  "path": "/documentation/foundation/nsmutableattributedstring",
  "type": "Class",
  "name": "NSMutableAttributedString",
  "desc": "A mutable string with associated attributes (such as visual style, hyperlinks, or accessibility data) for portions of its text.",
  "items": [
    {
      "name": "var mutableString: NSMutableString",
      "desc": "The character contents of the receiver as an NSMutableString object."
    },
    {
      "name": "func replaceCharacters(in: NSRange, with: String)",
      "desc": "Replaces the characters in the given range with the characters of the given string."
    },
    {
      "name": "func deleteCharacters(in: NSRange)",
      "desc": "Deletes the characters in the given range along with their associated attributes."
    },
    {
      "name": "func setAttributes([NSAttributedString.Key : Any]?, range: NSRange)",
      "desc": "Sets the attributes for the characters in the specified range to the specified attributes."
    },
    {
      "name": "func addAttribute(NSAttributedString.Key, value: Any, range: NSRange)",
      "desc": "Adds an attribute with the given name and value to the characters in the specified range."
    },
    {
      "name": "func addAttributes([NSAttributedString.Key : Any], range: NSRange)",
      "desc": "Adds the given collection of attributes to the characters in the specified range."
    },
    {
      "name": "func removeAttribute(NSAttributedString.Key, range: NSRange)",
      "desc": "Removes the named attribute from the characters in the specified range."
    },
    {
      "name": "func applyFontTraits(NSFontTraitMask, range: NSRange)",
      "desc": "Applies the font attributes specified by mask to the characters in aRange."
    },
    {
      "name": "func setAlignment(NSTextAlignment, range: NSRange)",
      "desc": "Sets the alignment characteristic of the paragraph style attribute for the characters in aRange to alignment."
    },
    {
      "name": "func setBaseWritingDirection(NSWritingDirection, range: NSRange)",
      "desc": "Sets the base writing direction for the characters in range to writingDirection."
    },
    {
      "name": "func subscriptRange(NSRange)",
      "desc": "Decrements the value of the superscript attribute for characters in aRange by 1."
    },
    {
      "name": "func superscriptRange(NSRange)",
      "desc": "Increments the value of the superscript attribute for characters in aRange by 1."
    },
    {
      "name": "func unscriptRange(NSRange)",
      "desc": "Removes the superscript attribute from the characters in aRange."
    },
    {
      "name": "func append(NSAttributedString)",
      "desc": "Adds the characters and attributes of a given attributed string to the end of the receiver."
    },
    {
      "name": "func insert(NSAttributedString, at: Int)",
      "desc": "Inserts the characters and attributes of the given attributed string into the receiver at the given index."
    },
    {
      "name": "func replaceCharacters(in: NSRange, with: NSAttributedString)",
      "desc": "Replaces the characters and attributes in a given range with the characters and attributes of the given attributed string."
    },
    {
      "name": "func setAttributedString(NSAttributedString)",
      "desc": "Replaces the receiver’s entire contents with the characters and attributes of the given attributed string."
    },
    {
      "name": "func beginEditing()",
      "desc": "Overridden by subclasses to buffer or optimize a series of changes to the receiver’s characters or attributes, until it receives a matching endEditing() message, upon which it can consolidate changes and notify any observers that it has changed."
    },
    {
      "name": "func endEditing()",
      "desc": "Overridden by subclasses to consolidate changes made since a previous beginEditing() message and to notify any observers of the changes."
    },
    {
      "name": "func updateAttachments(fromPath: String)",
      "desc": "Updates all attachments based on files contained in the RTFD file package at path."
    },
    {
      "name": "func fixAttributes(in: NSRange)",
      "desc": "Cleans up font, paragraph style, and attachment attributes within the given range."
    },
    {
      "name": "func fixAttachmentAttribute(in: NSRange)",
      "desc": "Cleans up attachment attributes in aRange, removing all attachment attributes assigned to characters other than NSAttachmentCharacter."
    },
    {
      "name": "func fixFontAttribute(in: NSRange)",
      "desc": "Fixes the font attribute in aRange, assigning default fonts to characters with illegal fonts for their scripts and otherwise correcting font attribute assignments."
    },
    {
      "name": "func fixParagraphStyleAttribute(in: NSRange)",
      "desc": "Fixes the paragraph style attributes in aRange, assigning the first paragraph style attribute value in each paragraph to all characters of the paragraph."
    },
    {
      "name": "func read(from: Data, options: [NSAttributedString.DocumentReadingOptionKey : Any], documentAttributes: AutoreleasingUnsafeMutablePointer<NSDictionary?>?)",
      "desc": "Sets the contents of the receiver from the stream at data."
    },
    {
      "name": "func read(from: URL, options: [NSAttributedString.DocumentReadingOptionKey : Any], documentAttributes: AutoreleasingUnsafeMutablePointer<NSDictionary?>?)",
      "desc": "Sets the contents of attributed string to the contents of the specified file."
    }
  ],
  "declaration": "class NSMutableAttributedString : NSAttributedString",
  "inheritsFrom": [
    "NSAttributedString"
  ]
}