{
  "path": "/documentation/network/nwendpoint/host",
  "type": "Enumeration",
  "name": "NWEndpoint.Host",
  "desc": "A name or address that identifies a network endpoint.",
  "items": [
    {
      "name": "init(String)",
      "desc": "Initializes a host with a string."
    },
    {
      "name": "case name(String, NWInterface?)",
      "desc": "A host represented as a name."
    },
    {
      "name": "case ipv4(IPv4Address)",
      "desc": "A host represented as an IPv4 address."
    },
    {
      "name": "case ipv6(IPv6Address)",
      "desc": "A host represented as an IPv6 address."
    },
    {
      "name": "var interface: NWInterface?",
      "desc": "The interface associated with this host, such as the interface scope stored in an IPv6 address."
    },
    {
      "name": "init(unicodeScalarLiteral: StringLiteralType)",
      "desc": "Creates an instance initialized to the given value."
    },
    {
      "name": "init(stringLiteral: NWEndpoint.Host.StringLiteralType)"
    },
    {
      "name": "typealias NWEndpoint.Host.StringLiteralType"
    },
    {
      "name": "init(extendedGraphemeClusterLiteral: String)",
      "desc": "Creates an instance initialized to the given value."
    },
    {
      "name": "var debugDescription: String"
    },
    {
      "name": "static func != (NWEndpoint.Host, NWEndpoint.Host) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "typealias NWEndpoint.Host.ExtendedGraphemeClusterLiteralType"
    },
    {
      "name": "typealias NWEndpoint.Host.UnicodeScalarLiteralType"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "static func == (NWEndpoint.Host, NWEndpoint.Host) -> Bool"
    }
  ],
  "declaration": "enum NWEndpoint.Host",
  "conformsTo": [
    "CustomDebugStringConvertible",
    "ExpressibleByStringLiteral",
    "Hashable"
  ]
}