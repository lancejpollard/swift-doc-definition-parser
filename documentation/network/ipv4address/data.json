{
  "path": "/documentation/network/ipv4address",
  "type": "Structure",
  "name": "IPv4Address",
  "desc": "A structure containing an IPv4 address.",
  "items": [
    {
      "name": "init?(String)",
      "desc": "Initializes an IPv4 address with a string."
    },
    {
      "name": "init?(Data, NWInterface?)",
      "desc": "Initializes an IPv4 address with data."
    },
    {
      "name": "var rawValue: Data",
      "desc": "The raw data of an IPv4 address."
    },
    {
      "name": "let interface: NWInterface?",
      "desc": "The interface associated with this address."
    },
    {
      "name": "var isLinkLocal: Bool",
      "desc": "A Boolean indicating whether this address is in a link-local range."
    },
    {
      "name": "var isLoopback: Bool",
      "desc": "A Boolean indicating whether this address is a loopback address for the local device."
    },
    {
      "name": "var isMulticast: Bool",
      "desc": "A Boolean indicating whether this address is a multicast address."
    },
    {
      "name": "var debugDescription: String",
      "desc": "The description of the IP address."
    },
    {
      "name": "static let any: IPv4Address",
      "desc": "The unspecified address (0.0.0.0)."
    },
    {
      "name": "static let broadcast: IPv4Address",
      "desc": "The local broadcast address (255.255.255.255)."
    },
    {
      "name": "static let loopback: IPv4Address",
      "desc": "The device's loopback address (127.0.0.1)."
    },
    {
      "name": "static let allHostsGroup: IPv4Address",
      "desc": "The multicast group for all hosts on the network segment (224.0.0.1)."
    },
    {
      "name": "static let allRoutersGroup: IPv4Address",
      "desc": "The multicast group for all routers on the network segment (224.0.0.2)."
    },
    {
      "name": "static let allReportsGroup: IPv4Address",
      "desc": "The multicast group for all IGMPv3 reports (224.0.0.22)."
    },
    {
      "name": "static let mdnsGroup: IPv4Address",
      "desc": "The multicast group for multicast DNS (224.0.0.251)."
    },
    {
      "name": "static func == (IPv4Address, IPv4Address) -> Bool"
    },
    {
      "name": "static func != (IPv4Address, IPv4Address) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "var hashValue: Int"
    }
  ],
  "declaration": "struct IPv4Address",
  "conformsTo": [
    "CustomDebugStringConvertible",
    "Hashable",
    "IPAddress"
  ]
}