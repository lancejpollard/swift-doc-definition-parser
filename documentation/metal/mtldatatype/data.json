{
  "path": "/documentation/metal/mtldatatype",
  "type": "Enumeration",
  "name": "MTLDataType",
  "desc": "Constants that describe the type of data to pass into specific function arguments.",
  "items": [
    {
      "name": "case bool",
      "desc": "A Boolean value."
    },
    {
      "name": "case bool2",
      "desc": "A two-component vector with Boolean values."
    },
    {
      "name": "case bool3",
      "desc": "A three-component vector with Boolean values."
    },
    {
      "name": "case bool4",
      "desc": "A four-component vector with Boolean values."
    },
    {
      "name": "case char",
      "desc": "A signed 8-bit integer value."
    },
    {
      "name": "case char2",
      "desc": "A two-component vector with signed 8-bit integer values."
    },
    {
      "name": "case char3",
      "desc": "A three-component vector with signed 8-bit integer values."
    },
    {
      "name": "case char4",
      "desc": "A four-component vector with signed 8-bit integer values."
    },
    {
      "name": "case uchar",
      "desc": "An unsigned 8-bit integer value."
    },
    {
      "name": "case uchar2",
      "desc": "A two-component vector with unsigned 8-bit integer values."
    },
    {
      "name": "case uchar3",
      "desc": "A three-component vector with unsigned 8-bit integer values."
    },
    {
      "name": "case uchar4",
      "desc": "A four-component vector with unsigned 8-bit integer values."
    },
    {
      "name": "case short",
      "desc": "A signed 16-bit integer value."
    },
    {
      "name": "case short2",
      "desc": "A two-component vector with signed 16-bit integer values."
    },
    {
      "name": "case short3",
      "desc": "A three-component vector with signed 16-bit integer values."
    },
    {
      "name": "case short4",
      "desc": "A four-component vector with signed 16-bit integer values."
    },
    {
      "name": "case ushort",
      "desc": "An unsigned 16-bit integer value."
    },
    {
      "name": "case ushort2",
      "desc": "A two-component vector with unsigned 16-bit integer values."
    },
    {
      "name": "case ushort3",
      "desc": "A three-component vector with unsigned 16-bit integer values."
    },
    {
      "name": "case ushort4",
      "desc": "A four-component vector with unsigned 16-bit integer values."
    },
    {
      "name": "case int",
      "desc": "A signed 32-bit integer value."
    },
    {
      "name": "case int2",
      "desc": "A two-component vector with signed 32-bit integer values."
    },
    {
      "name": "case int3",
      "desc": "A three-component vector with signed 32-bit integer values."
    },
    {
      "name": "case int4",
      "desc": "A four-component vector with signed 32-bit integer values."
    },
    {
      "name": "case uint",
      "desc": "An unsigned 32-bit integer value."
    },
    {
      "name": "case uint2",
      "desc": "A two-component vector with unsigned 32-bit integer values."
    },
    {
      "name": "case uint3",
      "desc": "A three-component vector with unsigned 32-bit integer values."
    },
    {
      "name": "case uint4",
      "desc": "A four-component vector with unsigned 32-bit integer values."
    },
    {
      "name": "case long",
      "desc": "A signed 64-bit integer value."
    },
    {
      "name": "case long2",
      "desc": "A two-component vector with signed 64-bit integer values."
    },
    {
      "name": "case long3",
      "desc": "A three-component vector with signed 64-bit integer values."
    },
    {
      "name": "case long4",
      "desc": "A four-component vector with signed 64-bit integer values."
    },
    {
      "name": "case ulong",
      "desc": "An unsigned 64-bit integer value."
    },
    {
      "name": "case ulong2",
      "desc": "A two-component vector with unsigned 64-bit integer values."
    },
    {
      "name": "case ulong3",
      "desc": "A three-component vector with unsigned 64-bit integer values."
    },
    {
      "name": "case ulong4",
      "desc": "A four-component vector with unsigned 64-bit integer values."
    },
    {
      "name": "case float",
      "desc": "A 32-bit floating-point value."
    },
    {
      "name": "case float2",
      "desc": "A two-component vector with 32-bit floating-point values."
    },
    {
      "name": "case float3",
      "desc": "A three-component vector with 32-bit floating-point values."
    },
    {
      "name": "case float4",
      "desc": "A four-component vector with 32-bit floating-point values."
    },
    {
      "name": "case float2x2",
      "desc": "A 2x2 component matrix with 32-bit floating-point values."
    },
    {
      "name": "case float2x3",
      "desc": "A 2x3 component matrix with 32-bit floating-point values."
    },
    {
      "name": "case float2x4",
      "desc": "A 2x4 component matrix with 32-bit floating-point values."
    },
    {
      "name": "case float3x2",
      "desc": "A 3x2 component matrix with 32-bit floating-point values."
    },
    {
      "name": "case float3x3",
      "desc": "A 3x3 component matrix with 32-bit floating-point values."
    },
    {
      "name": "case float3x4",
      "desc": "A 3x4 component matrix with 32-bit floating-point values."
    },
    {
      "name": "case float4x2",
      "desc": "A 4x2 component matrix with 32-bit floating-point values."
    },
    {
      "name": "case float4x3",
      "desc": "A 4x3 component matrix with 32-bit floating-point values."
    },
    {
      "name": "case float4x4",
      "desc": "A 4x4 component matrix with 32-bit floating-point values."
    },
    {
      "name": "case half",
      "desc": "A 16-bit floating-point value."
    },
    {
      "name": "case half2",
      "desc": "A two-component vector with 16-bit floating-point values."
    },
    {
      "name": "case half3",
      "desc": "A three-component vector with 16-bit floating-point values."
    },
    {
      "name": "case half4",
      "desc": "A four-component vector with 16-bit floating-point values."
    },
    {
      "name": "case half2x2",
      "desc": "A 2x2 component matrix with 16-bit floating-point values."
    },
    {
      "name": "case half2x3",
      "desc": "A 2x3 component matrix with 16-bit floating-point values."
    },
    {
      "name": "case half2x4",
      "desc": "A 2x4 component matrix with 16-bit floating-point values."
    },
    {
      "name": "case half3x2",
      "desc": "A 3x2 component matrix with 16-bit floating-point values."
    },
    {
      "name": "case half3x3",
      "desc": "A 3x3 component matrix with 16-bit floating-point values."
    },
    {
      "name": "case half3x4",
      "desc": "A 3x4 component matrix with 16-bit floating-point values."
    },
    {
      "name": "case half4x2",
      "desc": "A 4x2 component matrix with 16-bit floating-point values."
    },
    {
      "name": "case half4x3",
      "desc": "A 4x3 component matrix with 16-bit floating-point values."
    },
    {
      "name": "case half4x4",
      "desc": "A 4x4 component matrix with 16-bit floating-point values."
    },
    {
      "name": "case r8Snorm",
      "desc": "An ordinary format with one 8-bit, normalized, signed integer component."
    },
    {
      "name": "case r8Unorm",
      "desc": "An ordinary format with one 8-bit, normalized, unsigned integer component."
    },
    {
      "name": "case rg8Snorm",
      "desc": "An ordinary format with two 8-bit, normalized, signed integer components."
    },
    {
      "name": "case rg8Unorm",
      "desc": "An ordinary format with two 8-bit, normalized, unsigned integer components."
    },
    {
      "name": "case rgba8Snorm",
      "desc": "An ordinary format with four 8-bit, normalized, signed integer components in RGBA order."
    },
    {
      "name": "case rgba8Unorm",
      "desc": "An ordinary format with four 8-bit, normalized, unsigned integer components in RGBA order."
    },
    {
      "name": "case rgba8Unorm_srgb",
      "desc": "An ordinary format with four 8-bit, normalized, unsigned integer components in RGBA order with conversion between sRGB and linear space."
    },
    {
      "name": "case r16Snorm",
      "desc": "An ordinary format with one 16-bit, normalized, signed integer component."
    },
    {
      "name": "case r16Unorm",
      "desc": "An ordinary format with one 16-bit, normalized, unsigned integer component."
    },
    {
      "name": "case rg16Snorm",
      "desc": "An ordinary format with two 16-bit, normalized, signed integer components."
    },
    {
      "name": "case rg16Unorm",
      "desc": "An ordinary format with two 16-bit, normalized, unsigned integer components."
    },
    {
      "name": "case rgba16Snorm",
      "desc": "An ordinary format with four 16-bit, normalized, signed integer components in RGBA order."
    },
    {
      "name": "case rgba16Unorm",
      "desc": "An ordinary format with four 16-bit, normalized, unsigned integer components in RGBA order."
    },
    {
      "name": "case rgb9e5Float",
      "desc": "A packed 32-bit format with three 9-bit, floating-point color components."
    },
    {
      "name": "case rgb10a2Unorm",
      "desc": "A packed 32-bit format with normalized, unsigned integer color components."
    },
    {
      "name": "case rg11b10Float",
      "desc": "A packed 32-bit format with two 11-bit (for red and green) and one 10-bit (for blue) floating-point color components."
    },
    {
      "name": "case texture",
      "desc": "A texture."
    },
    {
      "name": "case sampler",
      "desc": "A texture sampler."
    },
    {
      "name": "case indirectCommandBuffer",
      "desc": "An indirect command buffer."
    },
    {
      "name": "case renderPipeline",
      "desc": "A render pipeline."
    },
    {
      "name": "case computePipeline",
      "desc": "A compute pipeline."
    },
    {
      "name": "case visibleFunctionTable",
      "desc": "A table of visible functions that the pipeline can call."
    },
    {
      "name": "case intersectionFunctionTable",
      "desc": "A table of intersection functions that the pipeline can call."
    },
    {
      "name": "case primitiveAccelerationStructure",
      "desc": "A low-level ray-tracing acceleration structure for a set of primitives."
    },
    {
      "name": "case instanceAccelerationStructure",
      "desc": "A high-level ray-tracing acceleration structure for a set of instances of low-level primitives."
    },
    {
      "name": "case none",
      "desc": "The argument doesn't have a valid data type."
    },
    {
      "name": "case `struct`",
      "desc": "A structure."
    },
    {
      "name": "case array",
      "desc": "An array."
    },
    {
      "name": "case pointer",
      "desc": "A pointer."
    }
  ],
  "declaration": "enum MTLDataType : UInt, @unchecked Sendable",
  "conformsTo": [
    "Sendable"
  ]
}