{
  "path": "/documentation/metal/mtlsamplerdescriptor",
  "type": "Class",
  "name": "MTLSamplerDescriptor",
  "desc": "An object that you use to configure a texture sampler.",
  "items": [
    {
      "name": "var normalizedCoordinates: Bool",
      "desc": "A Boolean value that indicates whether texture coordinates are normalized to the range [0.0, 1.0]."
    },
    {
      "name": "var rAddressMode: MTLSamplerAddressMode",
      "desc": "The address mode for the texture depth (r) coordinate."
    },
    {
      "name": "var sAddressMode: MTLSamplerAddressMode",
      "desc": "The address mode for the texture width (s) coordinate."
    },
    {
      "name": "var tAddressMode: MTLSamplerAddressMode",
      "desc": "The address mode for the texture height (t) coordinate."
    },
    {
      "name": "var borderColor: MTLSamplerBorderColor",
      "desc": "The border color for clamped texture values."
    },
    {
      "name": "enum MTLSamplerAddressMode",
      "desc": "Modes that determine the texture coordinate at each pixel when a fetch falls outside the bounds of a texture."
    },
    {
      "name": "enum MTLSamplerBorderColor",
      "desc": "Values that determine the border color for clamped texture values when the sampler address mode is MTLSamplerAddressMode.clampToBorderColor."
    },
    {
      "name": "var minFilter: MTLSamplerMinMagFilter",
      "desc": "The filtering option for combining pixels within one mipmap level when the sample footprint is larger than a pixel (minification)."
    },
    {
      "name": "var magFilter: MTLSamplerMinMagFilter",
      "desc": "The filtering operation for combining pixels within one mipmap level when the sample footprint is smaller than a pixel (magnification)."
    },
    {
      "name": "var mipFilter: MTLSamplerMipFilter",
      "desc": "The filtering option for combining pixels between two mipmap levels."
    },
    {
      "name": "var lodMinClamp: Float",
      "desc": "The minimum level of detail (LOD) to use when sampling from a texture."
    },
    {
      "name": "var lodMaxClamp: Float",
      "desc": "The maximum level of detail (LOD) to use when sampling from a texture."
    },
    {
      "name": "var lodAverage: Bool",
      "desc": "A Boolean value that specifies whether the GPU can use an average level of detail (LOD) when sampling from a texture."
    },
    {
      "name": "var maxAnisotropy: Int",
      "desc": "The number of samples that can be taken to improve the quality of sample footprints that are anisotropic."
    },
    {
      "name": "enum MTLSamplerMinMagFilter",
      "desc": "Filtering options for determining which pixel value is returned within a mipmap level."
    },
    {
      "name": "enum MTLSamplerMipFilter",
      "desc": "Filtering options for determining what pixel value is returned with multiple mipmap levels."
    },
    {
      "name": "var compareFunction: MTLCompareFunction",
      "desc": "The sampler comparison function used when performing a sample compare operation on a depth texture."
    },
    {
      "name": "enum MTLCompareFunction",
      "desc": "Options used to specify how a sample compare operation should be performed on a depth texture."
    },
    {
      "name": "var supportArgumentBuffers: Bool",
      "desc": "A Boolean value that specifies whether the sampler can be encoded into an argument buffer."
    },
    {
      "name": "var label: String?",
      "desc": "A string that identifies the sampler."
    }
  ],
  "declaration": "class MTLSamplerDescriptor : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying"
  ]
}