{
  "path": "/documentation/metal/mtlcomputepipelinedescriptor",
  "type": "Class",
  "name": "MTLComputePipelineDescriptor",
  "desc": "An object for customizing the compilation of a new compute pipeline state object.",
  "items": [
    {
      "name": "var computeFunction: MTLFunction?",
      "desc": "The compute kernel the pipeline calls."
    },
    {
      "name": "var threadGroupSizeIsMultipleOfThreadExecutionWidth: Bool",
      "desc": "A Boolean value that indicates whether the threadgroup size must always be a multiple of the thread execution width."
    },
    {
      "name": "var maxTotalThreadsPerThreadgroup: Int",
      "desc": "The maximum number of threads in a threadgroup that you can dispatch to the compute function."
    },
    {
      "name": "var maxCallStackDepth: Int",
      "desc": "The maximum function call depth from the top-most shader function."
    },
    {
      "name": "var stageInputDescriptor: MTLStageInputOutputDescriptor?",
      "desc": "The organization of input and output data for the compute function."
    },
    {
      "name": "class MTLAttributeDescriptor",
      "desc": "An object that describes an argument's format and where its data is in memory."
    },
    {
      "name": "class MTLAttributeDescriptorArray",
      "desc": "An array of attribute descriptor objects."
    },
    {
      "name": "class MTLBufferLayoutDescriptor",
      "desc": "An object that configures how a function fetches input data for an attribute."
    },
    {
      "name": "class MTLBufferLayoutDescriptorArray",
      "desc": "An array of buffer layout descriptor objects."
    },
    {
      "name": "var buffers: MTLPipelineBufferDescriptorArray",
      "desc": "The buffer mutability options for a compute pipeline's kernel function."
    },
    {
      "name": "var label: String?",
      "desc": "A string that identifies the object."
    },
    {
      "name": "var supportIndirectCommandBuffers: Bool",
      "desc": "A Boolean value that indicates whether you can encode commands that reference the pipeline state object into an indirect command buffer."
    },
    {
      "name": "func reset()",
      "desc": "Resets all compute pipeline descriptor properties to their default values."
    },
    {
      "name": "var linkedFunctions: MTLLinkedFunctions?",
      "desc": "The functions that you can specify as function arguments when encoding commands that use this pipeline."
    },
    {
      "name": "var supportAddingBinaryFunctions: Bool",
      "desc": "A Boolean value that indicates whether you can use the pipeline to create new pipelines by adding binary functions to its callable functions list."
    },
    {
      "name": "var binaryArchives: [MTLBinaryArchive]?",
      "desc": "The binary archives that contain any precompiled shader functions you want to link."
    },
    {
      "name": "var preloadedLibraries: [MTLDynamicLibrary]"
    }
  ],
  "declaration": "class MTLComputePipelineDescriptor : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying"
  ]
}