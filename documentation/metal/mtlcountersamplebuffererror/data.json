{
  "path": "/documentation/metal/mtlcountersamplebuffererror",
  "type": "Structure",
  "name": "MTLCounterSampleBufferError",
  "desc": "Errors returned by Metal when counter sampling.",
  "items": [
    {
      "name": "var errorCode: Int",
      "desc": "The error code that can result from a counter sampling request."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "The user information dictionary."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A string containing the localized description of the error."
    },
    {
      "name": "static var `internal`: MTLCounterSampleBufferError.Code",
      "desc": "An internal error occurred."
    },
    {
      "name": "static var outOfMemory: MTLCounterSampleBufferError.Code",
      "desc": "The counter sampler ran out of memory."
    },
    {
      "name": "static var invalid: MTLCounterSampleBufferError.Code",
      "desc": "You passed in an invalid parameter when creating the counter sample buffer."
    },
    {
      "name": "enum MTLCounterSampleBufferError.Code",
      "desc": "Constants for error codes returned by Metal for counter sampling errors."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The error domain used by Metal when returning counter sampling errors."
    },
    {
      "name": "static func != (MTLCounterSampleBufferError, MTLCounterSampleBufferError) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two counter sampling errors arenâ€™t equal."
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func == (MTLCounterSampleBufferError, MTLCounterSampleBufferError) -> Bool"
    }
  ],
  "declaration": "struct MTLCounterSampleBufferError"
}