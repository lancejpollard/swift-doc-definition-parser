{
  "path": "/documentation/metal/mtlpixelformat",
  "type": "Enumeration",
  "name": "MTLPixelFormat",
  "desc": "The data formats that describe the organization and characteristics of individual pixels in a texture.",
  "items": [
    {
      "name": "case a8Unorm",
      "desc": "Ordinary format with one 8-bit normalized unsigned integer component."
    },
    {
      "name": "case r8Unorm",
      "desc": "Ordinary format with one 8-bit normalized unsigned integer component."
    },
    {
      "name": "case r8Unorm_srgb",
      "desc": "Ordinary format with one 8-bit normalized unsigned integer component with conversion between sRGB and linear space."
    },
    {
      "name": "case r8Snorm",
      "desc": "Ordinary format with one 8-bit normalized signed integer component."
    },
    {
      "name": "case r8Uint",
      "desc": "Ordinary format with one 8-bit unsigned integer component."
    },
    {
      "name": "case r8Sint",
      "desc": "Ordinary format with one 8-bit signed integer component."
    },
    {
      "name": "case r16Unorm",
      "desc": "Ordinary format with one 16-bit normalized unsigned integer component."
    },
    {
      "name": "case r16Snorm",
      "desc": "Ordinary format with one 16-bit normalized signed integer component."
    },
    {
      "name": "case r16Uint",
      "desc": "Ordinary format with one 16-bit unsigned integer component."
    },
    {
      "name": "case r16Sint",
      "desc": "Ordinary format with one 16-bit signed integer component."
    },
    {
      "name": "case r16Float",
      "desc": "Ordinary format with one 16-bit floating-point component."
    },
    {
      "name": "case rg8Unorm",
      "desc": "Ordinary format with two 8-bit normalized unsigned integer components."
    },
    {
      "name": "case rg8Unorm_srgb",
      "desc": "Ordinary format with two 8-bit normalized unsigned integer components with conversion between sRGB and linear space."
    },
    {
      "name": "case rg8Snorm",
      "desc": "Ordinary format with two 8-bit normalized signed integer components."
    },
    {
      "name": "case rg8Uint",
      "desc": "Ordinary format with two 8-bit unsigned integer components."
    },
    {
      "name": "case rg8Sint",
      "desc": "Ordinary format with two 8-bit signed integer components."
    },
    {
      "name": "case b5g6r5Unorm",
      "desc": "Packed 16-bit format with normalized unsigned integer color components: 5 bits for blue, 6 bits for green, 5 bits for red, packed into 16 bits."
    },
    {
      "name": "case a1bgr5Unorm",
      "desc": "Packed 16-bit format with normalized unsigned integer color components: 5 bits each for BGR and 1 for alpha, packed into 16 bits."
    },
    {
      "name": "case abgr4Unorm",
      "desc": "Packed 16-bit format with normalized unsigned integer color components: 4 bits each for ABGR, packed into 16 bits."
    },
    {
      "name": "case bgr5A1Unorm",
      "desc": "Packed 16-bit format with normalized unsigned integer color components: 5 bits each for BGR and 1 for alpha, packed into 16 bits."
    },
    {
      "name": "case r32Uint",
      "desc": "Ordinary format with one 32-bit unsigned integer component."
    },
    {
      "name": "case r32Sint",
      "desc": "Ordinary format with one 32-bit signed integer component."
    },
    {
      "name": "case r32Float",
      "desc": "Ordinary format with one 32-bit floating-point component."
    },
    {
      "name": "case rg16Unorm",
      "desc": "Ordinary format with two 16-bit normalized unsigned integer components."
    },
    {
      "name": "case rg16Snorm",
      "desc": "Ordinary format with two 16-bit normalized signed integer components."
    },
    {
      "name": "case rg16Uint",
      "desc": "Ordinary format with two 16-bit unsigned integer components."
    },
    {
      "name": "case rg16Sint",
      "desc": "Ordinary format with two 16-bit signed integer components."
    },
    {
      "name": "case rg16Float",
      "desc": "Ordinary format with two 16-bit floating-point components."
    },
    {
      "name": "case rgba8Unorm",
      "desc": "Ordinary format with four 8-bit normalized unsigned integer components in RGBA order."
    },
    {
      "name": "case rgba8Unorm_srgb",
      "desc": "Ordinary format with four 8-bit normalized unsigned integer components in RGBA order with conversion between sRGB and linear space."
    },
    {
      "name": "case rgba8Snorm",
      "desc": "Ordinary format with four 8-bit normalized signed integer components in RGBA order."
    },
    {
      "name": "case rgba8Uint",
      "desc": "Ordinary format with four 8-bit unsigned integer components in RGBA order."
    },
    {
      "name": "case rgba8Sint",
      "desc": "Ordinary format with four 8-bit signed integer components in RGBA order."
    },
    {
      "name": "case bgra8Unorm",
      "desc": "Ordinary format with four 8-bit normalized unsigned integer components in BGRA order."
    },
    {
      "name": "case bgra8Unorm_srgb",
      "desc": "Ordinary format with four 8-bit normalized unsigned integer components in BGRA order with conversion between sRGB and linear space."
    },
    {
      "name": "case bgr10a2Unorm",
      "desc": "A 32-bit packed pixel format with four normalized unsigned integer components: 10-bit blue, 10-bit green, 10-bit red, and 2-bit alpha."
    },
    {
      "name": "case rgb10a2Unorm",
      "desc": "A 32-bit packed pixel format with four normalized unsigned integer components: 10-bit red, 10-bit green, 10-bit blue, and 2-bit alpha."
    },
    {
      "name": "case rgb10a2Uint",
      "desc": "A 32-bit packed pixel format with four unsigned integer components: 10-bit red, 10-bit green, 10-bit blue, and 2-bit alpha."
    },
    {
      "name": "case rg11b10Float",
      "desc": "32-bit format with floating-point color components, 11 bits each for red and green and 10 bits for blue."
    },
    {
      "name": "case rgb9e5Float",
      "desc": "Packed 32-bit format with floating-point color components: 9 bits each for RGB and 5 bits for an exponent shared by RGB, packed into 32 bits."
    },
    {
      "name": "case rg32Uint",
      "desc": "Ordinary format with two 32-bit unsigned integer components."
    },
    {
      "name": "case rg32Sint",
      "desc": "Ordinary format with two 32-bit signed integer components."
    },
    {
      "name": "case rg32Float",
      "desc": "Ordinary format with two 32-bit floating-point components."
    },
    {
      "name": "case rgba16Unorm",
      "desc": "Ordinary format with four 16-bit normalized unsigned integer components in RGBA order."
    },
    {
      "name": "case rgba16Snorm",
      "desc": "Ordinary format with four 16-bit normalized signed integer components in RGBA order."
    },
    {
      "name": "case rgba16Uint",
      "desc": "Ordinary format with four 16-bit unsigned integer components in RGBA order."
    },
    {
      "name": "case rgba16Sint",
      "desc": "Ordinary format with four 16-bit signed integer components in RGBA order."
    },
    {
      "name": "case rgba16Float",
      "desc": "Ordinary format with four 16-bit floating-point components in RGBA order."
    },
    {
      "name": "case rgba32Uint",
      "desc": "Ordinary format with four 32-bit unsigned integer components in RGBA order."
    },
    {
      "name": "case rgba32Sint",
      "desc": "Ordinary format with four 32-bit signed integer components in RGBA order."
    },
    {
      "name": "case rgba32Float",
      "desc": "Ordinary format with four 32-bit floating-point components in RGBA order."
    },
    {
      "name": "case pvrtc_rgb_2bpp",
      "desc": "Compressed format using PVRTC compression and 2bpp for RGB components."
    },
    {
      "name": "case pvrtc_rgb_2bpp_srgb",
      "desc": "Compressed format using PVRTC compression and 2bpp for RGB components with conversion between sRGB and linear space."
    },
    {
      "name": "case pvrtc_rgb_4bpp",
      "desc": "Compressed format using PVRTC compression and 4bpp for RGB components."
    },
    {
      "name": "case pvrtc_rgb_4bpp_srgb",
      "desc": "Compressed format using PVRTC compression and 4bpp for RGB components with conversion between sRGB and linear space."
    },
    {
      "name": "case pvrtc_rgba_2bpp",
      "desc": "Compressed format using PVRTC compression and 2bpp for RGBA components."
    },
    {
      "name": "case pvrtc_rgba_2bpp_srgb",
      "desc": "Compressed format using PVRTC compression and 2bpp for RGBA components with conversion between sRGB and linear space."
    },
    {
      "name": "case pvrtc_rgba_4bpp",
      "desc": "Compressed format using PVRTC compression and 4bpp for RGBA components."
    },
    {
      "name": "case pvrtc_rgba_4bpp_srgb",
      "desc": "Compressed format using PVRTC compression and 4bpp for RGBA components with conversion between sRGB and linear space."
    },
    {
      "name": "case eac_r11Unorm",
      "desc": "Compressed format using EAC compression with one normalized unsigned integer component."
    },
    {
      "name": "case eac_r11Snorm",
      "desc": "Compressed format using EAC compression with one normalized signed integer component."
    },
    {
      "name": "case eac_rg11Unorm",
      "desc": "Compressed format using EAC compression with two normalized unsigned integer components."
    },
    {
      "name": "case eac_rg11Snorm",
      "desc": "Compressed format using EAC compression with two normalized signed integer components."
    },
    {
      "name": "case eac_rgba8",
      "desc": "Compressed format using EAC compression with four 8-bit components."
    },
    {
      "name": "case eac_rgba8_srgb",
      "desc": "Compressed format using EAC compression with four 8-bit components with conversion between sRGB and linear space."
    },
    {
      "name": "case etc2_rgb8",
      "desc": "Compressed format using ETC2 compression with three 8-bit components."
    },
    {
      "name": "case etc2_rgb8_srgb",
      "desc": "Compressed format using ETC2 compression with three 8-bit components with conversion between sRGB and linear space."
    },
    {
      "name": "case etc2_rgb8a1",
      "desc": "Compressed format using ETC2 compression with four 8-bit components."
    },
    {
      "name": "case etc2_rgb8a1_srgb",
      "desc": "Compressed format using ETC2 compression with four 8-bit components with conversion between sRGB and linear space."
    },
    {
      "name": "case astc_4x4_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 4, and a block height of 4."
    },
    {
      "name": "case astc_5x4_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 5, and a block height of 4."
    },
    {
      "name": "case astc_5x5_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 5, and a block height of 5."
    },
    {
      "name": "case astc_6x5_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 6, and a block height of 5."
    },
    {
      "name": "case astc_6x6_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 6, and a block height of 6."
    },
    {
      "name": "case astc_8x5_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 8, and a block height of 5."
    },
    {
      "name": "case astc_8x6_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 8, and a block height of 6."
    },
    {
      "name": "case astc_8x8_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 8, and a block height of 8."
    },
    {
      "name": "case astc_10x5_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 10, and a block height of 5."
    },
    {
      "name": "case astc_10x6_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 10, and a block height of 6."
    },
    {
      "name": "case astc_10x8_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 10, and a block height of 8."
    },
    {
      "name": "case astc_10x10_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 10, and a block height of 10."
    },
    {
      "name": "case astc_12x10_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 12, and a block height of 10."
    },
    {
      "name": "case astc_12x12_srgb",
      "desc": "ASTC-compressed format with low-dynamic-range content, conversion between sRGB and linear space, a block width of 12, and a block height of 12."
    },
    {
      "name": "case astc_4x4_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 4, and a block height of 4."
    },
    {
      "name": "case astc_5x4_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 5, and a block height of 4."
    },
    {
      "name": "case astc_5x5_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 5, and a block height of 5."
    },
    {
      "name": "case astc_6x5_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 6, and a block height of 5."
    },
    {
      "name": "case astc_6x6_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 6, and a block height of 6."
    },
    {
      "name": "case astc_8x5_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 8, and a block height of 5."
    },
    {
      "name": "case astc_8x6_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 8, and a block height of 6."
    },
    {
      "name": "case astc_8x8_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 8, and a block height of 8."
    },
    {
      "name": "case astc_10x5_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 10, and a block height of 5."
    },
    {
      "name": "case astc_10x6_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 10, and a block height of 6."
    },
    {
      "name": "case astc_10x8_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 10, and a block height of 8."
    },
    {
      "name": "case astc_10x10_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 10, and a block height of 10."
    },
    {
      "name": "case astc_12x10_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 12, and a block height of 10."
    },
    {
      "name": "case astc_12x12_ldr",
      "desc": "ASTC-compressed format with low-dynamic-range content, a block width of 12, and a block height of 12."
    },
    {
      "name": "case astc_4x4_hdr",
      "desc": "ASTC-compressed format with high-dynamic-range content, a block width of 4, and a block height of 4."
    },
    {
      "name": "case astc_5x4_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 5, and a block height of 4."
    },
    {
      "name": "case astc_5x5_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 5, and a block height of 6."
    },
    {
      "name": "case astc_6x5_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 6, and a block height of 5."
    },
    {
      "name": "case astc_6x6_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 6, and a block height of 6."
    },
    {
      "name": "case astc_8x5_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 8, and a block height of 5."
    },
    {
      "name": "case astc_8x6_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 8, and a block height of 6."
    },
    {
      "name": "case astc_8x8_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 8, and a block height of 8."
    },
    {
      "name": "case astc_10x5_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 10, and a block height of 5."
    },
    {
      "name": "case astc_10x6_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 10, and a block height of 6."
    },
    {
      "name": "case astc_10x8_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 10, and a block height of 8."
    },
    {
      "name": "case astc_10x10_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 10, and a block height of 10."
    },
    {
      "name": "case astc_12x10_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 12, and a block height of 10."
    },
    {
      "name": "case astc_12x12_hdr",
      "desc": "ASTC-compressed format with high-dynamic range content, a block width of 12, and a block height of 12."
    },
    {
      "name": "case bc1_rgba",
      "desc": "Compressed format with two 16-bit color components and one 32-bit descriptor component."
    },
    {
      "name": "case bc1_rgba_srgb",
      "desc": "Compressed format with two 16-bit color components and one 32-bit descriptor component, with conversion between sRGB and linear space."
    },
    {
      "name": "case bc2_rgba",
      "desc": "Compressed format with two 64-bit chunks. The first chunk contains two 8-bit alpha components and one 48-bit descriptor component. The second chunk contains two 16-bit color components and one 32-bit descriptor component."
    },
    {
      "name": "case bc2_rgba_srgb",
      "desc": "Compressed format with two 64-bit chunks, with conversion between sRGB and linear space. The first chunk contains two 8-bit alpha components and one 48-bit descriptor component. The second chunk contains two 16-bit color components and one 32-bit descriptor component."
    },
    {
      "name": "case bc3_rgba",
      "desc": "Compressed format with two 64-bit chunks. The first chunk contains two 8-bit alpha components and one 48-bit descriptor component. The second chunk contains two 16-bit color components and one 32-bit descriptor component."
    },
    {
      "name": "case bc3_rgba_srgb",
      "desc": "Compressed format with two 64-bit chunks, with conversion between sRGB and linear space. The first chunk contains two 8-bit alpha components and one 48-bit descriptor component. The second chunk contains two 16-bit color components and one 32-bit descriptor component."
    },
    {
      "name": "case bc4_rUnorm",
      "desc": "Compressed format with one normalized unsigned integer component."
    },
    {
      "name": "case bc4_rSnorm",
      "desc": "Compressed format with one normalized signed integer component."
    },
    {
      "name": "case bc5_rgUnorm",
      "desc": "Compressed format with two normalized unsigned integer components."
    },
    {
      "name": "case bc5_rgSnorm",
      "desc": "Compressed format with two normalized signed integer components."
    },
    {
      "name": "case bc6H_rgbFloat",
      "desc": "Compressed format with four floating-point components."
    },
    {
      "name": "case bc6H_rgbuFloat",
      "desc": "Compressed format with four unsigned floating-point components."
    },
    {
      "name": "case bc7_rgbaUnorm",
      "desc": "Compressed format with four normalized unsigned integer components."
    },
    {
      "name": "case bc7_rgbaUnorm_srgb",
      "desc": "Compressed format with four normalized unsigned integer components, with conversion between sRGB and linear space."
    },
    {
      "name": "case gbgr422",
      "desc": "A pixel format where the red and green components are subsampled horizontally."
    },
    {
      "name": "case bgrg422",
      "desc": "A pixel format where the red and green components are subsampled horizontally."
    },
    {
      "name": "case depth16Unorm",
      "desc": "A pixel format with a 16-bit normalized unsigned integer component, used for a depth render target."
    },
    {
      "name": "case depth32Float",
      "desc": "A pixel format with one 32-bit floating-point component, used for a depth render target."
    },
    {
      "name": "case stencil8",
      "desc": "A pixel format with an 8-bit unsigned integer component, used for a stencil render target."
    },
    {
      "name": "case depth24Unorm_stencil8",
      "desc": "A 32-bit combined depth and stencil pixel format with a 24-bit normalized unsigned integer for depth and an 8-bit unsigned integer for stencil."
    },
    {
      "name": "case depth32Float_stencil8",
      "desc": "A 40-bit combined depth and stencil pixel format with a 32-bit floating-point value for depth and an 8-bit unsigned integer for stencil."
    },
    {
      "name": "case x32_stencil8",
      "desc": "A stencil pixel format used to read the stencil value from a texture with a combined 32-bit depth and 8-bit stencil value."
    },
    {
      "name": "case x24_stencil8",
      "desc": "A stencil pixel format used to read the stencil value from a texture with a combined 24-bit depth and 8-bit stencil value."
    },
    {
      "name": "case bgra10_xr",
      "desc": "A 64-bit extended range pixel format with four fixed-point components: 10-bit blue, 10-bit green, 10-bit red, and 10-bit alpha."
    },
    {
      "name": "case bgra10_xr_srgb",
      "desc": "A 64-bit extended range pixel format with sRGB conversion and four fixed-point components: 10-bit blue, 10-bit green, 10-bit red, and 10-bit alpha."
    },
    {
      "name": "case bgr10_xr",
      "desc": "A 32-bit extended range pixel format with three fixed-point components: 10-bit blue, 10-bit green, and 10-bit red."
    },
    {
      "name": "case bgr10_xr_srgb",
      "desc": "A 32-bit extended range pixel format with sRGB conversion and three fixed-point components: 10-bit blue, 10-bit green, and 10-bit red."
    },
    {
      "name": "case invalid",
      "desc": "The default value of the pixel format for the MTLRenderPipelineState. You cannot create a texture with this value."
    }
  ],
  "declaration": "enum MTLPixelFormat : UInt, @unchecked Sendable",
  "conformsTo": [
    "Sendable"
  ]
}