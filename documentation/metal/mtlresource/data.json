{
  "path": "/documentation/metal/mtlresource",
  "type": "Protocol",
  "name": "MTLResource",
  "desc": "An allocation of memory that is accessible to a GPU.",
  "items": [
    {
      "name": "var device: MTLDevice",
      "desc": "The device object that created the resource."
    },
    {
      "name": "var label: String?",
      "desc": "A string that identifies the resource."
    },
    {
      "name": "var cpuCacheMode: MTLCPUCacheMode",
      "desc": "The CPU cache mode that defines the CPU mapping of the resource."
    },
    {
      "name": "var storageMode: MTLStorageMode",
      "desc": "The location and access permissions of the resource."
    },
    {
      "name": "var hazardTrackingMode: MTLHazardTrackingMode",
      "desc": "A mode that determines whether Metal tracks and synchronizes resource access."
    },
    {
      "name": "var resourceOptions: MTLResourceOptions",
      "desc": "The storage mode, CPU cache mode, and hazard tracking mode of the resource."
    },
    {
      "name": "enum MTLCPUCacheMode",
      "desc": "Options for the CPU cache mode that define the CPU mapping of the resource."
    },
    {
      "name": "enum MTLStorageMode",
      "desc": "Options for the memory location and access permissions for a resource."
    },
    {
      "name": "enum MTLHazardTrackingMode",
      "desc": "The options you use to specify the hazard tracking mode."
    },
    {
      "name": "func setPurgeableState(MTLPurgeableState) -> MTLPurgeableState",
      "desc": "Specifies or queries the resource’s purgeable state."
    },
    {
      "name": "enum MTLPurgeableState",
      "desc": "The purgeable state of the resource."
    },
    {
      "name": "var heapOffset: Int",
      "desc": "The distance, in bytes, from the beginning of the heap to the first byte of the resource, if you allocated the resource on a heap."
    },
    {
      "name": "var heap: MTLHeap?",
      "desc": "The heap on which the resource is allocated, if any."
    },
    {
      "name": "func makeAliasable()",
      "desc": "Allows future heap resource allocations to alias against the resource’s memory."
    },
    {
      "name": "func isAliasable() -> Bool",
      "desc": "A Boolean value that indicates whether future heap resource allocations may alias against the resource’s memory."
    },
    {
      "name": "var allocatedSize: Int",
      "desc": "The size of the resource, in bytes."
    }
  ],
  "declaration": "protocol MTLResource",
  "inheritsFrom": [
    "NSObjectProtocol"
  ]
}