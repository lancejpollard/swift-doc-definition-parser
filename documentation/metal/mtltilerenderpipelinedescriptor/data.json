{
  "path": "/documentation/metal/mtltilerenderpipelinedescriptor",
  "type": "Class",
  "name": "MTLTileRenderPipelineDescriptor",
  "desc": "An object that configures new render pipeline state objects for tile shading.",
  "items": [
    {
      "name": "var label: String?",
      "desc": "A string that identifies the tile pipeline descriptor."
    },
    {
      "name": "var tileFunction: MTLFunction",
      "desc": "The compute kernel or fragment function the pipeline calls."
    },
    {
      "name": "var tileBuffers: MTLPipelineBufferDescriptorArray",
      "desc": "An array that contains the buffer mutability options for a render pipelineâ€™s tile function."
    },
    {
      "name": "var maxCallStackDepth: Int",
      "desc": "The maximum function call depth from the top-most shader function."
    },
    {
      "name": "var threadgroupSizeMatchesTileSize: Bool",
      "desc": "A Boolean value that indicates whether all threadgroups for this pipeline completely cover tiles."
    },
    {
      "name": "var rasterSampleCount: Int",
      "desc": "The number of samples in each fragment."
    },
    {
      "name": "func reset()",
      "desc": "Specifies the default rendering pipeline state values for the descriptor."
    },
    {
      "name": "var colorAttachments: MTLTileRenderPipelineColorAttachmentDescriptorArray",
      "desc": "An array of attachments that store color data."
    },
    {
      "name": "var maxTotalThreadsPerThreadgroup: Int",
      "desc": "The maximum number of threads in a threadgroup when dispatching a command using the pipeline."
    },
    {
      "name": "var supportAddingBinaryFunctions: Bool",
      "desc": "A Boolean value that indicates whether you can use the pipeline to create new pipelines by adding binary functions to its callable functions list."
    },
    {
      "name": "var binaryArchives: [MTLBinaryArchive]?",
      "desc": "An array of binary archives to search for precompiled versions of the shader."
    },
    {
      "name": "var linkedFunctions: MTLLinkedFunctions!",
      "desc": "Functions that you can specify as function arguments for the tile shader when encoding commands that use the pipeline."
    },
    {
      "name": "var preloadedLibraries: [MTLDynamicLibrary]"
    }
  ],
  "declaration": "class MTLTileRenderPipelineDescriptor : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying"
  ]
}