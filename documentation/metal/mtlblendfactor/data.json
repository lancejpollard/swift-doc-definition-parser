{
  "path": "/documentation/metal/mtlblendfactor",
  "type": "Enumeration",
  "name": "MTLBlendFactor",
  "desc": "The source and destination blend factors are often needed to complete specification of a blend operation. In most cases, the blend factor for both RGB values (F(rgb)) and alpha values (F(a)) are similar to one another, but in some cases, such as MTLBlendFactorSourceAlphaSaturated, the blend factor is slightly different. Four blend factors (MTLBlendFactorBlendColor, MTLBlendFactorOneMinusBlendColor, MTLBlendFactorBlendAlpha, and MTLBlendFactorOneMinusBlendAlpha) refer to a constant blend color value that is set by the setBlendColor(red:green:blue:alpha:) method of MTLRenderCommandEncoder.",
  "items": [
    {
      "name": "case zero",
      "desc": "Blend factor of zero."
    },
    {
      "name": "case one",
      "desc": "Blend factor of one."
    },
    {
      "name": "case sourceColor",
      "desc": "Blend factor of source values."
    },
    {
      "name": "case oneMinusSourceColor",
      "desc": "Blend factor of one minus source values."
    },
    {
      "name": "case sourceAlpha",
      "desc": "Blend factor of source alpha."
    },
    {
      "name": "case oneMinusSourceAlpha",
      "desc": "Blend factor of one minus source alpha."
    },
    {
      "name": "case destinationColor",
      "desc": "Blend factor of destination values."
    },
    {
      "name": "case oneMinusDestinationColor",
      "desc": "Blend factor of one minus destination values."
    },
    {
      "name": "case destinationAlpha",
      "desc": "Blend factor of destination alpha."
    },
    {
      "name": "case oneMinusDestinationAlpha",
      "desc": "Blend factor of one minus destination alpha."
    },
    {
      "name": "case sourceAlphaSaturated",
      "desc": "Blend factor of the minimum of either source alpha or one minus destination alpha."
    },
    {
      "name": "case blendColor",
      "desc": "Blend factor of RGB values."
    },
    {
      "name": "case oneMinusBlendColor",
      "desc": "Blend factor of one minus RGB values."
    },
    {
      "name": "case blendAlpha",
      "desc": "Blend factor of alpha value."
    },
    {
      "name": "case oneMinusBlendAlpha",
      "desc": "Blend factor of one minus alpha value."
    },
    {
      "name": "case source1Color",
      "desc": "Blend factor of source values. This option supports dual-source blending and reads from the second color output of the fragment function."
    },
    {
      "name": "case oneMinusSource1Color",
      "desc": "Blend factor of one minus source values. This option supports dual-source blending and reads from the second color output of the fragment function."
    },
    {
      "name": "case source1Alpha",
      "desc": "Blend factor of source alpha. This option supports dual-source blending and reads from the second color output of the fragment function."
    },
    {
      "name": "case oneMinusSource1Alpha",
      "desc": "Blend factor of one minus source alpha. This option supports dual-source blending and reads from the second color output of the fragment function."
    }
  ],
  "declaration": "enum MTLBlendFactor : UInt, @unchecked Sendable",
  "conformsTo": [
    "Sendable"
  ]
}