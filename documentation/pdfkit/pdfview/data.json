{
  "path": "/documentation/pdfkit/pdfview",
  "type": "Class",
  "name": "PDFView",
  "desc": "An object that encapsulates the functionality of PDF Kit into a single widget that you can add to your application using Interface Builder.",
  "items": [
    {
      "name": "var document: PDFDocument?",
      "desc": "Returns the document associated with a PDFView object."
    },
    {
      "name": "var currentPage: PDFPage?",
      "desc": "Returns the current page."
    },
    {
      "name": "var currentDestination: PDFDestination?",
      "desc": "Returns a PDFDestination object representing the current page and the current point in the view specified in page space."
    },
    {
      "name": "var visiblePages: [PDFPage]",
      "desc": "Returns an array of PDFPage objects that represent the currently visible pages."
    },
    {
      "name": "var delegate: PDFViewDelegate?",
      "desc": "Returns the viewâ€™s delegate."
    },
    {
      "name": "protocol PDFViewDelegate",
      "desc": "The delegate for the PDFView object."
    },
    {
      "name": "static let PDFViewChangedHistory: NSNotification.Name",
      "desc": "A notification posted when the page history changes."
    },
    {
      "name": "static let PDFViewDocumentChanged: NSNotification.Name",
      "desc": "A notification posted when a new document is associated with the view."
    },
    {
      "name": "static let PDFViewPageChanged: NSNotification.Name",
      "desc": "A notification posted when a new page becomes the current page."
    },
    {
      "name": "static let PDFViewScaleChanged: NSNotification.Name",
      "desc": "A notification posted when the scale factor changes."
    },
    {
      "name": "static let PDFViewAnnotationHit: NSNotification.Name",
      "desc": "A notification posted when the user clicks on an annotation."
    },
    {
      "name": "static let PDFViewCopyPermission: NSNotification.Name",
      "desc": "A notification posted when the user attempts to copy to the pasteboard without the appropriate permissions."
    },
    {
      "name": "static let PDFViewPrintPermission: NSNotification.Name",
      "desc": "A notification posted when the user attempts to print without the appropriate permissions."
    },
    {
      "name": "static let PDFViewAnnotationWillHit: NSNotification.Name",
      "desc": "A notification posted before the user clicks an annotation."
    },
    {
      "name": "static let PDFViewSelectionChanged: NSNotification.Name",
      "desc": "A notification posted when the current selection has changed."
    },
    {
      "name": "static let PDFViewDisplayModeChanged: NSNotification.Name",
      "desc": "A notification posted when the display mode has changed."
    },
    {
      "name": "static let PDFViewDisplayBoxChanged: NSNotification.Name",
      "desc": "A notification posted when the display box has changed."
    },
    {
      "name": "static let PDFViewVisiblePagesChanged: NSNotification.Name",
      "desc": "A notification posted when the visible pages have changed."
    },
    {
      "name": "var pageShadowsEnabled: Bool"
    }
  ],
  "declaration": "class PDFView : UIView",
  "inheritsFrom": [
    "NSView",
    "UIView"
  ],
  "conformsTo": [
    "NSAnimationDelegate",
    "NSMenuDelegate",
    "UIGestureRecognizerDelegate"
  ]
}