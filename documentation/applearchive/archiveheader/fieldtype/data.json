{
  "path": "/documentation/applearchive/archiveheader/fieldtype",
  "type": "Structure",
  "name": "ArchiveHeader.FieldType",
  "desc": "Constants that specify the field type of an archive header.",
  "items": [
    {
      "name": "static let blob: ArchiveHeader.FieldType",
      "desc": "A constant that indicates the field is a data blob."
    },
    {
      "name": "static let flag: ArchiveHeader.FieldType",
      "desc": "A constant that indicates the field is a flag."
    },
    {
      "name": "static let hash: ArchiveHeader.FieldType",
      "desc": "A constant that indicates the field is a hash."
    },
    {
      "name": "static let string: ArchiveHeader.FieldType",
      "desc": "A constant that indicates the field is a string."
    },
    {
      "name": "static let timespec: ArchiveHeader.FieldType",
      "desc": "A constant that indicates the field is a time value."
    },
    {
      "name": "static let uint: ArchiveHeader.FieldType",
      "desc": "A constant that indicates the field is an unsigned integer."
    },
    {
      "name": "init(rawValue: UInt32)"
    },
    {
      "name": "var rawValue: UInt32"
    },
    {
      "name": "typealias ArchiveHeader.FieldType.RawValue"
    },
    {
      "name": "var description: String",
      "desc": "A textual representation of this instance."
    },
    {
      "name": "static func != (ArchiveHeader.FieldType, ArchiveHeader.FieldType) -> Bool",
      "desc": "Returns a Boolean value indicating whether two field types are not equal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    }
  ],
  "declaration": "struct FieldType",
  "conformsTo": [
    "CustomStringConvertible",
    "Equatable",
    "Hashable",
    "RawRepresentable"
  ]
}