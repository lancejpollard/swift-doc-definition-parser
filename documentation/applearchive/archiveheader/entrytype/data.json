{
  "path": "/documentation/applearchive/archiveheader/entrytype",
  "type": "Structure",
  "name": "ArchiveHeader.EntryType",
  "desc": "Constants that specify the filesystem entry types.",
  "items": [
    {
      "name": "static let blockSpecial: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is a block device."
    },
    {
      "name": "static let characterSpecial: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is a character device."
    },
    {
      "name": "static let directory: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is a directory."
    },
    {
      "name": "static let door: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is a door."
    },
    {
      "name": "static let fifo: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is a FIFO special file."
    },
    {
      "name": "static let link: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is a symbolic link."
    },
    {
      "name": "static let metadata: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is metadata."
    },
    {
      "name": "static let port: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is a port."
    },
    {
      "name": "static let regularFile: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is a regular file."
    },
    {
      "name": "static let socket: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is a socket."
    },
    {
      "name": "static let whiteout: ArchiveHeader.EntryType",
      "desc": "A constant that indicates the entry is a whiteout."
    },
    {
      "name": "var description: String",
      "desc": "A textual representation of this instance."
    },
    {
      "name": "init(rawValue: UInt32)"
    },
    {
      "name": "var rawValue: UInt32"
    },
    {
      "name": "typealias ArchiveHeader.EntryType.RawValue"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func != (ArchiveHeader.EntryType, ArchiveHeader.EntryType) -> Bool"
    }
  ],
  "declaration": "struct EntryType",
  "conformsTo": [
    "CustomStringConvertible",
    "Equatable",
    "Hashable",
    "RawRepresentable"
  ]
}