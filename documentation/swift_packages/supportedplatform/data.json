{
  "path": "/documentation/swift_packages/supportedplatform",
  "type": "Structure",
  "name": "SupportedPlatform",
  "desc": "A platform that the Swift package supports.",
  "items": [
    {
      "name": "static func iOS(SupportedPlatform.IOSVersion) -> SupportedPlatform",
      "desc": "Configures the minimum deployment target version for the iOS platform."
    },
    {
      "name": "static func iOS(String) -> SupportedPlatform",
      "desc": "Configures the minimum deployment target version for the iOS platform using a custom version string."
    },
    {
      "name": "static let iOS: Platform",
      "desc": "The iOS platform."
    },
    {
      "name": "struct SupportedPlatform.IOSVersion",
      "desc": "The supported iOS version."
    },
    {
      "name": "static func macOS(SupportedPlatform.MacOSVersion) -> SupportedPlatform",
      "desc": "Configure the minimum deployment target version for the macOS platform."
    },
    {
      "name": "static func macOS(String) -> SupportedPlatform",
      "desc": "Configures the minimum deployment target version for the macOS platform using a version string."
    },
    {
      "name": "static let macOS: Platform",
      "desc": "The macOS platform."
    },
    {
      "name": "struct SupportedPlatform.MacOSVersion",
      "desc": "The supported macOS version."
    },
    {
      "name": "static func watchOS(SupportedPlatform.WatchOSVersion) -> SupportedPlatform",
      "desc": "Configures the minimum deployment target version for the watchOS platform."
    },
    {
      "name": "static func watchOS(String) -> SupportedPlatform",
      "desc": "Configures the minimum deployment target version for the watchOS platform using a custom version string."
    },
    {
      "name": "static let watchOS: Platform",
      "desc": "The watchOS platform."
    },
    {
      "name": "struct SupportedPlatform.WatchOSVersion",
      "desc": "The supported watchOS version."
    },
    {
      "name": "static func tvOS(SupportedPlatform.TVOSVersion) -> SupportedPlatform",
      "desc": "Configures the minimum deployment target version for the tvOS platform."
    },
    {
      "name": "static func tvOS(String) -> SupportedPlatform",
      "desc": "Configures the minimum deployment target version for the tvOS platform using a custom version string."
    },
    {
      "name": "static let tvOS: Platform",
      "desc": "The tvOS platform."
    },
    {
      "name": "struct SupportedPlatform.TVOSVersion",
      "desc": "The supported tvOS version."
    },
    {
      "name": "static let linux: Platform",
      "desc": "The Linux platform."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes this value into the given encoder."
    },
    {
      "name": "static func custom(String, versionString: String) -> SupportedPlatform"
    },
    {
      "name": "static func driverKit(SupportedPlatform.DriverKitVersion) -> SupportedPlatform"
    },
    {
      "name": "static func driverKit(String) -> SupportedPlatform"
    },
    {
      "name": "static func macCatalyst(SupportedPlatform.MacCatalystVersion) -> SupportedPlatform"
    },
    {
      "name": "static func macCatalyst(String) -> SupportedPlatform"
    },
    {
      "name": "static func != (SupportedPlatform, SupportedPlatform) -> Bool"
    },
    {
      "name": "static func == (SupportedPlatform, SupportedPlatform) -> Bool"
    },
    {
      "name": "struct SupportedPlatform.DriverKitVersion"
    },
    {
      "name": "struct SupportedPlatform.MacCatalystVersion"
    }
  ],
  "declaration": "struct SupportedPlatform",
  "conformsTo": [
    "Encodable",
    "Equatable"
  ]
}