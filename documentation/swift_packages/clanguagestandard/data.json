{
  "path": "/documentation/swift_packages/clanguagestandard",
  "type": "Enumeration",
  "name": "CLanguageStandard",
  "desc": "The supported C language standard to use for compiling C sources in the package.",
  "items": [
    {
      "name": "case c89",
      "desc": "The identifier for the C89 language standard."
    },
    {
      "name": "case c90",
      "desc": "The identifier for the C90 language standard."
    },
    {
      "name": "case c99",
      "desc": "The identifier for the C99 language standard."
    },
    {
      "name": "case c11",
      "desc": "The identifier for the C11 language standard."
    },
    {
      "name": "case gnu11",
      "desc": "The identifier for the GNU11 language standard."
    },
    {
      "name": "case gnu89",
      "desc": "The identifier for the GNU89 language standard."
    },
    {
      "name": "case gnu90",
      "desc": "The identifier for the GNU90 language standard."
    },
    {
      "name": "case gnu99",
      "desc": "The identifier for the GNU99 language standard."
    },
    {
      "name": "case iso9899_1990",
      "desc": "The identifier for the ISO9899-1990 language standard."
    },
    {
      "name": "case iso9899_199409",
      "desc": "The identifier for the ISO9899-199409 language standard."
    },
    {
      "name": "case iso9899_1999",
      "desc": "The identifier for the ISO9899-1999 language standard."
    },
    {
      "name": "case iso9899_2011",
      "desc": "The identifier for the ISO9899-2011 language standard."
    },
    {
      "name": "case c17"
    },
    {
      "name": "case c18"
    },
    {
      "name": "case c2x"
    },
    {
      "name": "case gnu17"
    },
    {
      "name": "case gnu18"
    },
    {
      "name": "case gnu2x"
    },
    {
      "name": "case iso9899_2017"
    },
    {
      "name": "case iso9899_2018"
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes this value into the given encoder, when the typeâ€™s RawValue is String."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the C language standard by feeding the item into the given hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value for the C language standard."
    },
    {
      "name": "static func != (CLanguageStandard, CLanguageStandard) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "init?(rawValue: String)",
      "desc": "Creates a new instance with the specified raw value."
    },
    {
      "name": "var rawValue: String",
      "desc": "The corresponding value of the raw type."
    },
    {
      "name": "typealias CLanguageStandard.RawValue",
      "desc": "The raw type that can be used to represent all values of the conforming type."
    }
  ],
  "declaration": "enum CLanguageStandard : String, Encodable",
  "conformsTo": [
    "Encodable"
  ]
}