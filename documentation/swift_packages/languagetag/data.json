{
  "path": "/documentation/swift_packages/languagetag",
  "type": "Structure",
  "name": "LanguageTag",
  "desc": "A wrapper around an IETF language tag.",
  "items": [
    {
      "name": "init(String)",
      "desc": "Creates a language tag from its IETF string representation."
    },
    {
      "name": "init(extendedGraphemeClusterLiteral: String)",
      "desc": "Creates an instance initialized to the given value."
    },
    {
      "name": "init(stringLiteral: String)",
      "desc": "Creates an instance initialized to the given value."
    },
    {
      "name": "init(unicodeScalarLiteral: String)",
      "desc": "Creates an instance initialized to the given value."
    },
    {
      "name": "init?(rawValue: String)",
      "desc": "Creates a new instance with the specified raw value."
    },
    {
      "name": "var rawValue: String",
      "desc": "The corresponding value of the raw type."
    },
    {
      "name": "let tag: String",
      "desc": "An IETF language tag."
    },
    {
      "name": "var description: String",
      "desc": "A textual representation of the language tag."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the language tag by feeding the item into the given hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value for language tag."
    },
    {
      "name": "static func != (LanguageTag, LanguageTag) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "typealias LanguageTag.ExtendedGraphemeClusterLiteralType",
      "desc": "A type that represents an extended grapheme cluster literal."
    },
    {
      "name": "typealias LanguageTag.RawValue",
      "desc": "The raw type that can be used to represent all values of the conforming type."
    },
    {
      "name": "typealias LanguageTag.StringLiteralType",
      "desc": "A type that represents a string literal."
    },
    {
      "name": "typealias LanguageTag.UnicodeScalarLiteralType",
      "desc": "A type that represents a Unicode scalar literal."
    }
  ],
  "declaration": "struct LanguageTag",
  "conformsTo": [
    "CustomStringConvertible",
    "ExpressibleByStringLiteral",
    "Hashable",
    "RawRepresentable"
  ]
}