{
  "path": "/documentation/usernotifications/unerror",
  "type": "Structure",
  "name": "UNError",
  "desc": "Error constants for notifications.",
  "items": [
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "static var notificationsNotAllowed: UNError.Code",
      "desc": "Notifications are not allowed."
    },
    {
      "name": "static var attachmentInvalidURL: UNError.Code",
      "desc": "The URL for an attachment was invalid."
    },
    {
      "name": "static var attachmentUnrecognizedType: UNError.Code",
      "desc": "The file type of an attachment is not supported."
    },
    {
      "name": "static var attachmentInvalidFileSize: UNError.Code",
      "desc": "An attachment is too large."
    },
    {
      "name": "static var attachmentNotInDataStore: UNError.Code",
      "desc": "The specified attachment is not in the system data store."
    },
    {
      "name": "static var attachmentMoveIntoDataStoreFailed: UNError.Code",
      "desc": "An error occurred when trying to move an attachment to the system data store."
    },
    {
      "name": "static var attachmentCorrupt: UNError.Code",
      "desc": "The file for an attachment is corrupt."
    },
    {
      "name": "static var notificationInvalidNoDate: UNError.Code",
      "desc": "The notification does not have an associated date, but should."
    },
    {
      "name": "static var notificationInvalidNoContent: UNError.Code",
      "desc": "The notification has no user-facing content, but should."
    },
    {
      "name": "static var contentProvidingInvalid: UNError.Code"
    },
    {
      "name": "static var contentProvidingObjectNotAllowed: UNError.Code"
    },
    {
      "name": "var errorCode: Int",
      "desc": "The error code for the user notification error."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "A dictionary that contains additional information related to the error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A string that contains the localized description of the error."
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "static var errorDomain: String",
      "desc": "A static string that represents the user notification error domain."
    },
    {
      "name": "let UNErrorDomain: String",
      "desc": "The error domain for notifications."
    },
    {
      "name": "enum UNError.Code",
      "desc": "Error constants for notifications."
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func != (UNError, UNError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "static func == (UNError, UNError) -> Bool"
    }
  ],
  "declaration": "struct UNError"
}