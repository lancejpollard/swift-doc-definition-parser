{
  "path": "/documentation/quartz/ikcameradeviceview",
  "type": "Class",
  "name": "IKCameraDeviceView",
  "desc": "The IKCameraDeviceView class displays the contents of the selected camera.",
  "items": [
    {
      "name": "var cameraDevice: ICCameraDevice!",
      "desc": "The current camera device."
    },
    {
      "name": "var iconSize: Int",
      "desc": "Specifies the icon size."
    },
    {
      "name": "var mode: IKCameraDeviceViewDisplayMode",
      "desc": "Specifies the display mode of the camera device view."
    },
    {
      "name": "var hasDisplayModeIcon: Bool",
      "desc": "Returns whether the device view is being displayed in icon mode."
    },
    {
      "name": "var hasDisplayModeTable: Bool",
      "desc": "Returns whether the device view is being displayed in table mode."
    },
    {
      "name": "var transferMode: IKCameraDeviceViewTransferMode",
      "desc": "Determines how the contents are saved by the delegate."
    },
    {
      "name": "var canDownloadSelectedItems: Bool",
      "desc": "Returns whether the selected items can be downloaded"
    },
    {
      "name": "var downloadsDirectory: URL!",
      "desc": "Specifies the directory where files are downloaded"
    },
    {
      "name": "func downloadSelectedItems(Any!)",
      "desc": "Deletes the selected items from the camera."
    },
    {
      "name": "func downloadAllItems(Any!)",
      "desc": "Downloads all the items."
    },
    {
      "name": "var downloadSelectedControlLabel: String!",
      "desc": "Allows the “Download Selected” control to be renamed."
    },
    {
      "name": "var downloadAllControlLabel: String!",
      "desc": "Allows the “Download All” control to be renamed."
    },
    {
      "name": "var displaysDownloadsDirectoryControl: Bool",
      "desc": "Specifies whether the downloads directory control should be displayed."
    },
    {
      "name": "var displaysPostProcessApplicationControl: Bool",
      "desc": "Displays whether the post process application control should be displayed."
    },
    {
      "name": "var postProcessApplication: URL!",
      "desc": "The URL of the application used to post process the image."
    },
    {
      "name": "var canDeleteSelectedItems: Bool",
      "desc": "Returns whether the selected items can be deleted."
    },
    {
      "name": "func deleteSelectedItems(Any!)",
      "desc": "Deletes the currently selected items."
    },
    {
      "name": "func select(IndexSet!, byExtendingSelection: Bool)",
      "desc": "Invoked to select the specified files, extending the selection if specified."
    },
    {
      "name": "func selectedIndexes() -> IndexSet!",
      "desc": "The selected indexes of the camera files."
    },
    {
      "name": "var delegate: IKCameraDeviceViewDelegate!",
      "desc": "The camera device view delegate."
    },
    {
      "name": "var canRotateSelectedItemsLeft: Bool",
      "desc": "Returns whether the selected items can be rotated left."
    },
    {
      "name": "var canRotateSelectedItemsRight: Bool",
      "desc": "Returns whether the selected items can be rotated right."
    },
    {
      "name": "func rotateLeft(Any!)",
      "desc": "Rotates the selected image to the left."
    },
    {
      "name": "func rotateRight(Any!)",
      "desc": "Rotates the selected image to the right."
    },
    {
      "name": "enum IKCameraDeviceViewDisplayMode",
      "desc": "These constants specify the display mode used by the camera view. These constants are used by mode."
    },
    {
      "name": "enum IKCameraDeviceViewTransferMode",
      "desc": "These constants specify the transfer mode used by the camera view. These constants are used by mode."
    },
    {
      "name": "func setCustomActionControl(NSSegmentedControl!)"
    },
    {
      "name": "func setCustomDelete(NSSegmentedControl!)"
    },
    {
      "name": "func setCustomIconSizeSlider(NSSlider!)"
    },
    {
      "name": "func setCustomModeControl(NSSegmentedControl!)"
    },
    {
      "name": "func setCustomRotateControl(NSSegmentedControl!)"
    },
    {
      "name": "func setShowStatusInfoAsWindowSubtitle(Bool)"
    }
  ],
  "declaration": "class IKCameraDeviceView : NSView",
  "inheritsFrom": [
    "NSView"
  ]
}