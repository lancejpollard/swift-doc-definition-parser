{
  "path": "/documentation/healthkit/hkfhirresourcetype",
  "type": "Structure",
  "name": "HKFHIRResourceType",
  "desc": "The FHIR resource types supported in HealthKit.",
  "items": [
    {
      "name": "static let allergyIntolerance: HKFHIRResourceType",
      "desc": "A type that identifies FHIR resources for allergies and intolerances."
    },
    {
      "name": "static let condition: HKFHIRResourceType",
      "desc": "A type that identifies FHIR resources for a condition, problem, diagnosis, or other event."
    },
    {
      "name": "static let immunization: HKFHIRResourceType",
      "desc": "A type that identifies FHIR resources for the administration of vaccines."
    },
    {
      "name": "static let medicationOrder: HKFHIRResourceType",
      "desc": "A type that identifies FHIR resources for prescriptions or other orders for medication."
    },
    {
      "name": "static let medicationDispense: HKFHIRResourceType",
      "desc": "A type that identifies FHIR resources for the delivery of medication (usually in response to a prescription)."
    },
    {
      "name": "static let medicationStatement: HKFHIRResourceType",
      "desc": "A type that identifies FHIR resources for statements about medication taken by the patient."
    },
    {
      "name": "static let medicationRequest: HKFHIRResourceType",
      "desc": "A type that identifies FHIR resources for prescriptions or other orders or requests for medication."
    },
    {
      "name": "static let observation: HKFHIRResourceType",
      "desc": "A type that identifies FHIR resources for medical observations, including lab results and vital signs."
    },
    {
      "name": "static let procedure: HKFHIRResourceType",
      "desc": "A type that identifies FHIR resources for procedures performed on the patient."
    },
    {
      "name": "static let coverage: HKFHIRResourceType",
      "desc": "A type that identifies FHIR resources containing information about the userâ€™s insurance coverage."
    },
    {
      "name": "init(rawValue: String)",
      "desc": "Returns a new resource type for the provided string."
    }
  ],
  "declaration": "struct HKFHIRResourceType, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}