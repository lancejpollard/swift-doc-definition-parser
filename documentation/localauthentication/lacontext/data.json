{
  "path": "/documentation/localauthentication/lacontext",
  "type": "Class",
  "name": "LAContext",
  "desc": "A mechanism for evaluating authentication policies and access controls.",
  "items": [
    {
      "name": "func canEvaluatePolicy(LAPolicy, error: NSErrorPointer) -> Bool",
      "desc": "Assesses whether authentication can proceed for a given policy."
    },
    {
      "name": "enum LAPolicy",
      "desc": "The set of available local authentication policies."
    },
    {
      "name": "var biometryType: LABiometryType",
      "desc": "The type of biometric authentication supported by the device."
    },
    {
      "name": "enum LABiometryType",
      "desc": "The set of available biometric authentication types."
    },
    {
      "name": "func evaluatePolicy(LAPolicy, localizedReason: String, reply: (Bool, Error?) -> Void)",
      "desc": "Evaluates the specified policy."
    },
    {
      "name": "var evaluatedPolicyDomainState: Data?",
      "desc": "The current state of the evaluated policy domain."
    },
    {
      "name": "func evaluateAccessControl(SecAccessControl, operation: LAAccessControlOperation, localizedReason: String, reply: (Bool, Error?) -> Void)",
      "desc": "Evaluates an access control for a given operation."
    },
    {
      "name": "enum LAAccessControlOperation",
      "desc": "Operations to be evaluated for access control."
    },
    {
      "name": "var interactionNotAllowed: Bool",
      "desc": "A Boolean value indicating whether authentication can be interactive."
    },
    {
      "name": "var localizedReason: String",
      "desc": "The localized explanation for authentication shown in the dialog presented to the user."
    },
    {
      "name": "var localizedFallbackTitle: String?",
      "desc": "The localized title for the fallback button in the dialog presented to the user during authentication."
    },
    {
      "name": "var localizedCancelTitle: String?",
      "desc": "The localized title for the cancel button in the dialog presented to the user during authentication."
    },
    {
      "name": "var touchIDAuthenticationAllowableReuseDuration: TimeInterval",
      "desc": "The duration for which Touch ID authentication reuse is allowable."
    },
    {
      "name": "let LATouchIDAuthenticationMaximumAllowableReuseDuration: TimeInterval",
      "desc": "The maximum allowable reuse duration."
    },
    {
      "name": "func setCredential(Data?, type: LACredentialType) -> Bool",
      "desc": "Sets an application-provided credential to be used when evaluating authentication."
    },
    {
      "name": "func isCredentialSet(LACredentialType) -> Bool",
      "desc": "Returns a Boolean value indicating whether the specified credential type is set."
    },
    {
      "name": "enum LACredentialType",
      "desc": "The types of credentials to be used for authentication."
    },
    {
      "name": "func invalidate()",
      "desc": "Invalidates the authentication context."
    }
  ],
  "declaration": "class LAContext : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}