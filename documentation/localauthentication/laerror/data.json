{
  "path": "/documentation/localauthentication/laerror",
  "type": "Structure",
  "name": "LAError",
  "desc": "Errors issued by the LocalAuthentication framework.",
  "items": [
    {
      "name": "static var errorDomain: String",
      "desc": "The error domain that the framework uses when issuing errors."
    },
    {
      "name": "let LAErrorDomain: String",
      "desc": "The error domain that the framework uses when issuing errors."
    },
    {
      "name": "var errorCode: Int",
      "desc": "The error code the framework returns when policy evaluation fails."
    },
    {
      "name": "var code: Code",
      "desc": "The error code the framework returns when policy evaluation fails."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "A dictionary the framework uses to provide information about an error."
    },
    {
      "name": "var userInfo: [String : Any]",
      "desc": "A dictionary the framework uses to provide information about an error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A human readable, localized description of the error."
    },
    {
      "name": "static var appCancel: LAError.Code",
      "desc": "The app canceled authentication."
    },
    {
      "name": "static var systemCancel: LAError.Code",
      "desc": "The system canceled authentication."
    },
    {
      "name": "static var userCancel: LAError.Code",
      "desc": "The user tapped the cancel button in the authentication dialog."
    },
    {
      "name": "static var biometryDisconnected: LAError.Code",
      "desc": "The device supports biometry only using a removable accessory, but the paired accessory isn’t connected."
    },
    {
      "name": "static var biometryLockout: LAError.Code",
      "desc": "Biometry is locked because there were too many failed attempts."
    },
    {
      "name": "static var biometryNotAvailable: LAError.Code",
      "desc": "Biometry is not available on the device."
    },
    {
      "name": "static var biometryNotEnrolled: LAError.Code",
      "desc": "The user has no enrolled biometric identities."
    },
    {
      "name": "static var biometryNotPaired: LAError.Code",
      "desc": "The device supports biometry only using a removable accessory, but no accessory is paired."
    },
    {
      "name": "static var authenticationFailed: LAError.Code",
      "desc": "The user failed to provide valid credentials."
    },
    {
      "name": "static var invalidContext: LAError.Code",
      "desc": "The context was previously invalidated."
    },
    {
      "name": "static var notInteractive: LAError.Code",
      "desc": "Displaying the required authentication user interface is forbidden."
    },
    {
      "name": "static var passcodeNotSet: LAError.Code",
      "desc": "A passcode isn’t set on the device."
    },
    {
      "name": "static var userFallback: LAError.Code",
      "desc": "The user tapped the fallback button in the authentication dialog, but no fallback is available for the authentication policy."
    },
    {
      "name": "static var watchNotAvailable: LAError.Code",
      "desc": "An attempt to authenticate with Apple Watch failed."
    },
    {
      "name": "enum LAError.Code",
      "desc": "Error codes that the framework returns when policy evaluation fails."
    },
    {
      "name": "static func == (LAError, LAError) -> Bool",
      "desc": "Indicates whether two errors are equal."
    },
    {
      "name": "static func != (LAError, LAError) -> Bool",
      "desc": "Indicates whether two errors aren’t equal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the error by feeding them into the given hash function."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hashed value of the error."
    },
    {
      "name": "init(Code, userInfo: [String : Any])",
      "desc": "Creates a Local Authentication error."
    },
    {
      "name": "static var invalidDimensions: LAError.Code"
    }
  ],
  "declaration": "struct LAError"
}