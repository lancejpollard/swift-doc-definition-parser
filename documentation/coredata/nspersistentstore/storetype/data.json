{
  "path": "/documentation/coredata/nspersistentstore/storetype",
  "type": "Structure",
  "name": "NSPersistentStore.StoreType",
  "desc": "The types of persistent stores that Core Data supports.",
  "items": [
    {
      "name": "static let binary: NSPersistentStore.StoreType",
      "desc": "A store that reads from and writes to a persistent binary file."
    },
    {
      "name": "static let inMemory: NSPersistentStore.StoreType",
      "desc": "An ephemeral store that reads from and writes to memory only."
    },
    {
      "name": "static let sqlite: NSPersistentStore.StoreType",
      "desc": "A store that reads from and writes to a persistent SQLite database."
    },
    {
      "name": "static let xml: NSPersistentStore.StoreType",
      "desc": "A store that reads from and writes to a persistent XML file."
    },
    {
      "name": "init(rawValue: String)",
      "desc": "Creates a store type using the specified raw value."
    },
    {
      "name": "var rawValue: String",
      "desc": "The store type’s cardinal value."
    },
    {
      "name": "typealias NSPersistentStore.StoreType.RawValue",
      "desc": "The type the conforming type uses to represent its values."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The store type’s computed hash value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the components of the store type using the provided hasher."
    },
    {
      "name": "static func != (NSPersistentStore.StoreType, NSPersistentStore.StoreType) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two store types are unequal."
    }
  ],
  "declaration": "struct StoreType",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable"
  ]
}