{
  "path": "/documentation/coredata/nsmergepolicy",
  "type": "Class",
  "name": "NSMergePolicy",
  "desc": "A policy object that you use to resolve conflicts between the persistent store and in-memory versions of managed objects.",
  "items": [
    {
      "name": "init(merge: NSMergePolicyType)",
      "desc": "Returns a merge policy initialized with a given policy type."
    },
    {
      "name": "var mergeType: NSMergePolicyType",
      "desc": "The merge type."
    },
    {
      "name": "func resolve(mergeConflicts: [Any])",
      "desc": "Resolves the conflicts in a given list."
    },
    {
      "name": "func resolve(constraintConflicts: [NSConstraintConflict])",
      "desc": "Resolves the conflicts in a given list."
    },
    {
      "name": "func resolve(optimisticLockingConflicts: [NSMergeConflict])",
      "desc": "Resolves the conflicts in a given list."
    },
    {
      "name": "class var error: NSMergePolicy",
      "desc": "The default merge policy for all managed object contexts."
    },
    {
      "name": "class var mergeByPropertyStoreTrump: NSMergePolicy",
      "desc": "A property-based merge policy that applies external changes."
    },
    {
      "name": "class var mergeByPropertyObjectTrump: NSMergePolicy",
      "desc": "A property-based merge policy that applies in-memory changes."
    },
    {
      "name": "class var overwrite: NSMergePolicy",
      "desc": "A merge policy that overwrites the entire stored object."
    },
    {
      "name": "class var rollback: NSMergePolicy",
      "desc": "A merge policy that discards unsaved changes."
    }
  ],
  "declaration": "class NSMergePolicy : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}