{
  "path": "/documentation/swift/codinguserinfokey",
  "type": "Structure",
  "name": "CodingUserInfoKey",
  "desc": "A user-defined key for providing context during encoding and decoding.",
  "items": [
    {
      "name": "typealias CodingUserInfoKey.RawValue",
      "desc": "The raw type that can be used to represent all values of the conforming type."
    },
    {
      "name": "init?(rawValue: String)",
      "desc": "Creates a new instance with the given raw value."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The key’s hash value."
    },
    {
      "name": "let rawValue: String",
      "desc": "The key’s string value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "static func != (CodingUserInfoKey, CodingUserInfoKey) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "static func == (CodingUserInfoKey, CodingUserInfoKey) -> Bool",
      "desc": "Returns a Boolean value indicating whether the given keys are equal."
    }
  ],
  "declaration": "struct CodingUserInfoKey",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}