{
  "path": "/documentation/swift/floatingpointclassification",
  "type": "Enumeration",
  "name": "FloatingPointClassification",
  "desc": "The IEEE 754 floating-point classes.",
  "items": [
    {
      "name": "case negativeInfinity",
      "desc": "A value equal to -infinity."
    },
    {
      "name": "case negativeNormal",
      "desc": "A negative value that uses the full precision of the floating-point type."
    },
    {
      "name": "case negativeSubnormal",
      "desc": "A negative, nonzero number that does not use the full precision of the floating-point type."
    },
    {
      "name": "case negativeZero",
      "desc": "A value equal to zero with a negative sign."
    },
    {
      "name": "case positiveInfinity",
      "desc": "A value equal to +infinity."
    },
    {
      "name": "case positiveNormal",
      "desc": "A positive value that uses the full precision of the floating-point type."
    },
    {
      "name": "case positiveSubnormal",
      "desc": "A positive, nonzero number that does not use the full precision of the floating-point type."
    },
    {
      "name": "case positiveZero",
      "desc": "A value equal to zero with a positive sign."
    },
    {
      "name": "case quietNaN",
      "desc": "A silent NaN (“not a number”) value."
    },
    {
      "name": "case signalingNaN",
      "desc": "A signaling NaN (“not a number”)."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "static func != (FloatingPointClassification, FloatingPointClassification) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "static func == (FloatingPointClassification, FloatingPointClassification) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    }
  ],
  "declaration": "@frozen enum FloatingPointClassification",
  "conformsTo": [
    "Sendable"
  ]
}