{
  "path": "/documentation/swift/unicode/ascii",
  "type": "Enumeration",
  "name": "Unicode.ASCII",
  "desc": "No overview available.",
  "items": [
    {
      "name": "typealias Unicode.ASCII.CodeUnit",
      "desc": "The basic unit of encoding"
    },
    {
      "name": "typealias Unicode.ASCII.EncodedScalar",
      "desc": "A valid scalar value as represented in this encoding"
    },
    {
      "name": "typealias Unicode.ASCII.ForwardParser",
      "desc": "A type that can be used to parse CodeUnits into EncodedScalars."
    },
    {
      "name": "typealias Unicode.ASCII.ReverseParser",
      "desc": "A type that can be used to parse a reversed sequence of CodeUnits into EncodedScalars."
    },
    {
      "name": "static var encodedReplacementCharacter: Unicode.ASCII.EncodedScalar",
      "desc": "A unicode scalar value to be used when repairing encoding/decoding errors, as represented in this encoding."
    },
    {
      "name": "static func decode(Unicode.ASCII.EncodedScalar) -> Unicode.Scalar",
      "desc": "Converts from encoded to encoding-independent representation"
    },
    {
      "name": "static func encode(Unicode.Scalar) -> Unicode.ASCII.EncodedScalar?",
      "desc": "Converts from encoding-independent to encoded representation, returning nil if the scalar can’t be represented in this encoding."
    },
    {
      "name": "static func isASCII(Unicode.ASCII.CodeUnit) -> Bool",
      "desc": "Returns whether the given code unit represents an ASCII scalar"
    },
    {
      "name": "static func transcode<FromEncoding>(FromEncoding.EncodedScalar, from: FromEncoding.Type) -> Unicode.ASCII.EncodedScalar?",
      "desc": "Converts a scalar from another encoding’s representation, returning nil if the scalar can’t be represented in this encoding."
    },
    {
      "name": "static func transcode<FromEncoding>(FromEncoding.EncodedScalar, from: FromEncoding.Type) -> CollectionOfOne<CodeUnit>?",
      "desc": "Converts a scalar from another encoding’s representation, returning nil if the scalar can’t be represented in this encoding."
    },
    {
      "name": "struct Unicode.ASCII.Parser"
    }
  ],
  "declaration": "@frozen enum ASCII"
}