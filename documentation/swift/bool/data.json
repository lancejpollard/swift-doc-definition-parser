{
  "path": "/documentation/swift/bool",
  "type": "Structure",
  "name": "Bool",
  "desc": "A value type whose instances are either true or false.",
  "items": [
    {
      "name": "static func == (Bool, Bool) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    },
    {
      "name": "static func != (Bool, Bool) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "func toggle()",
      "desc": "Toggles the Boolean variableâ€™s value."
    },
    {
      "name": "static func ! (Bool) -> Bool",
      "desc": "Performs a logical NOT operation on a Boolean value."
    },
    {
      "name": "static func || (Bool, () -> Bool) -> Bool",
      "desc": "Performs a logical OR operation on two Boolean values."
    },
    {
      "name": "static func && (Bool, () -> Bool) -> Bool",
      "desc": "Performs a logical AND operation on two Boolean values."
    },
    {
      "name": "static func random() -> Bool",
      "desc": "Returns a random Boolean value."
    },
    {
      "name": "static func random<T>(using: inout T) -> Bool",
      "desc": "Returns a random Boolean value, using the given generator as a source for randomness."
    },
    {
      "name": "var description: String",
      "desc": "A textual representation of the Boolean value."
    },
    {
      "name": "var customMirror: Mirror",
      "desc": "A mirror that reflects the Bool instance."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "init(Bool)",
      "desc": "Creates an instance equal to the given Boolean value."
    },
    {
      "name": "init?(String)",
      "desc": "Creates a new Boolean value from the given string."
    },
    {
      "name": "init?(exactly: NSNumber)"
    },
    {
      "name": "init(truncating: NSNumber)"
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new instance by decoding from the given decoder."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes this value into the given encoder."
    },
    {
      "name": "init?(from: MLDataValue)",
      "desc": "Creates a Boolean from an integer wrapped in a data value."
    },
    {
      "name": "var dataValue: MLDataValue",
      "desc": "The Boolean wrapped in a data value."
    },
    {
      "name": "static var dataValueType: MLDataValue.ValueType",
      "desc": "The underlying type a Boolean uses when it wraps itself in a data value."
    },
    {
      "name": "init()",
      "desc": "Creates an instance initialized to false."
    },
    {
      "name": "init(booleanLiteral: Bool)",
      "desc": "Creates an instance initialized to the specified Boolean literal."
    },
    {
      "name": "typealias Bool.BooleanLiteralType",
      "desc": "A type that represents a Boolean literal, such as Bool."
    },
    {
      "name": "static var bnnsDataType: BNNSDataType"
    }
  ],
  "declaration": "@frozen struct Bool",
  "conformsTo": [
    "BNNSScalar",
    "BindableData",
    "CKRecordValueProtocol",
    "CVarArg",
    "CustomReflectable",
    "CustomStringConvertible",
    "Decodable",
    "Encodable",
    "Equatable",
    "ExpressibleByBooleanLiteral",
    "Hashable",
    "LosslessStringConvertible",
    "MLDataValueConvertible",
    "Sendable"
  ]
}