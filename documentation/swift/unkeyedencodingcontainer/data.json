{
  "path": "/documentation/swift/unkeyedencodingcontainer",
  "type": "Protocol",
  "name": "UnkeyedEncodingContainer",
  "desc": "A type that provides a view into an encoderâ€™s storage and is used to hold the encoded properties of an encodable type sequentially, without keys.",
  "items": [
    {
      "name": "var codingPath: [CodingKey]",
      "desc": "The path of coding keys taken to get to this point in encoding."
    },
    {
      "name": "var count: Int",
      "desc": "The number of elements encoded into the container."
    },
    {
      "name": "func encode(Int32)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(String)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(UInt64)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(UInt)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(Float)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(UInt8)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode<T>(T)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(Bool)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(Int64)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(UInt16)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(Double)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(Int)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(Int16)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(UInt32)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode(Int8)",
      "desc": "Encodes the given value."
    },
    {
      "name": "func encode<T>(T, configuration: T.EncodingConfiguration)"
    },
    {
      "name": "func encode<T, C>(T, configuration: C.Type)"
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encode<T>(contentsOf: T)",
      "desc": "Encodes the elements of the given sequence."
    },
    {
      "name": "func encodeConditional<T>(T)",
      "desc": "Encodes a reference to the given object only if it is encoded unconditionally elsewhere in the payload (previously, or in the future)."
    },
    {
      "name": "func encodeNil()",
      "desc": "Encodes a null value."
    },
    {
      "name": "func nestedContainer<NestedKey>(keyedBy: NestedKey.Type) -> KeyedEncodingContainer<NestedKey>",
      "desc": "Encodes a nested container keyed by the given type and returns it."
    },
    {
      "name": "func nestedUnkeyedContainer() -> UnkeyedEncodingContainer",
      "desc": "Encodes an unkeyed encoding container and returns it."
    },
    {
      "name": "func superEncoder() -> Encoder",
      "desc": "Encodes a nested container and returns an Encoder instance for encoding super into that container."
    }
  ],
  "declaration": "protocol UnkeyedEncodingContainer"
}