{
  "path": "/documentation/swift/simdmask",
  "type": "Generic Structure",
  "name": "SIMDMask",
  "desc": "No overview available.",
  "items": [
    {
      "name": "typealias SIMDMask.ArrayLiteralElement",
      "desc": "The type of the elements of an array literal."
    },
    {
      "name": "typealias SIMDMask.MaskStorage",
      "desc": "The mask type resulting from pointwise comparisons of this vector type."
    },
    {
      "name": "typealias SIMDMask.Scalar",
      "desc": "The type of scalars in the vector space."
    },
    {
      "name": "init()",
      "desc": "Creates a vector with zero in all lanes."
    },
    {
      "name": "init<S>(S)",
      "desc": "Creates a vector from the given sequence."
    },
    {
      "name": "init(arrayLiteral: Bool...)",
      "desc": "Creates a vector from the specified elements."
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new vector by decoding scalars from the given decoder."
    },
    {
      "name": "init(repeating: Bool)",
      "desc": "A vector with the specified value in all lanes."
    },
    {
      "name": "var description: String",
      "desc": "A textual description of the vector."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "var indices: Range<Int>",
      "desc": "The valid indices for subscripting the vector."
    },
    {
      "name": "var scalarCount: Int",
      "desc": "The number of scalars, or elements, in the vector."
    },
    {
      "name": "static var scalarCount: Int",
      "desc": "The number of scalars, or elements, in a vector of this type."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes the scalars of this vector into the given encoder in an unkeyed container."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the elements of the vector using the given hasher."
    },
    {
      "name": "func replace(with: Bool, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replace(with: SIMDMask<Storage>, where: SIMDMask<Storage>)",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: Bool, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "func replacing(with: SIMDMask<Storage>, where: SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true."
    },
    {
      "name": "static func random() -> SIMDMask<Storage>",
      "desc": "Returns a vector mask with true or false randomly assigned in each lane."
    },
    {
      "name": "static func random<T>(using: inout T) -> SIMDMask<Storage>",
      "desc": "Returns a vector mask with true or false randomly assigned in each lane, using the given generator as a source for randomness."
    },
    {
      "name": "subscript(Int) -> Bool",
      "desc": "Accesses the element at the specified index."
    },
    {
      "name": "subscript<Index>(SIMD2<Index>) -> SIMD2<Bool>",
      "desc": "Extracts the scalars at specified indices to form a SIMD2."
    },
    {
      "name": "subscript<Index>(SIMD3<Index>) -> SIMD3<Bool>",
      "desc": "Extracts the scalars at specified indices to form a SIMD3."
    },
    {
      "name": "subscript<Index>(SIMD4<Index>) -> SIMD4<Bool>",
      "desc": "Extracts the scalars at specified indices to form a SIMD4."
    },
    {
      "name": "subscript<Index>(SIMD8<Index>) -> SIMD8<Bool>",
      "desc": "Extracts the scalars at specified indices to form a SIMD8."
    },
    {
      "name": "subscript<Index>(SIMD16<Index>) -> SIMD16<Bool>",
      "desc": "Extracts the scalars at specified indices to form a SIMD16."
    },
    {
      "name": "subscript<Index>(SIMD32<Index>) -> SIMD32<Bool>",
      "desc": "Extracts the scalars at specified indices to form a SIMD32."
    },
    {
      "name": "subscript<Index>(SIMD64<Index>) -> SIMD64<Bool>",
      "desc": "Extracts the scalars at specified indices to form a SIMD64."
    },
    {
      "name": "static func != (SIMDMask<Storage>, SIMDMask<Storage>) -> Bool"
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .! (SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical negation of the input."
    },
    {
      "name": "static func .!= (Bool, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, Bool) -> SIMDMask<Storage>",
      "desc": "Returns a vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .!= (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise inequality comparison."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, Bool) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (Bool, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .& (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical conjunction of the inputs."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, Bool)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .&= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical conjuction of a and b."
    },
    {
      "name": "static func .== (Bool, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "Returns a vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, Bool) -> SIMDMask<Storage>",
      "desc": "Returns a vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .== (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask with the result of a pointwise equality comparison."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, Bool) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (Bool, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^ (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise exclusive or of the inputs."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, Bool)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .^= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise exclusive or of a and b."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, Bool) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (Bool, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .| (SIMDMask<Storage>, SIMDMask<Storage>) -> SIMDMask<Storage>",
      "desc": "A vector mask that is the pointwise logical disjunction of the inputs."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, Bool)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func .|= (inout SIMDMask<Storage>, SIMDMask<Storage>)",
      "desc": "Replaces a with the pointwise logical disjunction of a and b."
    },
    {
      "name": "static func == (SIMDMask<Storage>, SIMDMask<Storage>) -> Bool",
      "desc": "Returns a Boolean value indicating whether two vectors are equal."
    }
  ],
  "declaration": "@frozen struct SIMDMask<Storage> where Storage : SIMD, Storage.Scalar : FixedWidthInteger, Storage.Scalar : SignedInteger",
  "conformsTo": [
    "SIMD"
  ]
}