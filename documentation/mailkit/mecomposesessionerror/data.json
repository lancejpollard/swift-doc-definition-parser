{
  "path": "/documentation/mailkit/mecomposesessionerror",
  "type": "Structure",
  "name": "MEComposeSessionError",
  "desc": "An error that indicates the compose session is in an erroneous state.",
  "items": [
    {
      "name": "static var invalidBody: MEComposeSessionError.Code",
      "desc": "An error that indicates the message’s body is invalid."
    },
    {
      "name": "static var invalidHeaders: MEComposeSessionError.Code",
      "desc": "An error that indicates one or more of the message’s headers are invalid."
    },
    {
      "name": "static var invalidRecipients: MEComposeSessionError.Code",
      "desc": "An error that indicates one or more of the message’s recipients are invalid."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "An error domain for compose session errors."
    },
    {
      "name": "let MEComposeSessionErrorDomain: String",
      "desc": "A constant for the compose session error domain."
    },
    {
      "name": "init(Code, userInfo: [String : Any])",
      "desc": "Creates an error with the given error code and additional details."
    },
    {
      "name": "var code: Code",
      "desc": "A code that indicates the cause of the error."
    },
    {
      "name": "var errorCode: Int",
      "desc": "An integer value for an error."
    },
    {
      "name": "enum MEComposeSessionError.Code",
      "desc": "Errors that indicate invalid compose session states."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "A dictionary that contains additional error details, such as a localized description."
    },
    {
      "name": "var userInfo: [String : Any]",
      "desc": "A dictionary that contains additional details, such as a localized description."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized description that includes details about the error."
    },
    {
      "name": "static func == (MEComposeSessionError, MEComposeSessionError) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are equal."
    },
    {
      "name": "static func != (MEComposeSessionError, MEComposeSessionError) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are not equal."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    }
  ],
  "declaration": "struct MEComposeSessionError"
}