{
  "path": "/documentation/classkit/clspredicatekeypath",
  "type": "Structure",
  "name": "CLSPredicateKeyPath",
  "desc": "The set of possible key paths you use to search for contexts.",
  "items": [
    {
      "name": "static let dateCreated: CLSPredicateKeyPath",
      "desc": "The date on which the context was created."
    },
    {
      "name": "static let identifier: CLSPredicateKeyPath",
      "desc": "The context’s identifier."
    },
    {
      "name": "static let parent: CLSPredicateKeyPath",
      "desc": "The context’s direct ancestor in the context hierarchy."
    },
    {
      "name": "static let title: CLSPredicateKeyPath",
      "desc": "The human readable name of the context."
    },
    {
      "name": "static let topic: CLSPredicateKeyPath",
      "desc": "The context’s topic."
    },
    {
      "name": "static let universalLinkURL: CLSPredicateKeyPath",
      "desc": "The context’s universal URL link."
    },
    {
      "name": "init(String)",
      "desc": "Initializes a predicate key path."
    },
    {
      "name": "init(rawValue: String)",
      "desc": "Initializes a predicate key path with the given value."
    }
  ],
  "declaration": "struct CLSPredicateKeyPath, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}