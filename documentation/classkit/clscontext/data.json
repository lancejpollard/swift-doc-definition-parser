{
  "path": "/documentation/classkit/clscontext",
  "type": "Class",
  "name": "CLSContext",
  "desc": "An area of your app that represents an assignable task, like a quiz or a chapter.",
  "items": [
    {
      "name": "init(type: CLSContextType, identifier: String, title: String)",
      "desc": "Initializes a new context."
    },
    {
      "name": "class CLSObject",
      "desc": "The abstract base class for objects managed by ClassKit."
    },
    {
      "name": "var identifier: String",
      "desc": "A string that uniquely identifies a context among its siblings."
    },
    {
      "name": "var title: String",
      "desc": "The name of the context as it appears to users."
    },
    {
      "name": "var summary: String?",
      "desc": "An optional, user-visible description of the context."
    },
    {
      "name": "var thumbnail: CGImage?",
      "desc": "An optional thumbnail image associated with the context."
    },
    {
      "name": "var type: CLSContextType",
      "desc": "The kind of content a context represents."
    },
    {
      "name": "func setType(CLSContextType)",
      "desc": "Updates the kind of content that a context represents."
    },
    {
      "name": "enum CLSContextType",
      "desc": "The kinds of assignable content a context can contain."
    },
    {
      "name": "var customTypeName: String?",
      "desc": "An optional name that the system presents to the user if you choose the custom context type."
    },
    {
      "name": "var suggestedAge: NSRange",
      "desc": "The range of ages, measured in years, for which you deem a context’s content suitable."
    },
    {
      "name": "var suggestedCompletionTime: NSRange",
      "desc": "A suggested time range to complete a task, measured in minutes."
    },
    {
      "name": "var isAssignable: Bool",
      "desc": "A Boolean that indicates whether teachers can assign the context as a task."
    },
    {
      "name": "var displayOrder: Int",
      "desc": "The position of a context relative to its siblings."
    },
    {
      "name": "var topic: CLSContextTopic?",
      "desc": "The area of study to which a context relates."
    },
    {
      "name": "struct CLSContextTopic",
      "desc": "The areas of study to which contexts may relate."
    },
    {
      "name": "var progressReportingCapabilities: Set<CLSProgressReportingCapability>",
      "desc": "The kinds of progress reporting that the context can perform."
    },
    {
      "name": "func addProgressReportingCapabilities(Set<CLSProgressReportingCapability>)",
      "desc": "Adds a progress reporting capability to the set of capabilities for the context."
    },
    {
      "name": "func resetProgressReportingCapabilities()",
      "desc": "Resets the set of capabilities for the context."
    },
    {
      "name": "class CLSProgressReportingCapability",
      "desc": "A progress reporting capability supported by a context."
    },
    {
      "name": "func becomeActive()",
      "desc": "Tells a context to become the active context."
    },
    {
      "name": "func resignActive()",
      "desc": "Tells a context to stop being the active context."
    },
    {
      "name": "var isActive: Bool",
      "desc": "A Boolean indicating whether the context is active."
    },
    {
      "name": "var currentActivity: CLSActivity?",
      "desc": "The activity available for recording progress."
    },
    {
      "name": "func createNewActivity() -> CLSActivity",
      "desc": "Creates and returns a new activity instance for the context."
    },
    {
      "name": "var identifierPath: [String]",
      "desc": "The identifier path that locates the context within the data store’s context hierarchy."
    },
    {
      "name": "var parent: CLSContext?",
      "desc": "The direct ancestor of this context."
    },
    {
      "name": "func removeFromParent()",
      "desc": "Removes the context from its parent."
    },
    {
      "name": "func addChildContext(CLSContext)",
      "desc": "Adds the specifed context as a child of the context receiving the method call."
    },
    {
      "name": "func descendant(matchingIdentifierPath: [String], completion: (CLSContext?, Error?) -> Void)",
      "desc": "Finds the context with the given identifier path relative to this context."
    },
    {
      "name": "var navigationChildContexts: [CLSContext]",
      "desc": "The child contexts that a user can navigate to from this context in the Schoolwork app."
    },
    {
      "name": "func addNavigationChildContext(CLSContext)",
      "desc": "Adds a child context that users can navigate to from this context."
    },
    {
      "name": "func removeNavigationChildContext(CLSContext)",
      "desc": "Removes the specified context as a presentable child of this context."
    },
    {
      "name": "var universalLinkURL: URL?",
      "desc": "A URL that leads to the content in your app associated with the current context."
    },
    {
      "name": "var isClassKitDeepLink: Bool",
      "desc": "A Boolean value that indicates whether a user activity represents a ClassKit context."
    },
    {
      "name": "var contextIdentifierPath: [String]?",
      "desc": "The identifier path associated with a user activity generated by an app that adopts ClassKit."
    }
  ],
  "declaration": "class CLSContext : CLSObject",
  "inheritsFrom": [
    "CLSObject"
  ]
}