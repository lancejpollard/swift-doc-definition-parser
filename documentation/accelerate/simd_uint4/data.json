{
  "path": "/documentation/accelerate/simd_uint4",
  "type": "Type Alias",
  "name": "simd_uint4",
  "desc": "A vector of four 32-bit unsigned integer elements.",
  "items": [
    {
      "name": "func simd_make_uint4(simd_uint2) -> simd_uint4",
      "desc": "Returns a new vector from the specified two-element vector, and other elements set to zero."
    },
    {
      "name": "func simd_make_uint4(simd_uint3) -> simd_uint4",
      "desc": "Returns a new vector from the specified three-element vector, and other elements set to zero."
    },
    {
      "name": "func simd_make_uint4(simd_uint4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector."
    },
    {
      "name": "func simd_make_uint4(simd_uint8) -> simd_uint4",
      "desc": "Returns a new vector by truncating the specified eight-element vector."
    },
    {
      "name": "func simd_make_uint4(simd_uint16) -> simd_uint4",
      "desc": "Returns a new vector by truncating the specified sixteen-element vector."
    },
    {
      "name": "func simd_make_uint4(simd_uint2, simd_uint2) -> simd_uint4",
      "desc": "Returns a new vector from the specified vectors."
    },
    {
      "name": "func vector4(simd_uint2, simd_uint2) -> simd_uint4",
      "desc": "Returns a new vector from the specified vectors."
    },
    {
      "name": "func simd_make_uint4_undef(simd_uint2) -> simd_uint4",
      "desc": "Returns a new vector from the specified two-element vector, and other elements undefined."
    },
    {
      "name": "func simd_make_uint4_undef(simd_uint3) -> simd_uint4",
      "desc": "Returns a new vector from the specified two-element vector, and other elements undefined."
    },
    {
      "name": "func simd_make_uint4(UInt32) -> simd_uint4",
      "desc": "Returns a new vector with the first element set to a scalar value, and other elements set to zero."
    },
    {
      "name": "func simd_make_uint4(UInt32, UInt32, UInt32, UInt32) -> simd_uint4",
      "desc": "Returns a new vector from the specified scalar values."
    },
    {
      "name": "func vector4(UInt32, UInt32, UInt32, UInt32) -> simd_uint4",
      "desc": "Returns a new vector from the specified scalar values."
    },
    {
      "name": "func simd_make_uint4_undef(UInt32) -> simd_uint4",
      "desc": "Returns a new vector with the first element set to a scalar value, and other elements undefined."
    },
    {
      "name": "func simd_make_uint4(simd_uint2, UInt32, UInt32) -> simd_uint4",
      "desc": "Returns a new vector from a vector and scalar values."
    },
    {
      "name": "func simd_make_uint4(simd_uint3, UInt32) -> simd_uint4",
      "desc": "Returns a new vector from a vector and a scalar value."
    },
    {
      "name": "func vector4(simd_uint3, UInt32) -> simd_uint4",
      "desc": "Returns a new vector from a vector and a scalar value."
    },
    {
      "name": "func simd_make_uint4(UInt32, UInt32, simd_uint2) -> simd_uint4",
      "desc": "Returns a new vector from two scalar values and a vector."
    },
    {
      "name": "func simd_make_uint4(UInt32, simd_uint2, UInt32) -> simd_uint4",
      "desc": "Returns a new vector from a scalar value, a vector, and a scalar value."
    },
    {
      "name": "func simd_make_uint4(UInt32, simd_uint3) -> simd_uint4",
      "desc": "Returns a new vector from a scalar value and a vector."
    },
    {
      "name": "func simd_uint(simd_char4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 8-bit, signed integer elements."
    },
    {
      "name": "func simd_uint(simd_uchar4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 8-bit, unsigned integer elements."
    },
    {
      "name": "func simd_uint(simd_short4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 16-bit, signed integer elements."
    },
    {
      "name": "func simd_uint(simd_ushort4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 16-bit, unsigned integer elements."
    },
    {
      "name": "func simd_uint(simd_int4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 32-bit, signed integer elements."
    },
    {
      "name": "func simd_uint(simd_uint4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 32-bit, unsigned integer elements."
    },
    {
      "name": "func simd_uint(simd_long4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 64-bit, signed integer elements."
    },
    {
      "name": "func simd_uint(simd_long4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 64-bit, signed integer elements."
    },
    {
      "name": "func simd_uint(simd_ulong4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 64-bit, unsigned integer elements."
    },
    {
      "name": "func simd_uint(simd_ulong4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 64-bit, unsigned integer elements."
    },
    {
      "name": "func simd_uint(simd_float4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 32-bit, floating-point elements."
    },
    {
      "name": "func simd_uint(simd_double4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 64-bit, floating-point elements."
    },
    {
      "name": "func simd_uint_sat(simd_char4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 8-bit, signed integer elements."
    },
    {
      "name": "func simd_uint_sat(simd_uchar4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 8-bit, unsigned integer elements."
    },
    {
      "name": "func simd_uint_sat(simd_short4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 16-bit, signed integer elements."
    },
    {
      "name": "func simd_uint_sat(simd_ushort4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 16-bit, unsigned integer elements."
    },
    {
      "name": "func simd_uint_sat(simd_int4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 32-bit, signed integer elements."
    },
    {
      "name": "func simd_uint_sat(simd_uint4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 32-bit, unsigned integer elements."
    },
    {
      "name": "func simd_uint_sat(simd_long4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 64-bit, signed integer elements."
    },
    {
      "name": "func simd_uint_sat(simd_long4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 64-bit, signed integer elements."
    },
    {
      "name": "func simd_uint_sat(simd_ulong4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 64-bit, unsigned integer elements."
    },
    {
      "name": "func simd_uint_sat(simd_ulong4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 64-bit, unsigned integer elements."
    },
    {
      "name": "func simd_uint_sat(simd_float4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 32-bit, floating-point elements."
    },
    {
      "name": "func simd_uint_sat(simd_double4) -> simd_uint4",
      "desc": "Returns a new vector from the specified vector of 64-bit, floating-point elements."
    },
    {
      "name": "func simd_clamp(simd_uint4, simd_uint4, simd_uint4) -> simd_uint4",
      "desc": "Returns each element in a vector clamped to a specified range."
    },
    {
      "name": "func clamp(SIMD4<UInt32>, min: UInt32, max: UInt32) -> SIMD4<UInt32>",
      "desc": "Returns each element in a vector clamped to a specified range."
    },
    {
      "name": "func clamp(SIMD4<UInt32>, min: SIMD4<UInt32>, max: SIMD4<UInt32>) -> SIMD4<UInt32>",
      "desc": "Returns each element in a vector clamped to a specified range."
    },
    {
      "name": "func simd_equal(simd_uint4, simd_uint4) -> simd_bool",
      "desc": "Returns true if every element in a vector is exactly equal to the corresponding element in a second vector, and otherwise returns false."
    },
    {
      "name": "func simd_reduce_min(simd_uint4) -> UInt32",
      "desc": "Returns the minimum value in a vector."
    },
    {
      "name": "func reduce_min(SIMD4<UInt32>) -> UInt32",
      "desc": "Returns the minimum value in a vector."
    },
    {
      "name": "func simd_reduce_max(simd_uint4) -> UInt32",
      "desc": "Returns the maximum value in a vector."
    },
    {
      "name": "func reduce_max(SIMD4<UInt32>) -> UInt32",
      "desc": "Returns the maximum value in a vector."
    },
    {
      "name": "func simd_reduce_add(simd_uint4) -> UInt32",
      "desc": "Returns the sum of all elements in a vector."
    },
    {
      "name": "func reduce_add(SIMD4<UInt32>) -> UInt32",
      "desc": "Returns the sum of all elements in a vector."
    },
    {
      "name": "func simd_min(simd_uint4, simd_uint4) -> simd_uint4",
      "desc": "Returns the minimum value of each element in a vector."
    },
    {
      "name": "func min(SIMD4<UInt32>, UInt32) -> SIMD4<UInt32>",
      "desc": "Returns the minimum value of each element in a vector."
    },
    {
      "name": "func min(SIMD4<UInt32>, SIMD4<UInt32>) -> SIMD4<UInt32>",
      "desc": "Returns the minimum value of each element in a vector."
    },
    {
      "name": "func simd_max(simd_uint4, simd_uint4) -> simd_uint4",
      "desc": "Returns the maximum value of each element in a vector."
    },
    {
      "name": "func max(SIMD4<UInt32>, UInt32) -> SIMD4<UInt32>",
      "desc": "Returns the maximum value of each element in a vector."
    },
    {
      "name": "func max(SIMD4<UInt32>, SIMD4<UInt32>) -> SIMD4<UInt32>",
      "desc": "Returns the maximum value of each element in a vector."
    },
    {
      "name": "func simd_any(simd_uint4) -> simd_bool",
      "desc": "Returns true if the high-order bit of any element is set; false otherwise."
    },
    {
      "name": "func simd_all(simd_uint4) -> simd_bool",
      "desc": "Returns true if the high-order bit of every element is set; false otherwise."
    },
    {
      "name": "func simd_bitselect(simd_uint4, simd_uint4, simd_int4) -> simd_uint4",
      "desc": "Returns a vector that contains elements from either the first or second parameter, based on the corresponding element in the third parameter."
    },
    {
      "name": "typealias vector_uint4"
    }
  ],
  "declaration": "typealias simd_uint4 = SIMD4<UInt32>"
}