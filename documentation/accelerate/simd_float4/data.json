{
  "path": "/documentation/accelerate/simd_float4",
  "type": "Type Alias",
  "name": "simd_float4",
  "desc": "A vector of four 32-bit floating-point elements.",
  "items": [
    {
      "name": "func simd_make_float4(simd_float2) -> simd_float4",
      "desc": "Returns a new vector from the specified two-element vector, and other elements set to zero."
    },
    {
      "name": "func simd_make_float4(simd_float3) -> simd_float4",
      "desc": "Returns a new vector from the specified three-element vector, and other elements set to zero."
    },
    {
      "name": "func simd_make_float4(simd_float4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector."
    },
    {
      "name": "func simd_make_float4(simd_float8) -> simd_float4",
      "desc": "Returns a new vector by truncating the specified eight-element vector."
    },
    {
      "name": "func simd_make_float4(simd_float16) -> simd_float4",
      "desc": "Returns a new vector by truncating the specified sixteen-element vector."
    },
    {
      "name": "func simd_make_float4(simd_float2, simd_float2) -> simd_float4",
      "desc": "Returns a new vector from the specified vectors."
    },
    {
      "name": "func vector4(simd_float2, simd_float2) -> simd_float4",
      "desc": "Returns a new vector from the specified vectors."
    },
    {
      "name": "func simd_make_float4_undef(simd_float2) -> simd_float4",
      "desc": "Returns a new vector from the specified two-element vector, and other elements undefined."
    },
    {
      "name": "func simd_make_float4_undef(simd_float3) -> simd_float4",
      "desc": "Returns a new vector from the specified three-element vector, and other elements undefined."
    },
    {
      "name": "func simd_make_float4(Float) -> simd_float4",
      "desc": "Returns a new vector with the first element set to a scalar value, and other elements set to zero."
    },
    {
      "name": "func simd_make_float4(Float, Float, Float, Float) -> simd_float4",
      "desc": "Returns a new vector from the specified scalar values."
    },
    {
      "name": "func vector4(Float, Float, Float, Float) -> simd_float4",
      "desc": "Returns a new vector from the specified scalar values."
    },
    {
      "name": "func simd_make_float4_undef(Float) -> simd_float4",
      "desc": "Returns a new vector with the first element set to a scalar value, and other elements undefined."
    },
    {
      "name": "func simd_make_float4(Float, simd_float2, Float) -> simd_float4",
      "desc": "Returns a new vector from a scalar value, a vector, and a scalar value."
    },
    {
      "name": "func simd_make_float4(Float, Float, simd_float2) -> simd_float4",
      "desc": "Returns a new vector from two scalar values and a vector."
    },
    {
      "name": "func simd_make_float4(Float, simd_float3) -> simd_float4",
      "desc": "Returns a new vector from a scalar value and a vector."
    },
    {
      "name": "func simd_make_float4(simd_float2, Float, Float) -> simd_float4",
      "desc": "Returns a new vector from a vector and scalar values."
    },
    {
      "name": "func simd_make_float4(simd_float3, Float) -> simd_float4",
      "desc": "Returns a new vector from a vector and a scalar value."
    },
    {
      "name": "func vector4(simd_float3, Float) -> simd_float4",
      "desc": "Returns a new vector from a vector and a scalar value."
    },
    {
      "name": "func simd_float(simd_char4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 8-bit, signed integer elements."
    },
    {
      "name": "func simd_float(simd_uchar4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 8-bit, unsigned integer elements."
    },
    {
      "name": "func simd_float(simd_short4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 16-bit, signed integer elements."
    },
    {
      "name": "func simd_float(simd_ushort4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 16-bit, unsigned integer elements."
    },
    {
      "name": "func simd_float(simd_int4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 32-bit, signed integer elements."
    },
    {
      "name": "func simd_float(simd_uint4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 32-bit, unsigned integer elements."
    },
    {
      "name": "func simd_float(simd_long4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 64-bit, signed integer elements."
    },
    {
      "name": "func simd_float(simd_long4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 64-bit, signed integer elements."
    },
    {
      "name": "func simd_float(simd_ulong4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 64-bit, unsigned integer elements."
    },
    {
      "name": "func simd_float(simd_ulong4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 64-bit, unsigned integer elements."
    },
    {
      "name": "func simd_float(simd_float4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 32-bit, floating-point elements."
    },
    {
      "name": "func simd_float(simd_double4) -> simd_float4",
      "desc": "Returns a new vector from the specified vector of 64-bit, floating-point elements."
    },
    {
      "name": "func simd_abs(simd_float4) -> simd_float4",
      "desc": "Returns the absolute value of each element in a vector."
    },
    {
      "name": "func abs(SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the absolute value of each element in a vector."
    },
    {
      "name": "func simd_clamp(simd_float4, simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns each element in a vector clamped to a specified range."
    },
    {
      "name": "func clamp(SIMD4<Float>, min: Float, max: Float) -> SIMD4<Float>",
      "desc": "Returns each element in a vector clamped to a specified range."
    },
    {
      "name": "func clamp(SIMD4<Float>, min: SIMD4<Float>, max: SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns each element in a vector clamped to a specified range."
    },
    {
      "name": "func simd_equal(simd_float4, simd_float4) -> simd_bool",
      "desc": "Returns true if every element in a vector is exactly equal to the corresponding element in a second vector, and otherwise returns false."
    },
    {
      "name": "func simd_fract(simd_float4) -> simd_float4",
      "desc": "Returns the fractional part of each element in a vector."
    },
    {
      "name": "func fract(SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the fractional part of each element in a vector."
    },
    {
      "name": "func simd_sign(simd_float4) -> simd_float4",
      "desc": "Returns the sign of each element in a vector."
    },
    {
      "name": "func sign(SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the sign of each element in a vector."
    },
    {
      "name": "func simd_step(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns zero for each element in a vector less than a specified edge, and otherwise returns one."
    },
    {
      "name": "func step(SIMD4<Float>, edge: SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns zero for each element in a vector less than a specified edge, and otherwise returns one."
    },
    {
      "name": "func simd_reduce_add(simd_float4) -> Float",
      "desc": "Returns the sum of all elements in a vector."
    },
    {
      "name": "func reduce_add(SIMD4<Float>) -> Float",
      "desc": "Returns the sum of all elements in a vector."
    },
    {
      "name": "func simd_reduce_max(simd_float4) -> Float",
      "desc": "Returns the maximum value in a vector."
    },
    {
      "name": "func reduce_max(SIMD4<Float>) -> Float",
      "desc": "Returns the maximum value in a vector."
    },
    {
      "name": "func simd_reduce_min(simd_float4) -> Float",
      "desc": "Returns the minimum value in a vector."
    },
    {
      "name": "func reduce_min(SIMD4<Float>) -> Float",
      "desc": "Returns the minimum value in a vector."
    },
    {
      "name": "func simd_mix(simd_float4, simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns an elementwise linearly interpolated value between two vectors."
    },
    {
      "name": "func mix(SIMD4<Float>, SIMD4<Float>, t: Float) -> SIMD4<Float>",
      "desc": "Returns an elementwise linearly interpolated value between two vectors."
    },
    {
      "name": "func mix(SIMD4<Float>, SIMD4<Float>, t: SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns an elementwise linearly interpolated value between two vectors."
    },
    {
      "name": "func simd_smoothstep(simd_float4, simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns an elementwise smoothly interpolated value between two vectors."
    },
    {
      "name": "func smoothstep(SIMD4<Float>, edge0: SIMD4<Float>, edge1: SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns an elementwise smoothly interpolated value between two vectors."
    },
    {
      "name": "func simd_max(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the maximum value of each element in a vector."
    },
    {
      "name": "func max(SIMD4<Float>, Float) -> SIMD4<Float>",
      "desc": "Returns the maximum value of each element in a vector."
    },
    {
      "name": "func max(SIMD4<Float>, SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the maximum value of each element in a vector."
    },
    {
      "name": "func fmax(SIMD4<Float>, SIMD4<Float>) -> SIMD4<Float>"
    },
    {
      "name": "func simd_min(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the minimum value of each element in a vector."
    },
    {
      "name": "func min(SIMD4<Float>, Float) -> SIMD4<Float>",
      "desc": "Returns the minimum value of each element in a vector."
    },
    {
      "name": "func min(SIMD4<Float>, SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the minimum value of each element in a vector."
    },
    {
      "name": "func fmin(SIMD4<Float>, SIMD4<Float>) -> SIMD4<Float>"
    },
    {
      "name": "func simd_recip(simd_float4) -> simd_float4",
      "desc": "Returns the reciprocal of each element in a vector."
    },
    {
      "name": "func recip(SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the reciprocal of each element in a vector."
    },
    {
      "name": "func simd_rsqrt(simd_float4) -> simd_float4",
      "desc": "Returns the reciprocal square root of each element in a vector."
    },
    {
      "name": "func rsqrt(SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the reciprocal square root of each element in a vector."
    },
    {
      "name": "func simd_precise_recip(simd_float4) -> simd_float4",
      "desc": "Returns the precise reciprocal of each element in a vector."
    },
    {
      "name": "func simd_precise_rsqrt(simd_float4) -> simd_float4",
      "desc": "Returns the precise reciprocal square root of each element in a vector."
    },
    {
      "name": "func simd_fast_recip(simd_float4) -> simd_float4",
      "desc": "Returns the fast reciprocal of each element in a vector."
    },
    {
      "name": "func simd_fast_rsqrt(simd_float4) -> simd_float4",
      "desc": "Returns the fast reciprocal square root of each element in a vector."
    },
    {
      "name": "func exp(simd_float4) -> simd_float4",
      "desc": "Returns e raised to the power of each element in a vector."
    },
    {
      "name": "func exp2(simd_float4) -> simd_float4",
      "desc": "Returns 2 raised to the power of each element in a vector."
    },
    {
      "name": "func exp10(simd_float4) -> simd_float4",
      "desc": "Returns 10 raised to the power of each element in a vector."
    },
    {
      "name": "func expm1(simd_float4) -> simd_float4",
      "desc": "Returns eˣ-1 for each element in a vector."
    },
    {
      "name": "func log(simd_float4) -> simd_float4",
      "desc": "Returns the natural logarithm of each element in a vector."
    },
    {
      "name": "func log2(simd_float4) -> simd_float4",
      "desc": "Returns the base 2 logarithm of each element in a vector."
    },
    {
      "name": "func log10(simd_float4) -> simd_float4",
      "desc": "Returns the base 10 logarithm of each element in a vector."
    },
    {
      "name": "func log1p(simd_float4) -> simd_float4",
      "desc": "Returns log(1+x) of each element in a vector."
    },
    {
      "name": "func simd_dot(simd_float4, simd_float4) -> Float",
      "desc": "Returns the dot product of two vectors."
    },
    {
      "name": "func dot(SIMD4<Float>, SIMD4<Float>) -> Float",
      "desc": "Returns the dot product of two vectors."
    },
    {
      "name": "func simd_normalize(simd_float4) -> simd_float4",
      "desc": "Returns a vector pointing in the same direction of the supplied vector with a length of 1."
    },
    {
      "name": "func normalize(SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns a vector pointing in the same direction of the supplied vector with a length of 1."
    },
    {
      "name": "func simd_fast_normalize(simd_float4) -> simd_float4",
      "desc": "Returns the fast normalized vector."
    },
    {
      "name": "func simd_precise_normalize(simd_float4) -> simd_float4",
      "desc": "Returns the precise normalized vector."
    },
    {
      "name": "func simd_project(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the first vector projected onto the second vector."
    },
    {
      "name": "func project(SIMD4<Float>, SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the first vector projected onto the second vector."
    },
    {
      "name": "func simd_fast_project(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the fast projected vector."
    },
    {
      "name": "func simd_precise_project(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the precise projected vector."
    },
    {
      "name": "func simd_reflect(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the reflection direction of an incident vector and a unit normal vector."
    },
    {
      "name": "func reflect(SIMD4<Float>, n: SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the reflection direction of an incident vector and a unit normal vector."
    },
    {
      "name": "func simd_refract(simd_float4, simd_float4, Float) -> simd_float4",
      "desc": "Returns the refraction direction of an incident vector, a unit normal vector, and an index of refraction eta."
    },
    {
      "name": "func refract(SIMD4<Float>, n: SIMD4<Float>, eta: Float) -> SIMD4<Float>",
      "desc": "Returns the refraction direction of an incident vector, a unit normal vector, and an index of refraction eta."
    },
    {
      "name": "func simd_norm_one(simd_float4) -> Float",
      "desc": "Returns the sum of the absolute values of a vector."
    },
    {
      "name": "func norm_one(SIMD4<Float>) -> Float",
      "desc": "Returns the sum of the absolute values of a vector."
    },
    {
      "name": "func simd_norm_inf(simd_float4) -> Float",
      "desc": "Returns the maximum absolute value of a vector."
    },
    {
      "name": "func norm_inf(SIMD4<Float>) -> Float",
      "desc": "Returns the maximum absolute value of a vector."
    },
    {
      "name": "func simd_length(simd_float4) -> Float",
      "desc": "Returns the length of a vector."
    },
    {
      "name": "func length(SIMD4<Float>) -> Float",
      "desc": "Returns the length of a vector."
    },
    {
      "name": "func simd_fast_length(simd_float4) -> Float",
      "desc": "Returns the fast length of a vector."
    },
    {
      "name": "func simd_precise_length(simd_float4) -> Float",
      "desc": "Returns the precise length of a vector."
    },
    {
      "name": "func simd_length_squared(simd_float4) -> Float",
      "desc": "Returns the square of the length of a vector."
    },
    {
      "name": "func length_squared(SIMD4<Float>) -> Float",
      "desc": "Returns the square of the length of a vector."
    },
    {
      "name": "func simd_distance(simd_float4, simd_float4) -> Float",
      "desc": "Returns the distance between two vectors."
    },
    {
      "name": "func distance(SIMD4<Float>, SIMD4<Float>) -> Float",
      "desc": "Returns the distance between two vectors."
    },
    {
      "name": "func simd_fast_distance(simd_float4, simd_float4) -> Float",
      "desc": "Returns the fast distance between two vectors."
    },
    {
      "name": "func simd_precise_distance(simd_float4, simd_float4) -> Float",
      "desc": "Returns the precise distance between two vectors."
    },
    {
      "name": "func simd_distance_squared(simd_float4, simd_float4) -> Float",
      "desc": "Returns the square of the distance between two vectors."
    },
    {
      "name": "func distance_squared(SIMD4<Float>, SIMD4<Float>) -> Float",
      "desc": "Returns the square of the distance between two vectors."
    },
    {
      "name": "func acosh(simd_float4) -> simd_float4",
      "desc": "Returns the inverse hyperbolic cosine of each element in a vector."
    },
    {
      "name": "func asinh(simd_float4) -> simd_float4",
      "desc": "Returns the inverse hyperbolic sine of each element in a vector."
    },
    {
      "name": "func atanh(simd_float4) -> simd_float4",
      "desc": "Returns the inverse hyperbolic tangent of each element in a vector."
    },
    {
      "name": "func cosh(simd_float4) -> simd_float4",
      "desc": "Returns the hyperbolic cosine of each element in a vector."
    },
    {
      "name": "func sinh(simd_float4) -> simd_float4",
      "desc": "Returns the hyperbolic sine of each element in a vector."
    },
    {
      "name": "func tanh(simd_float4) -> simd_float4",
      "desc": "Returns the hyperbolic tangent of each element in a vector."
    },
    {
      "name": "func simd_select(simd_float4, simd_float4, simd_int4) -> simd_float4",
      "desc": "Returns a vector that contains elements from either the first or second parameter, based on the high-order bit of the corresponding element in the third parameter."
    },
    {
      "name": "func simd_bitselect(simd_float4, simd_float4, simd_int4) -> simd_float4",
      "desc": "Returns a vector that contains elements from either the first or second parameter, based on the corresponding element in the third parameter."
    },
    {
      "name": "func cbrt(simd_float4) -> simd_float4",
      "desc": "Returns the cube root of each element in a vector."
    },
    {
      "name": "func ceil(SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the ceiling of each element in a vector."
    },
    {
      "name": "func erf(simd_float4) -> simd_float4",
      "desc": "Returns the error function for each element in a vector."
    },
    {
      "name": "func erfc(simd_float4) -> simd_float4",
      "desc": "Returns the complementary error function for each element in a vector."
    },
    {
      "name": "func floor(SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns the floor of each element in a vector."
    },
    {
      "name": "func fma(simd_float4, simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the multiply-add result for corresponding elements in three vectors."
    },
    {
      "name": "func fmod(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the modulus after dividing each element in a vector by the corresponding element in a second vector."
    },
    {
      "name": "func hypot(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the hypotenuse of a right-angled triangle with the sides that are adjacent to the right angle that two vectors define."
    },
    {
      "name": "func lgamma(simd_float4) -> simd_float4",
      "desc": "Returns the natural logarithm of the absolute value of the gamma function of each element in a vector."
    },
    {
      "name": "func nextafter(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the next representable value of each element in a vector in the direction of the corresponding element in a second vector."
    },
    {
      "name": "func pow(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns each element in a vector raised to the power of the corresponding element in a second vector."
    },
    {
      "name": "func remainder(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the remainder after dividing each element in an array by the corresponding element in a second array of double-precision values."
    },
    {
      "name": "func round(simd_float4) -> simd_float4",
      "desc": "Returns each element in a vector rounded to the nearest integer."
    },
    {
      "name": "func simd_muladd(simd_float4, simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the multiply-add result for corresponding elements in three vectors."
    },
    {
      "name": "func tgamma(simd_float4) -> simd_float4",
      "desc": "Returns the gamma function for each element in a vector."
    },
    {
      "name": "func trunc(SIMD4<Float>) -> SIMD4<Float>",
      "desc": "Returns each element in a vector rounded toward zero to the nearest integer."
    },
    {
      "name": "func acos(simd_float4) -> simd_float4",
      "desc": "Returns the arccosine of each element in a vector."
    },
    {
      "name": "func asin(simd_float4) -> simd_float4",
      "desc": "Returns the arcsine of each element in a vector."
    },
    {
      "name": "func atan(simd_float4) -> simd_float4",
      "desc": "Returns the arctangent of each element in a vector."
    },
    {
      "name": "func atan2(simd_float4, simd_float4) -> simd_float4",
      "desc": "Returns the arctangent of each pair of corresponding elements in two vectors."
    },
    {
      "name": "func cos(simd_float4) -> simd_float4",
      "desc": "Returns the cosine of each element in a vector."
    },
    {
      "name": "func cospi(simd_float4) -> simd_float4",
      "desc": "Returns the cosine of each element in a vector multiplied by pi."
    },
    {
      "name": "func sin(simd_float4) -> simd_float4",
      "desc": "Returns the sine of each element in a vector."
    },
    {
      "name": "func sinpi(simd_float4) -> simd_float4",
      "desc": "Returns the sine of each element in a vector multiplied by pi."
    },
    {
      "name": "func tan(simd_float4) -> simd_float4",
      "desc": "Returns the tangent of each element in a vector."
    },
    {
      "name": "func tanpi(simd_float4) -> simd_float4",
      "desc": "Returns the tangent of each element in a vector multiplied by pi."
    },
    {
      "name": "func isfinite(simd_float4) -> simd_int4",
      "desc": "Returns true for each element that is finite in a vector."
    },
    {
      "name": "func isinf(simd_float4) -> simd_int4",
      "desc": "Returns true for each element that is infinite in a vector."
    },
    {
      "name": "func isnan(simd_float4) -> simd_int4",
      "desc": "Returns true for each element that is not a number (NaN) in a vector."
    },
    {
      "name": "func isnormal(simd_float4) -> simd_int4",
      "desc": "Returns true for each element that is normal in a vector."
    },
    {
      "name": "typealias vector_float4"
    }
  ],
  "declaration": "typealias simd_float4 = SIMD4<Float>"
}