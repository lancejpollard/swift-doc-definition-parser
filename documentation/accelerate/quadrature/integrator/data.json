{
  "path": "/documentation/accelerate/quadrature/integrator",
  "type": "Enumeration",
  "name": "Quadrature.Integrator",
  "desc": "Constants that define different integrators.",
  "items": [
    {
      "name": "case qng",
      "desc": "Non-adaptive automatic integrator that uses Gauss-Kronrod-Patterson quadrature coefficients."
    },
    {
      "name": "static let nonAdaptive: Quadrature.Integrator",
      "desc": "Non-adaptive automatic integrator that uses Gauss-Kronrod-Patterson quadrature coefficients."
    },
    {
      "name": "case qag(pointsPerInterval: Quadrature.QAGPointsPerInterval, maxIntervals: Int)",
      "desc": "Globally adaptive integrator."
    },
    {
      "name": "static func adaptive(pointsPerInterval: Quadrature.QAGPointsPerInterval, maxIntervals: Int) -> Quadrature.Integrator",
      "desc": "Globally adaptive integrator."
    },
    {
      "name": "case qags(maxIntervals: Int)",
      "desc": "Globally adaptive integrator that is based on 21-point or 15-point Gauss–Kronrod quadrature within each subinterval."
    },
    {
      "name": "static func adaptiveWithSingularities(maxIntervals: Int) -> Quadrature.Integrator",
      "desc": "Globally adaptive integrator that is based on 21-point or 15-point Gauss–Kronrod quadrature within each subinterval."
    }
  ],
  "declaration": "enum Quadrature.Integrator"
}