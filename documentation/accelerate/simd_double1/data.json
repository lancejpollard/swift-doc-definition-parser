{
  "path": "/documentation/accelerate/simd_double1",
  "type": "Type Alias",
  "name": "simd_double1",
  "desc": "A vector of one 64-bit floating-point element.",
  "items": [
    {
      "name": "func step(Double, edge: Double) -> Double"
    },
    {
      "name": "func simd_step(Double, Double) -> Double"
    },
    {
      "name": "func simd_clamp(Double, Double, Double) -> Double",
      "desc": "Returns each element in a vector clamped to a specified range."
    },
    {
      "name": "func simd_fract(Double) -> Double",
      "desc": "Returns the fractional part of each element in a vector."
    },
    {
      "name": "func sign(Double) -> Double",
      "desc": "Returns the sign of each element in a vector."
    },
    {
      "name": "func simd_sign(Double) -> Double",
      "desc": "Returns the sign of each element in a vector."
    },
    {
      "name": "func simd_smoothstep(Double, Double, Double) -> Double",
      "desc": "Returns an elementwise smoothly interpolated value between two vectors."
    },
    {
      "name": "func simd_mix(Double, Double, Double) -> Double",
      "desc": "Returns an elementwise linearly interpolated value between two vectors."
    },
    {
      "name": "func min(SIMD4<Double>, Double) -> SIMD4<Double>",
      "desc": "Returns the minimum value of each element in a vector."
    },
    {
      "name": "func simd_min(Double, Double) -> Double",
      "desc": "Returns the minimum value of each element in a vector."
    },
    {
      "name": "func max(SIMD2<Double>, Double) -> SIMD2<Double>",
      "desc": "Returns the maximum value of each element in a vector."
    },
    {
      "name": "func simd_max(Double, Double) -> Double",
      "desc": "Returns the maximum value of each element in a vector."
    },
    {
      "name": "func simd_muladd(Double, Double, Double) -> Double",
      "desc": "Returns the multiply-add result for corresponding elements in three vectors."
    },
    {
      "name": "func recip(Double) -> Double",
      "desc": "Returns the reciprocal of each element in a vector."
    },
    {
      "name": "func simd_recip(Double) -> Double",
      "desc": "Returns the reciprocal of each element in a vector."
    },
    {
      "name": "func simd_fast_recip(Double) -> Double",
      "desc": "Returns the fast reciprocal of each element in a vector."
    },
    {
      "name": "func simd_precise_recip(Double) -> Double",
      "desc": "Returns the precise reciprocal of each element in a vector."
    },
    {
      "name": "func rsqrt(Double) -> Double",
      "desc": "Returns the reciprocal square root of each element in a vector."
    },
    {
      "name": "func simd_rsqrt(Double) -> Double",
      "desc": "Returns the reciprocal square root of each element in a vector."
    },
    {
      "name": "func simd_fast_rsqrt(Double) -> Double",
      "desc": "Returns the fast reciprocal square root of each element in a vector."
    },
    {
      "name": "func simd_precise_rsqrt(Double) -> Double",
      "desc": "Returns the precise reciprocal square root of each element in a vector."
    }
  ],
  "declaration": "typealias simd_double1 = Double"
}