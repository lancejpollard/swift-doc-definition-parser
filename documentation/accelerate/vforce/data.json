{
  "path": "/documentation/accelerate/vforce",
  "type": "Enumeration",
  "name": "vForce",
  "desc": "An enumeration that acts as a namespace for Swift overlays to vForce.",
  "items": [
    {
      "name": "static func acos<U>(U) -> [Double]",
      "desc": "Returns the arccosine of each element in a vector of double-precision values."
    },
    {
      "name": "static func acos<U>(U) -> [Float]",
      "desc": "Returns the arccosine of each element in a vector of single-precision values."
    },
    {
      "name": "static func acos<U, V>(U, result: inout V)",
      "desc": "Calculates the arccosine of each element in a vector of double-precision values."
    },
    {
      "name": "static func acos<U, V>(U, result: inout V)",
      "desc": "Calculates the arccosine of each element in a vector of single-precision values."
    },
    {
      "name": "static func acosh<U>(U) -> [Double]",
      "desc": "Returns the inverse hyperbolic cosine of each element in a vector of double-precision values."
    },
    {
      "name": "static func acosh<U>(U) -> [Float]",
      "desc": "Returns the inverse hyperbolic cosine of each element in a vector of single-precision values."
    },
    {
      "name": "static func acosh<U, V>(U, result: inout V)",
      "desc": "Calculates the inverse hyperbolic cosine of each element in a vector of double-precision values."
    },
    {
      "name": "static func acosh<U, V>(U, result: inout V)",
      "desc": "Calculates the inverse hyperbolic cosine of each element in a vector of single-precision values."
    },
    {
      "name": "static func asin<U>(U) -> [Double]",
      "desc": "Returns the arcsine of each element in a vector of double-precision values."
    },
    {
      "name": "static func asin<U>(U) -> [Float]",
      "desc": "Returns the arcsine of each element in a vector of single-precision values."
    },
    {
      "name": "static func asin<U, V>(U, result: inout V)",
      "desc": "Calculates the arcsine of each element in a vector of double-precision values."
    },
    {
      "name": "static func asin<U, V>(U, result: inout V)",
      "desc": "Calculates the arcsine of each element in a vector of single-precision values."
    },
    {
      "name": "static func asinh<U>(U) -> [Double]",
      "desc": "Returns the inverse hyperbolic sine of each element in a vector of double-precision values."
    },
    {
      "name": "static func asinh<U>(U) -> [Float]",
      "desc": "Returns the inverse hyperbolic sine of each element in a vector of single-precision values."
    },
    {
      "name": "static func asinh<U, V>(U, result: inout V)",
      "desc": "Calculates the inverse hyperbolic sine of each element in a vector of double-precision values."
    },
    {
      "name": "static func asinh<U, V>(U, result: inout V)",
      "desc": "Calculates the inverse hyperbolic sine of each element in a vector of single-precision values."
    },
    {
      "name": "static func atan<U>(U) -> [Double]",
      "desc": "Returns the arctangent of each element in a vector of double-precision values."
    },
    {
      "name": "static func atan<U>(U) -> [Float]",
      "desc": "Returns the arctangent of each element in a vector of single-precision values."
    },
    {
      "name": "static func atan<U, V>(U, result: inout V)",
      "desc": "Calculates the arctangent of each element in a vector of double-precision values."
    },
    {
      "name": "static func atan<U, V>(U, result: inout V)",
      "desc": "Calculates the arctangent of each element in a vector of single-precision values."
    },
    {
      "name": "static func atanh<U>(U) -> [Double]",
      "desc": "Returns the inverse hyperbolic tangent of each element in a vector of double-precision values."
    },
    {
      "name": "static func atanh<U>(U) -> [Float]",
      "desc": "Returns the inverse hyperbolic tangent of each element in a vector of single-precision values."
    },
    {
      "name": "static func atanh<U, V>(U, result: inout V)",
      "desc": "Calculates the inverse hyperbolic tangent of each element in a vector of double-precision values."
    },
    {
      "name": "static func atanh<U, V>(U, result: inout V)",
      "desc": "Calculates the inverse hyperbolic tangent of each element in a vector of single-precision values."
    },
    {
      "name": "static func ceil<U>(U) -> [Double]",
      "desc": "Returns the ceiling of each element in a vector of double-precision values."
    },
    {
      "name": "static func ceil<U>(U) -> [Float]",
      "desc": "Returns the ceiling of each element in a vector of single-precision values."
    },
    {
      "name": "static func ceil<U, V>(U, result: inout V)",
      "desc": "Calculates the ceiling of each element in a vector of double-precision values."
    },
    {
      "name": "static func ceil<U, V>(U, result: inout V)",
      "desc": "Calculates the ceiling of each element in a vector of single-precision values."
    },
    {
      "name": "static func copysign<U, V>(magnitudes: U, signs: V) -> [Double]",
      "desc": "Returns each single-precision element in the magnitudes vector, setting its sign to the corresponding elements in the signs vector."
    },
    {
      "name": "static func copysign<U, V>(magnitudes: U, signs: V) -> [Float]",
      "desc": "Returns each single-precision element in the magnitudes vector, setting its sign to the corresponding elements in the signs vector."
    },
    {
      "name": "static func copysign<T, U, V>(magnitudes: T, signs: U, result: inout V)",
      "desc": "Calculates each double-precision element in the magnitudes vector, setting its sign to the corresponding elements in the signs vector."
    },
    {
      "name": "static func copysign<T, U, V>(magnitudes: T, signs: U, result: inout V)",
      "desc": "Calculates each single-precision element in the magnitudes vector, setting its sign to the corresponding elements in the signs vector."
    },
    {
      "name": "static func cos<U>(U) -> [Double]",
      "desc": "Returns the cosine of each element in a vector of double-precision values."
    },
    {
      "name": "static func cos<U>(U) -> [Float]",
      "desc": "Returns the cosine of each element in a vector of single-precision values."
    },
    {
      "name": "static func cos<U, V>(U, result: inout V)",
      "desc": "Calculates the cosine of each element in a vector of double-precision values."
    },
    {
      "name": "static func cos<U, V>(U, result: inout V)",
      "desc": "Calculates the cosine of each element in a vector of single-precision values."
    },
    {
      "name": "static func cosPi<U>(U) -> [Double]",
      "desc": "Returns the cosine of pi, multiplied by each element in a vector of double-precision values."
    },
    {
      "name": "static func cosPi<U>(U) -> [Float]",
      "desc": "Returns the cosine of pi, multiplied by each element in a vector of single-precision values."
    },
    {
      "name": "static func cosPi<U, V>(U, result: inout V)",
      "desc": "Calculates the cosine of pi, multiplied by each element in a vector of double-precision values."
    },
    {
      "name": "static func cosPi<U, V>(U, result: inout V)",
      "desc": "Calculates the cosine of pi, multiplied by each element in a vector of single-precision values."
    },
    {
      "name": "static func cosh<U>(U) -> [Double]",
      "desc": "Returns the hyperbolic cosine of each element in a vector of double-precision values."
    },
    {
      "name": "static func cosh<U>(U) -> [Float]",
      "desc": "Returns the hyperbolic cosine of each element in a vector of single-precision values."
    },
    {
      "name": "static func cosh<U, V>(U, result: inout V)",
      "desc": "Calculates the hyperbolic cosine of each element in a vector of double-precision values."
    },
    {
      "name": "static func cosh<U, V>(U, result: inout V)",
      "desc": "Calculates the hyperbolic cosine of each element in a vector of single-precision values."
    },
    {
      "name": "static func exp<U>(U) -> [Double]",
      "desc": "Returns the e, raised to the power of each element in a vector of double-precision values."
    },
    {
      "name": "static func exp<U>(U) -> [Float]",
      "desc": "Returns the e, raised to the power of each element in a vector of single-precision values."
    },
    {
      "name": "static func exp<U, V>(U, result: inout V)",
      "desc": "Calculates the e, raised to the power of each element in a vector of double-precision values."
    },
    {
      "name": "static func exp<U, V>(U, result: inout V)",
      "desc": "Calculates the e, raised to the power of each element in a vector of single-precision values."
    },
    {
      "name": "static func exp2<U>(U) -> [Double]",
      "desc": "Returns the 2, raised to the power of each element in a vector of double-precision values."
    },
    {
      "name": "static func exp2<U>(U) -> [Float]",
      "desc": "Returns the 2, raised to the power of each element in a vector of single-precision values."
    },
    {
      "name": "static func exp2<U, V>(U, result: inout V)",
      "desc": "Calculates the 2, raised to the power of each element in a vector of double-precision values."
    },
    {
      "name": "static func exp2<U, V>(U, result: inout V)",
      "desc": "Calculates the 2, raised to the power of each element in a vector of single-precision values."
    },
    {
      "name": "static func expm1<U>(U) -> [Double]",
      "desc": "Returns the eˣ-1 for each element in a vector of double-precision values."
    },
    {
      "name": "static func expm1<U>(U) -> [Float]",
      "desc": "Returns the eˣ-1 for each element in a vector of single-precision values."
    },
    {
      "name": "static func expm1<U, V>(U, result: inout V)",
      "desc": "Calculates the eˣ-1 for each element in a vector of double-precision values."
    },
    {
      "name": "static func expm1<U, V>(U, result: inout V)",
      "desc": "Calculates the eˣ-1 for each element in a vector of single-precision values."
    },
    {
      "name": "static func floor<U>(U) -> [Double]",
      "desc": "Returns the floor of each element in a vector of double-precision values."
    },
    {
      "name": "static func floor<U>(U) -> [Float]",
      "desc": "Returns the floor of each element in a vector of single-precision values."
    },
    {
      "name": "static func floor<U, V>(U, result: inout V)",
      "desc": "Calculates the floor of each element in a vector of double-precision values."
    },
    {
      "name": "static func floor<U, V>(U, result: inout V)",
      "desc": "Calculates the floor of each element in a vector of single-precision values."
    },
    {
      "name": "static func log10<U>(U) -> [Double]",
      "desc": "Returns the base 10 logarithm of each element in a vector of double-precision values."
    },
    {
      "name": "static func log10<U>(U) -> [Float]",
      "desc": "Returns the base 10 logarithm of each element in a vector of single-precision values."
    },
    {
      "name": "static func log10<U, V>(U, result: inout V)",
      "desc": "Calculates the base 10 logarithm of each element in a vector of double-precision values."
    },
    {
      "name": "static func log10<U, V>(U, result: inout V)",
      "desc": "Calculates the base 10 logarithm of each element in a vector of single-precision values."
    },
    {
      "name": "static func log2<U>(U) -> [Double]",
      "desc": "Returns the base 2 logarithm of each element in a vector of double-precision values."
    },
    {
      "name": "static func log2<U>(U) -> [Float]",
      "desc": "Returns the base 2 logarithm of each element in a vector of single-precision values."
    },
    {
      "name": "static func log2<U, V>(U, result: inout V)",
      "desc": "Calculates the base 2 logarithm of each element in a vector of double-precision values."
    },
    {
      "name": "static func log2<U, V>(U, result: inout V)",
      "desc": "Calculates the base 2 logarithm of each element in a vector of single-precision values."
    },
    {
      "name": "static func logb<U>(U) -> [Double]",
      "desc": "Returns the unbiased exponent of each element in a vector of double-precision values."
    },
    {
      "name": "static func logb<U>(U) -> [Float]",
      "desc": "Returns the unbiased exponent of each element in a vector of double-precision values."
    },
    {
      "name": "static func logb<U, V>(U, result: inout V)",
      "desc": "Calculates the unbiased exponent of each element in a vector of double-precision values."
    },
    {
      "name": "static func logb<U, V>(U, result: inout V)",
      "desc": "Calculates the unbiased exponent of each element in a vector of single-precision values."
    },
    {
      "name": "static func nearestInteger<U>(U) -> [Double]",
      "desc": "Returns the nearest integer to each element in a vector of double-precision values."
    },
    {
      "name": "static func nearestInteger<U>(U) -> [Float]",
      "desc": "Returns the nearest integer to each element in a vector of single-precision values."
    },
    {
      "name": "static func nearestInteger<U, V>(U, result: inout V)",
      "desc": "Calculates the nearest integer to each element in a vector of double-precision values."
    },
    {
      "name": "static func nearestInteger<U, V>(U, result: inout V)",
      "desc": "Calculates the nearest integer to each element in a vector of double-precision values."
    },
    {
      "name": "static func pow<U, V>(bases: U, exponents: V) -> [Double]",
      "desc": "Returns each double-precision element in the bases vector, raised to the power of the corresponding element in the exponents vector."
    },
    {
      "name": "static func pow<U, V>(bases: U, exponents: V) -> [Float]",
      "desc": "Returns each single-precision element in the bases vector, raised to the power of the corresponding element in the exponents vector."
    },
    {
      "name": "static func pow<T, U, V>(bases: T, exponents: U, result: inout V)",
      "desc": "Calculates each double-precision element in the bases vector, raised to the power of the corresponding element in the exponents vector."
    },
    {
      "name": "static func pow<T, U, V>(bases: T, exponents: U, result: inout V)",
      "desc": "Calculates each single-precision element in the bases vector, raised to the power of the corresponding element in the exponents vector."
    },
    {
      "name": "static func reciprocal<U>(U) -> [Double]",
      "desc": "Returns the reciprocal of each element in a vector of double-precision values."
    },
    {
      "name": "static func reciprocal<U>(U) -> [Float]",
      "desc": "Returns the reciprocal of each element in a vector of single-precision values."
    },
    {
      "name": "static func reciprocal<U, V>(U, result: inout V)",
      "desc": "Calculates the reciprocal of each element in a vector of double-precision values."
    },
    {
      "name": "static func reciprocal<U, V>(U, result: inout V)",
      "desc": "Calculates the reciprocal of each element in a vector of single-precision values."
    },
    {
      "name": "static func remainder<U, V>(dividends: U, divisors: V) -> [Double]",
      "desc": "Returns the remainder of the double-precision elements in dividends divided by the elements in divisors, using truncating division."
    },
    {
      "name": "static func remainder<U, V>(dividends: U, divisors: V) -> [Float]",
      "desc": "Returns the remainder of the single-precision elements in dividends divided by the elements in divisors, using truncating division."
    },
    {
      "name": "static func remainder<T, U, V>(dividends: T, divisors: U, result: inout V)",
      "desc": "Calculates the remainder of the double-precision elements in dividends divided by the elements in divisors, using truncating division."
    },
    {
      "name": "static func remainder<T, U, V>(dividends: T, divisors: U, result: inout V)",
      "desc": "Calculates the remainder of the single-precision elements in dividends divided by the elements in divisors, using truncating division."
    },
    {
      "name": "static func rsqrt<U>(U) -> [Double]",
      "desc": "Returns the reciprocal square root of each element in a vector of double-precision values."
    },
    {
      "name": "static func rsqrt<U>(U) -> [Float]",
      "desc": "Returns the reciprocal square root of each element in a vector of single-precision values."
    },
    {
      "name": "static func rsqrt<U, V>(U, result: inout V)",
      "desc": "Calculates the reciprocal square root of each element in a vector of double-precision values."
    },
    {
      "name": "static func rsqrt<U, V>(U, result: inout V)",
      "desc": "Calculates the reciprocal square root of each element in a vector of single-precision values."
    },
    {
      "name": "static func sin<U>(U) -> [Double]",
      "desc": "Returns the sine of each element in a vector of double-precision values."
    },
    {
      "name": "static func sin<U>(U) -> [Float]",
      "desc": "Returns the sine of each element in a vector of single-precision values."
    },
    {
      "name": "static func sin<U, V>(U, result: inout V)",
      "desc": "Calculates the sine of each element in a vector of double-precision values."
    },
    {
      "name": "static func sin<U, V>(U, result: inout V)",
      "desc": "Calculates the sine of each element in a vector of single-precision values."
    },
    {
      "name": "static func sinPi<U>(U) -> [Double]",
      "desc": "Returns the sine of pi, multiplied by each element in a vector of double-precision values."
    },
    {
      "name": "static func sinPi<U>(U) -> [Float]",
      "desc": "Returns the sine of pi, multiplied by each element in a vector of single-precision values."
    },
    {
      "name": "static func sinPi<U, V>(U, result: inout V)",
      "desc": "Calculates the sine of pi, multiplied by each element in a vector of double-precision values."
    },
    {
      "name": "static func sinPi<U, V>(U, result: inout V)",
      "desc": "Calculates the sine of pi, multiplied by each element in a vector of single-precision values."
    },
    {
      "name": "static func sincos<T, U, V>(T, sinResult: inout U, cosResult: inout V)",
      "desc": "Calculates the sine and cosine of each element in a vector of double-precision values."
    },
    {
      "name": "static func sincos<T, U, V>(T, sinResult: inout U, cosResult: inout V)",
      "desc": "Calculates the sine and cosine of each element in a vector of double-precision values."
    },
    {
      "name": "static func sinh<U>(U) -> [Double]",
      "desc": "Returns the hyperbolic sine of each element in a vector of double-precision values."
    },
    {
      "name": "static func sinh<U>(U) -> [Float]",
      "desc": "Returns the hyperbolic sine of each element in a vector of single-precision values."
    },
    {
      "name": "static func sinh<U, V>(U, result: inout V)",
      "desc": "Calculates the hyperbolic sine of each element in a vector of double-precision values."
    },
    {
      "name": "static func sinh<U, V>(U, result: inout V)",
      "desc": "Calculates the hyperbolic sine of each element in a vector of single-precision values."
    },
    {
      "name": "static func sqrt<U>(U) -> [Double]",
      "desc": "Returns the square root of each element in a vector of double-precision values."
    },
    {
      "name": "static func sqrt<U>(U) -> [Float]",
      "desc": "Returns the square root each element in a vector of single-precision values."
    },
    {
      "name": "static func sqrt<U, V>(U, result: inout V)",
      "desc": "Calculates the square root of each element in a vector of double-precision values."
    },
    {
      "name": "static func sqrt<U, V>(U, result: inout V)",
      "desc": "Calculates the square root of each element in a vector of single-precision values."
    },
    {
      "name": "static func tan<U>(U) -> [Double]",
      "desc": "Returns the tangent of each element in a vector of double-precision values."
    },
    {
      "name": "static func tan<U>(U) -> [Float]",
      "desc": "Returns the tangent of each element in a vector of single-precision values."
    },
    {
      "name": "static func tan<U, V>(U, result: inout V)",
      "desc": "Calculates the tangent of each element in a vector of double-precision values."
    },
    {
      "name": "static func tan<U, V>(U, result: inout V)",
      "desc": "Calculates the tangent of each element in a vector of single-precision values."
    },
    {
      "name": "static func tanPi<U>(U) -> [Double]",
      "desc": "Returns the tangent of pi, multiplied by each element in a vector of double-precision values."
    },
    {
      "name": "static func tanPi<U>(U) -> [Float]",
      "desc": "Returns the tangent of pi, multiplied by each element in a vector of single-precision values."
    },
    {
      "name": "static func tanPi<U, V>(U, result: inout V)",
      "desc": "Calculates the tangent of pi, multiplied by each element in a vector of double-precision values."
    },
    {
      "name": "static func tanPi<U, V>(U, result: inout V)",
      "desc": "Calculates the tangent of pi, multiplied by each element in a vector of single-precision values."
    },
    {
      "name": "static func tanh<U>(U) -> [Double]",
      "desc": "Returns the hyperbolic tangent of each element in a vector of double-precision values."
    },
    {
      "name": "static func tanh<U>(U) -> [Float]",
      "desc": "Returns the hyperbolic tangent of each element in a vector of single-precision values."
    },
    {
      "name": "static func tanh<U, V>(U, result: inout V)",
      "desc": "Calculates the hyperbolic tangent of each element in a vector of double-precision values."
    },
    {
      "name": "static func tanh<U, V>(U, result: inout V)",
      "desc": "Calculates the hyperbolic tangent of each element in a vector of single-precision values."
    },
    {
      "name": "static func trunc<U>(U) -> [Double]",
      "desc": "Returns the integer truncation of each element in a vector of double-precision values."
    },
    {
      "name": "static func trunc<U>(U) -> [Float]",
      "desc": "Returns the integer truncation of each element in a vector of single-precision values."
    },
    {
      "name": "static func trunc<U, V>(U, result: inout V)",
      "desc": "Calculates the integer truncation of each element in a vector of double-precision values."
    },
    {
      "name": "static func trunc<U, V>(U, result: inout V)",
      "desc": "Calculates the integer truncation of each element in a vector of single-precision values."
    },
    {
      "name": "static func truncatingRemainder<U, V>(dividends: U, divisors: V) -> [Double]",
      "desc": "Returns the remainder of the double-precision elements in dividends divided by the elements in divisors, using truncating division."
    },
    {
      "name": "static func truncatingRemainder<U, V>(dividends: U, divisors: V) -> [Float]",
      "desc": "Returns the remainder of the single-precision elements in dividends divided by the elements in divisors, using truncating division."
    },
    {
      "name": "static func truncatingRemainder<T, U, V>(dividends: T, divisors: U, result: inout V)",
      "desc": "Calculates the remainder of the double-precision elements in dividends divided by the elements in divisors, using truncating division."
    },
    {
      "name": "static func truncatingRemainder<T, U, V>(dividends: T, divisors: U, result: inout V)",
      "desc": "Calculates the remainder of the single-precision elements in dividends divided by the elements in divisors, using truncating division."
    },
    {
      "name": "static func atan2<U, V>(x: U, y: V) -> [Double]",
      "desc": "Returns the arctangent of each pair of elements in two vectors of double-precision values."
    },
    {
      "name": "static func atan2<U, V>(x: U, y: V) -> [Float]",
      "desc": "Returns the arctangent of each pair of elements in two vectors of single-precision values."
    },
    {
      "name": "static func atan2<T, U, V>(x: T, y: U, result: inout V)",
      "desc": "Calculates the arctangent of each pair of elements in two vectors of double-precision values."
    },
    {
      "name": "static func atan2<T, U, V>(x: T, y: U, result: inout V)",
      "desc": "Calculates the arctangent of each pair of elements in two vectors of single-precision values."
    },
    {
      "name": "static func log<U>(U) -> [Double]",
      "desc": "Returns the natural logarithm for each element in a vector of double-precision values."
    },
    {
      "name": "static func log<U>(U) -> [Float]",
      "desc": "Returns the natural logarithm for each element in a vector of single-precision values."
    },
    {
      "name": "static func log<U, V>(U, result: inout V)",
      "desc": "Calculates the natural logarithm for each element in a vector of double-precision values."
    },
    {
      "name": "static func log<U, V>(U, result: inout V)",
      "desc": "Calculates the natural logarithm for each element in a vector of single-precision values."
    },
    {
      "name": "static func log1p<U>(U) -> [Double]",
      "desc": "Returns log(1+x) for each element in a vector of double-precision values."
    },
    {
      "name": "static func log1p<U>(U) -> [Float]",
      "desc": "Returns log(1+x) for each element in a vector of single-precision values."
    },
    {
      "name": "static func log1p<U, V>(U, result: inout V)",
      "desc": "Calculates log(1+x) for each element in a vector of double-precision values."
    },
    {
      "name": "static func log1p<U, V>(U, result: inout V)",
      "desc": "Calculates log(1+x) for each element in a vector of single-precision values."
    }
  ],
  "declaration": "enum vForce"
}