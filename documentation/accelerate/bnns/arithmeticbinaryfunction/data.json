{
  "path": "/documentation/accelerate/bnns/arithmeticbinaryfunction",
  "type": "Enumeration",
  "name": "BNNS.ArithmeticBinaryFunction",
  "desc": "Constants that describe binary arithmetic functions.",
  "items": [
    {
      "name": "case add",
      "desc": "An operation that calculates the element-wise sum of its two inputs."
    },
    {
      "name": "case subtract",
      "desc": "An operation that calculates the element-wise difference of its two inputs."
    },
    {
      "name": "case divide",
      "desc": "An operation that calculates the element-wise division of its two inputs."
    },
    {
      "name": "case divideNoNaN",
      "desc": "An operation that calculates the element-wise division of its two inputs and returns zero if the second input is zero."
    },
    {
      "name": "case multiply",
      "desc": "An operation that calculates the element-wise product of its two inputs."
    },
    {
      "name": "case multiplyNoNaN",
      "desc": "An operation that calculates the element-wise product of its two inputs and returns zero if the second input is zero, even if the first input is NaN or infinity."
    },
    {
      "name": "case pow",
      "desc": "An operation that calculates the element-wise first input raised to the power of its second input."
    },
    {
      "name": "case max",
      "desc": "An operation that calculates the element-wise maximum of its two inputs."
    },
    {
      "name": "case min",
      "desc": "An operation that calculates the element-wise minimum of its two inputs."
    },
    {
      "name": "typealias BNNS.ArithmeticBinaryFunction.AllCases"
    },
    {
      "name": "static var allCases: [BNNS.ArithmeticBinaryFunction]"
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "static func != (BNNS.ArithmeticBinaryFunction, BNNS.ArithmeticBinaryFunction) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "static func == (BNNS.ArithmeticBinaryFunction, BNNS.ArithmeticBinaryFunction) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    }
  ],
  "declaration": "enum ArithmeticBinaryFunction",
  "conformsTo": [
    "CaseIterable"
  ]
}