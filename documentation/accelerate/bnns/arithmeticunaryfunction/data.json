{
  "path": "/documentation/accelerate/bnns/arithmeticunaryfunction",
  "type": "Enumeration",
  "name": "BNNS.ArithmeticUnaryFunction",
  "desc": "Constants that describe unary arithmetic functions.",
  "items": [
    {
      "name": "case acos",
      "desc": "An operation that calculates the element-wise inverse cosine of its input."
    },
    {
      "name": "case acosh",
      "desc": "An operation that calculates the element-wise inverse hyperbolic cosine of its input."
    },
    {
      "name": "case asin",
      "desc": "An operation that calculates the element-wise inverse sine of its input."
    },
    {
      "name": "case asinh",
      "desc": "An operation that calculates the element-wise inverse hyperbolic sine of its input."
    },
    {
      "name": "case atan",
      "desc": "An operation that calculates the element-wise inverse tangent of its input."
    },
    {
      "name": "case atanh",
      "desc": "An operation that calculates the element-wise inverse hyperbolic tangent of its input."
    },
    {
      "name": "case ceil",
      "desc": "An operation that calculates the element-wise ceiling of its input."
    },
    {
      "name": "case cos",
      "desc": "An operation that calculates the element-wise cosine of its input."
    },
    {
      "name": "case cosh",
      "desc": "An operation that calculates the element-wise hyperbolic cosine of its input."
    },
    {
      "name": "case exp",
      "desc": "An operation that calculates the element-wise result of e raised to the power of its input."
    },
    {
      "name": "case exp2",
      "desc": "An operation that calculates the element-wise result of 2 raised to the power of its input."
    },
    {
      "name": "case floor",
      "desc": "An operation that calculates the element-wise floor of its input."
    },
    {
      "name": "case log",
      "desc": "An operation that calculates the element-wise natural logarithm of its input."
    },
    {
      "name": "case log2",
      "desc": "An operation that calculates the element-wise base 2 logarithm of its input."
    },
    {
      "name": "case reciprocalSquareRoot",
      "desc": "An operation that calculates the element-wise reciprocal square root of its input."
    },
    {
      "name": "case round",
      "desc": "An operation that calculates the element-wise rounding of its input."
    },
    {
      "name": "case sin",
      "desc": "An operation that calculates the element-wise sine of its input."
    },
    {
      "name": "case sinh",
      "desc": "An operation that calculates the element-wise hyperbolic sine of its input."
    },
    {
      "name": "case squareRoot",
      "desc": "An operation that calculates the element-wise square root of its input."
    },
    {
      "name": "case tan",
      "desc": "An operation that calculates the element-wise tangent of its input."
    },
    {
      "name": "case tanh",
      "desc": "An operation that calculates the element-wise hyperbolic tangent of its input."
    },
    {
      "name": "var bnnsArithmeticFunction: BNNSArithmeticFunction",
      "desc": "The underlying arithmetic function."
    },
    {
      "name": "typealias BNNS.ArithmeticUnaryFunction.AllCases"
    },
    {
      "name": "static var allCases: [BNNS.ArithmeticUnaryFunction]"
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "static func != (BNNS.ArithmeticUnaryFunction, BNNS.ArithmeticUnaryFunction) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "static func == (BNNS.ArithmeticUnaryFunction, BNNS.ArithmeticUnaryFunction) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    }
  ],
  "declaration": "enum ArithmeticUnaryFunction",
  "conformsTo": [
    "CaseIterable"
  ]
}