{
  "path": "/documentation/realitykit/animationtimingfunction",
  "type": "Structure",
  "name": "AnimationTimingFunction",
  "desc": "The pacing of an animation transition.",
  "items": [
    {
      "name": "static var `default`: AnimationTimingFunction",
      "desc": "A timing function that produces the default curve for the transition."
    },
    {
      "name": "static var easeIn: AnimationTimingFunction",
      "desc": "A timing function that produces a gradual starting transition."
    },
    {
      "name": "static var easeInOut: AnimationTimingFunction",
      "desc": "A timing function that produces a gradual starting and ending transition."
    },
    {
      "name": "static var easeOut: AnimationTimingFunction",
      "desc": "A timing function that produces a gradual ending transition."
    },
    {
      "name": "static var linear: AnimationTimingFunction",
      "desc": "A timing function that produces a linear transition."
    },
    {
      "name": "static func cubicBezier(controlPoint1: SIMD2<Float>, controlPoint2: SIMD2<Float>) -> AnimationTimingFunction",
      "desc": "Creates a timing function that accelerates and then decelerates towards the target value with the cubic bezier shape specified by two control points."
    },
    {
      "name": "static func == (AnimationTimingFunction, AnimationTimingFunction) -> Bool",
      "desc": "Indicates whether two animation timing functions are equal."
    },
    {
      "name": "static func != (AnimationTimingFunction, AnimationTimingFunction) -> Bool",
      "desc": "Indicates whether two animation timing functions are not equal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the timing function by feeding them into the given hash function."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hashed value of the timing function."
    }
  ],
  "declaration": "struct AnimationTimingFunction",
  "conformsTo": [
    "Hashable"
  ]
}