{
  "path": "/documentation/realitykit/audiofileresource",
  "type": "Class",
  "name": "AudioFileResource",
  "desc": "An audio resource that you load from a file or from a URL.",
  "items": [
    {
      "name": "static func load(named: String, in: Bundle?, inputMode: AudioResource.InputMode, loadingStrategy: AudioFileResource.LoadingStrategy, shouldLoop: Bool) -> AudioFileResource",
      "desc": "Loads an audio file resource from a bundle synchronously."
    },
    {
      "name": "static func loadAsync(named: String, in: Bundle?, inputMode: AudioResource.InputMode, loadingStrategy: AudioFileResource.LoadingStrategy, shouldLoop: Bool) -> LoadRequest<AudioFileResource>",
      "desc": "Loads an audio file resource from a bundle file asynchronously."
    },
    {
      "name": "static func load(contentsOf: URL, withName: String?, inputMode: AudioResource.InputMode, loadingStrategy: AudioFileResource.LoadingStrategy, shouldLoop: Bool) -> AudioFileResource",
      "desc": "Loads an audio file resource from a URL synchronously."
    },
    {
      "name": "static func loadAsync(contentsOf: URL, withName: String?, inputMode: AudioResource.InputMode, loadingStrategy: AudioFileResource.LoadingStrategy, shouldLoop: Bool) -> LoadRequest<AudioFileResource>",
      "desc": "Loads an audio file resource from a URL asynchronously."
    },
    {
      "name": "var loadingStrategy: AudioFileResource.LoadingStrategy",
      "desc": "The strategy a resource uses to access data."
    },
    {
      "name": "enum AudioFileResource.LoadingStrategy",
      "desc": "Strategies that the playback controller can use to access a resourceâ€™s data during playback."
    },
    {
      "name": "var shouldLoop: Bool",
      "desc": "A Boolean you set to indicate whether the resource loops during playback."
    }
  ],
  "declaration": "class AudioFileResource : AudioResource",
  "inheritsFrom": [
    "AudioResource"
  ]
}