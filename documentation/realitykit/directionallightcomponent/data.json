{
  "path": "/documentation/realitykit/directionallightcomponent",
  "type": "Structure",
  "name": "DirectionalLightComponent",
  "desc": "A component that defines a directional light source.",
  "items": [
    {
      "name": "init(color: DirectionalLightComponent.Color, intensity: Float, isRealWorldProxy: Bool)",
      "desc": "Creates a directional light with the given configuration."
    },
    {
      "name": "init(color: DirectionalLightComponent.Color, intensity: Float, isRealWorldProxy: Bool)",
      "desc": "Creates a directional light with the given configuration."
    },
    {
      "name": "var color: DirectionalLightComponent.Color",
      "desc": "A color for the directional light."
    },
    {
      "name": "var color: DirectionalLightComponent.Color",
      "desc": "A color for the directional light."
    },
    {
      "name": "typealias DirectionalLightComponent.Color",
      "desc": "A platform-specific type used to define color for a directional light."
    },
    {
      "name": "var intensity: Float",
      "desc": "The intensity of the directional light, measured in lumen per square meter."
    },
    {
      "name": "struct DirectionalLightComponent.Shadow",
      "desc": "Shadow characteristics for a directional light."
    },
    {
      "name": "var isRealWorldProxy: Bool",
      "desc": "A Boolean that you use to control whether the directional light operates as a proxy for a real-world light."
    },
    {
      "name": "static func registerComponent()",
      "desc": "Registers a new component type."
    },
    {
      "name": "static func == (DirectionalLightComponent, DirectionalLightComponent) -> Bool",
      "desc": "Indicates whether two directional light components are equal."
    },
    {
      "name": "static func != (DirectionalLightComponent, DirectionalLightComponent) -> Bool",
      "desc": "Indicates whether two directional light components are not equal."
    }
  ],
  "declaration": "struct DirectionalLightComponent",
  "conformsTo": [
    "Component",
    "Equatable"
  ]
}