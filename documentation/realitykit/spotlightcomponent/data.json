{
  "path": "/documentation/realitykit/spotlightcomponent",
  "type": "Structure",
  "name": "SpotLightComponent",
  "desc": "A component that defines a spotlight source.",
  "items": [
    {
      "name": "init(color: SpotLightComponent.Color, intensity: Float, innerAngleInDegrees: Float, outerAngleInDegrees: Float, attenuationRadius: Float)",
      "desc": "Creates a spotlight with the given parameters."
    },
    {
      "name": "init(color: SpotLightComponent.Color, intensity: Float, innerAngleInDegrees: Float, outerAngleInDegrees: Float, attenuationRadius: Float)",
      "desc": "Creates a spotlight with the given parameters."
    },
    {
      "name": "var color: SpotLightComponent.Color",
      "desc": "A color for the spotlight."
    },
    {
      "name": "var color: SpotLightComponent.Color",
      "desc": "A color for the spotlight."
    },
    {
      "name": "typealias SpotLightComponent.Color",
      "desc": "A platform-specific type used to define color for a spotlight."
    },
    {
      "name": "var intensity: Float",
      "desc": "The intensity of the spotlight measured in lumen."
    },
    {
      "name": "var innerAngleInDegrees: Float",
      "desc": "The inner angle of the spotlight in degrees."
    },
    {
      "name": "var outerAngleInDegrees: Float",
      "desc": "The outer angle of the spotlight in degrees."
    },
    {
      "name": "var attenuationRadius: Float",
      "desc": "The attenuation radius in meters, after which the intensity of the spotlight is zero."
    },
    {
      "name": "struct SpotLightComponent.Shadow",
      "desc": "Characteristics of a shadow for the spotlight."
    },
    {
      "name": "static func registerComponent()",
      "desc": "Registers a new component type."
    },
    {
      "name": "static func == (SpotLightComponent, SpotLightComponent) -> Bool",
      "desc": "Indicates whether two spotlight components are equal."
    },
    {
      "name": "static func != (SpotLightComponent, SpotLightComponent) -> Bool",
      "desc": "Indicates whether two spotlight components are not equal."
    }
  ],
  "declaration": "struct SpotLightComponent",
  "conformsTo": [
    "Component",
    "Equatable"
  ]
}