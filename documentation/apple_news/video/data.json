{
  "path": "/documentation/apple_news/video",
  "type": "Object",
  "name": "Video",
  "desc": "The component for adding a video.",
  "items": [
    {
      "name": "role",
      "desc": "Always video for this component."
    },
    {
      "name": "URL",
      "desc": "The URL of a video file that can be played using AVPlayer. HTTP Live Streaming (HLS) is highly recommended (.M3U8). For more information about HLS, see HTTP Live Streaming,"
    },
    {
      "name": "accessibilityCaption",
      "desc": "A caption that describes the content of the video. The text is used for VoiceOver for iOS, VoiceOver for iPadOS, and VoiceOver for macOS. If accessibilityCaption is not provided, the caption value is used for VoiceOver for iOS, VoiceOver for iPadOS, and VoiceOver for macOS."
    },
    {
      "name": "anchor",
      "desc": "An object that defines vertical alignment with another component."
    },
    {
      "name": "animation",
      "desc": "An object that defines an animation to be applied to the component.The none value is used for conditional design elements. Adding it here has no effect."
    },
    {
      "name": "aspectRatio",
      "desc": "The aspect ratio of the video: width divided by height. The aspect ratio determines the height of the video player.When this property is omitted, the video player will have a 16:9 aspect ratio (1.777), and videos with ratios other than 16:9 will automatically be letterboxed."
    },
    {
      "name": "behavior",
      "desc": "An object that defines behavior for a component, like Parallax or Springy.The none value is used for conditional design elements. Adding it here has no effect."
    },
    {
      "name": "caption",
      "desc": "A caption that describes the content of the video file. This text is also used by VoiceOver for iOS, VoiceOver for iPadOS, and VoiceOver for macOS if accessibilityCaption is not provided, or it can be shown when the video cannot be played."
    },
    {
      "name": "conditional",
      "desc": "An instance or array of component properties that can be applied conditionally, and the conditions that cause them to be applied."
    },
    {
      "name": "explicitContent",
      "desc": "A Boolean value that indicates that the video or its still image may contain explicit content."
    },
    {
      "name": "hidden",
      "desc": "A Boolean value that determines whether the component is hidden."
    },
    {
      "name": "identifier",
      "desc": "An optional unique identifier for this component. If used, this identifier must be unique across the entire document. You will need an identifier for your component if you want to anchor other components to it."
    },
    {
      "name": "layout",
      "desc": "An inline ComponentLayout object that contains layout information, or a string reference to a ComponentLayout object that is defined at the top level of the document. If layout is not defined, size and position will be based on various factors, such as the device type, the length of the content, and the role of this component."
    },
    {
      "name": "stillURL",
      "desc": "The URL of an image file that should be shown when the video has not yet been played.Image URLs can begin with http://, https://, or bundle://. If the image URL begins with bundle://, the image file must be in the same directory as the document.Image filenames should be properly encoded as URLs. See Preparing Image, Video, Audio, Music, and ARKit Assets."
    },
    {
      "name": "style",
      "desc": "An inline ComponentStyle object that defines the appearance of this component, or a string reference to a ComponentStyle object that is defined at the top level of the document.The none value is used for conditional design elements. Adding it here has no effect."
    }
  ],
  "inheritsFrom": [
    "Component"
  ]
}