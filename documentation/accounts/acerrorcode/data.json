{
  "path": "/documentation/accounts/acerrorcode",
  "type": "Structure",
  "name": "ACErrorCode",
  "desc": "Codes for errors that may occur.",
  "items": [
    {
      "name": "var ACErrorUnknown: ACErrorCode",
      "desc": "Error code that indicates an unknown error occurred."
    },
    {
      "name": "var ACErrorAccountMissingRequiredProperty: ACErrorCode",
      "desc": "Error code that indicates an account wasn’t saved because a required property is missing."
    },
    {
      "name": "var ACErrorAccountAuthenticationFailed: ACErrorCode",
      "desc": "Error code that indicates an account wasn’t saved because authentication of its credential failed."
    },
    {
      "name": "var ACErrorAccountTypeInvalid: ACErrorCode",
      "desc": "Error code that indicates an account wasn’t saved because its account type is invalid."
    },
    {
      "name": "var ACErrorAccountAlreadyExists: ACErrorCode",
      "desc": "Error code that indicates an account wasn’t added because it already exists."
    },
    {
      "name": "var ACErrorAccountNotFound: ACErrorCode",
      "desc": "Error code that indicates an account wasn’t deleted because it couldn’t be found."
    },
    {
      "name": "var ACErrorPermissionDenied: ACErrorCode",
      "desc": "Error code that indicates the operation failed because the application doesn’t have permission to perform the operation."
    },
    {
      "name": "var ACErrorAccessInfoInvalid: ACErrorCode",
      "desc": "Error code that indicates the client’s access info dictionary has incorrect or missing values."
    },
    {
      "name": "var ACErrorClientPermissionDenied: ACErrorCode",
      "desc": "Error code that indicates the client doesn’t have access to the requested data."
    },
    {
      "name": "var ACErrorAccessDeniedByProtectionPolicy: ACErrorCode",
      "desc": "Error code that indicates due to the current protection policy, the credentials couldn’t be fetched."
    },
    {
      "name": "var ACErrorCredentialNotFound: ACErrorCode",
      "desc": "Error code that indicates no credentials were found."
    },
    {
      "name": "var ACErrorFetchCredentialFailed: ACErrorCode",
      "desc": "Error code that indicates the credentials couldn’t be fetched from Keychain."
    },
    {
      "name": "var ACErrorStoreCredentialFailed: ACErrorCode",
      "desc": "Error code that indicates the credentials couldn’t be stored in Keychain."
    },
    {
      "name": "var ACErrorRemoveCredentialFailed: ACErrorCode",
      "desc": "Error code that indicates the credentials couldn’t be removed from Keychain."
    },
    {
      "name": "var ACErrorUpdatingNonexistentAccount: ACErrorCode",
      "desc": "Error code that indicates an account save failed because the account being updated has been removed."
    },
    {
      "name": "var ACErrorInvalidClientBundleID: ACErrorCode",
      "desc": "Error code that indicates the client making the request doesn’t have a valid bundle ID."
    },
    {
      "name": "var ACErrorDeniedByPlugin: ACErrorCode",
      "desc": "Error code that indicates a plugin prevented the expected action from occurring."
    },
    {
      "name": "var ACErrorCoreDataSaveFailed: ACErrorCode",
      "desc": "Error code that indicates an error occurred while trying to save to a Core Data store."
    },
    {
      "name": "var ACErrorFailedSerializingAccountInfo: ACErrorCode",
      "desc": "Error code that indicates an account’s information couldn’t be serialized."
    },
    {
      "name": "var ACErrorInvalidCommand: ACErrorCode",
      "desc": "Error code that indicates an invalid command was attempted."
    },
    {
      "name": "var ACErrorMissingTransportMessageID: ACErrorCode",
      "desc": "Error code that indicates an expected message identifier wasn’t found while performing a command."
    },
    {
      "name": "var ACErrorCredentialItemNotFound: ACErrorCode",
      "desc": "Error code that indicates a credential item wasn’t saved because it couldn’t be found."
    },
    {
      "name": "var ACErrorCredentialItemNotExpired: ACErrorCode",
      "desc": "Error code that indicates a credential item wasn’t removed because it hasn’t yet expired."
    },
    {
      "name": "init(UInt32)",
      "desc": "Initializes a new error code structure."
    },
    {
      "name": "init(rawValue: UInt32)",
      "desc": "Initializes a new error code structure."
    },
    {
      "name": "var rawValue: UInt32",
      "desc": "The raw integer value of the error code."
    }
  ],
  "declaration": "struct ACErrorCode",
  "conformsTo": [
    "Equatable",
    "RawRepresentable"
  ]
}