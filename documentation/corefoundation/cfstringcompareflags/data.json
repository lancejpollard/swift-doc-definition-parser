{
  "path": "/documentation/corefoundation/cfstringcompareflags",
  "type": "Structure",
  "name": "CFStringCompareFlags",
  "desc": "A CFOptionFlags type for specifying options for string comparison .",
  "items": [
    {
      "name": "init(rawValue: CFOptionFlags)"
    },
    {
      "name": "static var compareAnchored: CFStringCompareFlags",
      "desc": "Performs searching only on characters at the beginning or end of the range."
    },
    {
      "name": "static var compareBackwards: CFStringCompareFlags",
      "desc": "Specifies that the comparison should start at the last elements of the entities being compared (for example, strings or arrays)."
    },
    {
      "name": "static var compareCaseInsensitive: CFStringCompareFlags",
      "desc": "Specifies that the comparison should ignore differences in case between alphabetical characters."
    },
    {
      "name": "static var compareDiacriticInsensitive: CFStringCompareFlags",
      "desc": "Specifies that the comparison should ignore diacritic markers."
    },
    {
      "name": "static var compareForcedOrdering: CFStringCompareFlags",
      "desc": "Specifies that the comparison is forced to return either kCFCompareLessThan or kCFCompareGreaterThan if the strings are equivalent but not strictly equal."
    },
    {
      "name": "static var compareLocalized: CFStringCompareFlags",
      "desc": "Specifies that the comparison should take into account differences related to locale, such as the thousands separator character."
    },
    {
      "name": "static var compareNonliteral: CFStringCompareFlags",
      "desc": "Specifies that loose equivalence is acceptable, especially as pertains to diacritical marks."
    },
    {
      "name": "static var compareNumerically: CFStringCompareFlags",
      "desc": "Specifies that represented numeric values should be used as the basis for comparison and not the actual character values."
    },
    {
      "name": "static var compareWidthInsensitive: CFStringCompareFlags",
      "desc": "Specifies that the comparison should ignore width differences."
    }
  ],
  "declaration": "struct CFStringCompareFlags, @unchecked Sendable",
  "conformsTo": [
    "OptionSet",
    "Sendable"
  ]
}