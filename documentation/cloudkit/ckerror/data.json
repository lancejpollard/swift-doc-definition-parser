{
  "path": "/documentation/cloudkit/ckerror",
  "type": "Structure",
  "name": "CKError",
  "desc": "A type that describes a CloudKit error.",
  "items": [
    {
      "name": "static var accountTemporarilyUnavailable: CKError.Code",
      "desc": "An error that occurs when the user’s iCloud account is temporarily unavailable."
    },
    {
      "name": "static var alreadyShared: CKError.Code",
      "desc": "An error that occurs when CloudKit attempts to share a record with an existing share."
    },
    {
      "name": "static var assetFileModified: CKError.Code",
      "desc": "An error that occurs when the system modifies an asset while saving it."
    },
    {
      "name": "static var assetFileNotFound: CKError.Code",
      "desc": "An error that occurs when the system can’t find the specified asset."
    },
    {
      "name": "static var assetNotAvailable: CKError.Code",
      "desc": "An error that occurs when the system can’t access the specified asset."
    },
    {
      "name": "static var badContainer: CKError.Code",
      "desc": "An error that occurs when you use an unknown or unauthorized container."
    },
    {
      "name": "static var badDatabase: CKError.Code",
      "desc": "An error that occurs when the operation can’t complete for the specified database."
    },
    {
      "name": "static var batchRequestFailed: CKError.Code",
      "desc": "An error that occurs when the system rejects the entire batch of changes."
    },
    {
      "name": "static var changeTokenExpired: CKError.Code",
      "desc": "An error that occurs when the change token expires."
    },
    {
      "name": "static var constraintViolation: CKError.Code",
      "desc": "An error that occurs when the server rejects the request because of a unique constraint violation."
    },
    {
      "name": "static var incompatibleVersion: CKError.Code",
      "desc": "An error that occurs when the current app version is older than the oldest allowed version."
    },
    {
      "name": "static var internalError: CKError.Code",
      "desc": "A nonrecoverable error that CloudKit encounters."
    },
    {
      "name": "static var invalidArguments: CKError.Code",
      "desc": "An error that occurs when the request contains invalid information."
    },
    {
      "name": "static var limitExceeded: CKError.Code",
      "desc": "An error that occurs when a request’s size exceeds the limit."
    },
    {
      "name": "static var managedAccountRestricted: CKError.Code",
      "desc": "An error that occurs when CloudKit rejects a request due to a managed-account restriction."
    },
    {
      "name": "static var missingEntitlement: CKError.Code",
      "desc": "An error that occurs when the app is missing a required entitlement."
    },
    {
      "name": "static var networkFailure: CKError.Code",
      "desc": "An error that occurs when a network is available, but CloudKit is inaccessible."
    },
    {
      "name": "static var networkUnavailable: CKError.Code",
      "desc": "An error that occurs when the network is unavailable."
    },
    {
      "name": "static var notAuthenticated: CKError.Code",
      "desc": "An error that occurs when the user is unauthenticated."
    },
    {
      "name": "static var operationCancelled: CKError.Code",
      "desc": "An error that occurs when an operation cancels."
    },
    {
      "name": "static var partialFailure: CKError.Code",
      "desc": "An error that occurs when an operation completes with partial failures."
    },
    {
      "name": "static var participantMayNeedVerification: CKError.Code",
      "desc": "An error that occurs when the user isn’t a participant of the share."
    },
    {
      "name": "static var permissionFailure: CKError.Code",
      "desc": "An error that occurs when the user doesn’t have permission to save or fetch data."
    },
    {
      "name": "static var quotaExceeded: CKError.Code",
      "desc": "An error that occurs when saving a record exceeds the user’s storage quota."
    },
    {
      "name": "static var referenceViolation: CKError.Code",
      "desc": "An error that occurs when CloudKit can’t find the target of a reference."
    },
    {
      "name": "static var requestRateLimited: CKError.Code",
      "desc": "An error that occurs when CloudKit rate-limits requests."
    },
    {
      "name": "static var serverRecordChanged: CKError.Code",
      "desc": "An error that occurs when CloudKit rejects a record because the server’s version is different."
    },
    {
      "name": "static var serverRejectedRequest: CKError.Code",
      "desc": "An error that occurs when CloudKit rejects the request."
    },
    {
      "name": "static var serverResponseLost: CKError.Code",
      "desc": "An error that occurs when CloudKit is unable to maintain the network connection and provide a response."
    },
    {
      "name": "static var serviceUnavailable: CKError.Code",
      "desc": "An error that occurs when CloudKit is unavailable."
    },
    {
      "name": "static var tooManyParticipants: CKError.Code",
      "desc": "An error that occurs when a share has too many participants."
    },
    {
      "name": "static var unknownItem: CKError.Code",
      "desc": "An error that occurs when the specified record doesn’t exist."
    },
    {
      "name": "static var userDeletedZone: CKError.Code",
      "desc": "An error that occurs when the user deletes a record zone using the Settings app."
    },
    {
      "name": "static var zoneBusy: CKError.Code",
      "desc": "An error that occurs when the server is too busy to handle the record zone operation."
    },
    {
      "name": "static var zoneNotFound: CKError.Code",
      "desc": "An error that occurs when the specified record zone doesn’t exist."
    },
    {
      "name": "enum CKError.Code",
      "desc": "The error codes that CloudKit returns."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The error’s domain."
    },
    {
      "name": "var errorCode: Int",
      "desc": "The error’s code."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "The dictionary that provides additional context about the error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "The localized description of the error."
    },
    {
      "name": "var partialErrorsByItemID: [AnyHashable : Error]?",
      "desc": "The dictionary that contains errors that relate to individual record operations."
    },
    {
      "name": "var ancestorRecord: CKRecord?",
      "desc": "The original version of the record."
    },
    {
      "name": "var clientRecord: CKRecord?",
      "desc": "The local version of the record that includes any changes."
    },
    {
      "name": "var serverRecord: CKRecord?",
      "desc": "The server’s version of the record."
    },
    {
      "name": "var retryAfterSeconds: Double?",
      "desc": "The number of seconds to wait before you retry the request."
    },
    {
      "name": "static func == (CKError, CKError) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two errors are equal."
    },
    {
      "name": "static func != (CKError, CKError) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two errors are unequal."
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "func hash(into: inout Hasher)"
    }
  ],
  "declaration": "struct CKError"
}