{
  "path": "/documentation/createml/mlhandactionclassifier/datasource",
  "type": "Enumeration",
  "name": "MLHandActionClassifier.DataSource",
  "desc": "A hand action classifier dataset that contains annotated videos or hand joint location data.",
  "items": [
    {
      "name": "case labeledDirectories(at: URL)",
      "desc": "Creates a data source from a folder with subfolders that each contain videos of a hand action."
    },
    {
      "name": "case labeledFiles(at: URL)",
      "desc": "Creates a data source from a folder that contains videos, each named after the hand action they represent."
    },
    {
      "name": "case directoryWithVideosAndAnnotation(at: URL, annotationFile: URL, videoColumn: String, labelColumn: String, startTimeColumn: String?, endTimeColumn: String?)",
      "desc": "Creates a data source from a folder that contains videos and an annotation file."
    },
    {
      "name": "case labeledVideoDataFrame(DataFrame, videoColumn: String, labelColumn: String, startTimeColumn: String?, endTimeColumn: String?)",
      "desc": "Creates a data source from a data frame that contains the location and annotation for a set of video files."
    },
    {
      "name": "case labeledVideoData(table: MLDataTable, videoColumn: String, labelColumn: String, startTimeColumn: String?, endTimeColumn: String?)",
      "desc": "Creates a data source from a data table that contains the location and annotation for a set of video files."
    },
    {
      "name": "case labeledKeypointsDataFrame(DataFrame, sessionIdColumn: String, labelColumn: String, featureColumn: String)",
      "desc": "Creates a data source from a data frame of hand action observations that each contain the locations of each hand joint and an annotation."
    },
    {
      "name": "case labeledKeypointsData(table: MLDataTable, sessionIdColumn: String, labelColumn: String, featureColumn: String)",
      "desc": "Creates a data source from a data table of hand action observations that each contain the locations of each hand joint and an annotation."
    },
    {
      "name": "func labeledMedia() -> [String : [URL]]",
      "desc": "Generates a dictionary that contains the data source’s classification labels paired with an array of URLs to the label’s video files."
    },
    {
      "name": "func videosWithAnnotations() -> MLDataTable",
      "desc": "Generates a data table that contains a column for the data source’s video file URLs and a column of annotations."
    },
    {
      "name": "func keypointsWithAnnotations(targetFrameRate: Double) -> MLDataTable",
      "desc": "Generates a data table that contains a column for hand joint locations and a column of hand action annotations."
    },
    {
      "name": "func stratifiedSplit(proportions: [Double], seed: Int, labelColumn: String) -> MLDataTable",
      "desc": "Generates a data table by splitting the data source into strata."
    }
  ],
  "declaration": "enum DataSource"
}