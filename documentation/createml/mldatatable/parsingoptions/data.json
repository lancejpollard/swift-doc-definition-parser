{
  "path": "/documentation/createml/mldatatable/parsingoptions",
  "type": "Structure",
  "name": "MLDataTable.ParsingOptions",
  "desc": "The options for parsing a comma-separated values (CSV) file into a data table for a machine learning model.",
  "items": [
    {
      "name": "init(containsHeader: Bool, delimiter: String, comment: String, escape: String, doubleQuote: Bool, quote: String, skipInitialSpaces: Bool, missingValues: [String], lineTerminator: String, selectColumns: [String]?, maxRows: Int?, skipRows: Int)",
      "desc": "Creates CSV parsing options."
    },
    {
      "name": "var containsHeader: Bool",
      "desc": "A Boolean value indicating whether an input CSV file contains a header."
    },
    {
      "name": "var delimiter: String",
      "desc": "The character that separates the data fields in a CSV file."
    },
    {
      "name": "var lineTerminator: String",
      "desc": "The character that represents the end of a line in a CSV file."
    },
    {
      "name": "var escape: String",
      "desc": "The character that marks a C escape sequence in a CSV file."
    },
    {
      "name": "var quote: String",
      "desc": "The character that represents a quote (\") in a CSV file."
    },
    {
      "name": "var doubleQuote: Bool",
      "desc": "A Boolean value indicating whether two consecutive quotes (\"\") represent a single quote (\") in a CSV file."
    },
    {
      "name": "var skipRows: Int",
      "desc": "The number of starting rows to skip from the start of a CSV file."
    },
    {
      "name": "var skipInitialSpaces: Bool",
      "desc": "A Boolean value indicating whether to ignore leading spaces of a data field."
    },
    {
      "name": "var comment: String",
      "desc": "The character that marks the beginning of a comment, or text to ignore, in a CSV file."
    },
    {
      "name": "var maxRows: Int?",
      "desc": "The maximum number of rows to import form a CSV file; otherwise nil to import all rows."
    },
    {
      "name": "var selectColumns: [String]?",
      "desc": "The list of column names to import from a CSV file; otherwise nil to import all columns."
    },
    {
      "name": "var missingValues: [String]",
      "desc": "A list of strings that represent missing values in a CSV file."
    }
  ],
  "declaration": "struct MLDataTable.ParsingOptions"
}