{
  "path": "/documentation/createml/mlprogress/metric",
  "type": "Enumeration",
  "name": "MLProgress.Metric",
  "desc": "Metrics you use to evaluate a model’s performance during a training session.",
  "items": [
    {
      "name": "case accuracy",
      "desc": "The metric for the model’s accuracy."
    },
    {
      "name": "case contentLoss",
      "desc": "The metric for the style transfer model’s content loss."
    },
    {
      "name": "case loss",
      "desc": "The metric for the model’s loss."
    },
    {
      "name": "case styleLoss",
      "desc": "The metric for the style transfer model’s style loss."
    },
    {
      "name": "case stylizedImageURL",
      "desc": "The location of the stylized image content in the file system."
    },
    {
      "name": "case validationAccuracy",
      "desc": "The metric for the model’s validation accuracy."
    },
    {
      "name": "case validationLoss",
      "desc": "The metric for the model’s validation loss."
    },
    {
      "name": "static var allCases: [MLProgress.Metric]",
      "desc": "A collection of all available progress metric keys."
    },
    {
      "name": "typealias MLProgress.Metric.AllCases",
      "desc": "A type that represents a collection of all the metric keys."
    },
    {
      "name": "init?(rawValue: String)",
      "desc": "Creates a progress metric key from a string."
    },
    {
      "name": "var rawValue: String",
      "desc": "The underlying raw string value of the progress metric key."
    },
    {
      "name": "typealias MLProgress.Metric.RawValue",
      "desc": "Defines the underlying type of the progress metric key as a string."
    },
    {
      "name": "func encode(to: Encoder)",
      "desc": "Encodes this value into the given encoder, when the type’s RawValue is String."
    },
    {
      "name": "init(from: Decoder)",
      "desc": "Creates a new instance by decoding from the given decoder, when the type’s RawValue is String."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the progress metric key by feeding them into the hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value of the progress metric key."
    },
    {
      "name": "static func != (MLProgress.Metric, MLProgress.Metric) -> Bool",
      "desc": "Returns a Boolean value that indicates whether the two progress metric keys aren’t equal."
    }
  ],
  "declaration": "enum MLProgress.Metric : String, Codable, Hashable, CaseIterable",
  "conformsTo": [
    "CaseIterable",
    "Decodable",
    "Encodable",
    "Hashable"
  ]
}