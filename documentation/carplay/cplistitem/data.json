{
  "path": "/documentation/carplay/cplistitem",
  "type": "Class",
  "name": "CPListItem",
  "desc": "A selectable row in a list template.",
  "items": [
    {
      "name": "init(text: String?, detailText: String?)",
      "desc": "Creates a list item with primary and secondary text."
    },
    {
      "name": "init(text: String?, detailText: String?, image: UIImage?)",
      "desc": "Creates a list item with primary text, secondary text, and an image."
    },
    {
      "name": "init(text: String?, detailText: String?, image: UIImage?, accessoryImage: UIImage?, accessoryType: CPListItemAccessoryType)",
      "desc": "Creates a list item that displays an accessory beside its content."
    },
    {
      "name": "var isEnabled: Bool",
      "desc": "A Boolean value that indicates if the item is enabled."
    },
    {
      "name": "var handler: ((CPSelectableListItem, () -> Void) -> Void)?",
      "desc": "An optional closure that CarPlay invokes when the user selects the list item."
    },
    {
      "name": "var userInfo: Any?",
      "desc": "An opaque value for the list item."
    },
    {
      "name": "var accessoryType: CPListItemAccessoryType",
      "desc": "The accessory that the list item displays in its trailing region."
    },
    {
      "name": "enum CPListItemAccessoryType",
      "desc": "The accessory types that a list item can display."
    },
    {
      "name": "var accessoryImage: UIImage?",
      "desc": "The image that the list item displays in its trailing region."
    },
    {
      "name": "func setAccessoryImage(UIImage?)",
      "desc": "Updates the list item’s accessory image."
    },
    {
      "name": "var text: String?",
      "desc": "The list item’s primary text."
    },
    {
      "name": "func setText(String)",
      "desc": "Updates the list item’s primary text."
    },
    {
      "name": "var detailText: String?",
      "desc": "The list item’s secondary text."
    },
    {
      "name": "func setDetailText(String?)",
      "desc": "Updates the list item’s secondary text."
    },
    {
      "name": "var image: UIImage?",
      "desc": "The image that the list item displays in its leading region."
    },
    {
      "name": "func setImage(UIImage?)",
      "desc": "Updates the list item’s image."
    },
    {
      "name": "class var maximumImageSize: CGSize",
      "desc": "The maximum size of a list item’s image and accessory image."
    },
    {
      "name": "var isExplicitContent: Bool",
      "desc": "A Boolean value that determines whether the list item displays its explicit content indicator."
    },
    {
      "name": "var isPlaying: Bool",
      "desc": "A Boolean value that determines whether the list item displays its Now Playing indicator."
    },
    {
      "name": "var playingIndicatorLocation: CPListItemPlayingIndicatorLocation",
      "desc": "The location where the list item displays its Now Playing indicator."
    },
    {
      "name": "enum CPListItemPlayingIndicatorLocation",
      "desc": "The locations where a list item can display the Now Playing indicator."
    },
    {
      "name": "var playbackProgress: CGFloat",
      "desc": "The playback progress status for the content that the list item represents."
    },
    {
      "name": "enum CPListItem.AssistantCellPosition",
      "desc": "Constants to specify the position of the assistant cell."
    },
    {
      "name": "enum CPListItem.AssistantCellVisibility",
      "desc": "Constants to specify the visibility of the assistant cell."
    }
  ],
  "declaration": "class CPListItem : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "CPSelectableListItem"
  ]
}