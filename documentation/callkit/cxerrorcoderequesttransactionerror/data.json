{
  "path": "/documentation/callkit/cxerrorcoderequesttransactionerror",
  "type": "Structure",
  "name": "CXErrorCodeRequestTransactionError",
  "desc": "No overview available.",
  "items": [
    {
      "name": "var errorCode: Int",
      "desc": "An integer value that indicates an error."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "A dictionary that contains additional information about the error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized string that describes the error."
    },
    {
      "name": "static var unknown: CXErrorCodeRequestTransactionError.Code",
      "desc": "An unknown error occurred."
    },
    {
      "name": "static var unentitled: CXErrorCodeRequestTransactionError.Code",
      "desc": "The app doesn’t have the entitlement to perform the actions in the requested transaction."
    },
    {
      "name": "static var unknownCallProvider: CXErrorCodeRequestTransactionError.Code",
      "desc": "The controller can’t find a call provider to perform the actions in the requested transaction."
    },
    {
      "name": "static var emptyTransaction: CXErrorCodeRequestTransactionError.Code",
      "desc": "The requested transaction doesn’t contain any actions."
    },
    {
      "name": "static var unknownCallUUID: CXErrorCodeRequestTransactionError.Code",
      "desc": "The requested transaction contains call actions that reference an unknown UUID."
    },
    {
      "name": "static var callUUIDAlreadyExists: CXErrorCodeRequestTransactionError.Code",
      "desc": "The requested transaction contains call actions that reference a UUID that already exists."
    },
    {
      "name": "static var invalidAction: CXErrorCodeRequestTransactionError.Code",
      "desc": "The requested transaction contains an invalid action."
    },
    {
      "name": "static var maximumCallGroupsReached: CXErrorCodeRequestTransactionError.Code",
      "desc": "Performing the requested transaction exceeds the maximum number of call groups for the provider."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The domain for call request transaction errors."
    },
    {
      "name": "static func != (CXErrorCodeRequestTransactionError, CXErrorCodeRequestTransactionError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func == (CXErrorCodeRequestTransactionError, CXErrorCodeRequestTransactionError) -> Bool"
    },
    {
      "name": "enum CXErrorCodeRequestTransactionError.Code",
      "desc": "Error codes for the CallKit Constants error domain."
    }
  ],
  "declaration": "struct CXErrorCodeRequestTransactionError"
}