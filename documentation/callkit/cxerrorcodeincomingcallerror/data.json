{
  "path": "/documentation/callkit/cxerrorcodeincomingcallerror",
  "type": "Structure",
  "name": "CXErrorCodeIncomingCallError",
  "desc": "Codes for errors that occur during incoming calls.",
  "items": [
    {
      "name": "var errorCode: Int",
      "desc": "An integer value that indicates an error."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "A dictionary that contains additional information about the error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized string that describes the error."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The domain of the error."
    },
    {
      "name": "static var callUUIDAlreadyExists: CXErrorCodeIncomingCallError.Code",
      "desc": "The incoming call UUID already exists."
    },
    {
      "name": "static var filteredByBlockList: CXErrorCodeIncomingCallError.Code",
      "desc": "The system is filtering the incoming call because the user is blocking it."
    },
    {
      "name": "static var filteredByDoNotDisturb: CXErrorCodeIncomingCallError.Code",
      "desc": "The system is filtering the incoming call because Do Not Disturb is active and the incoming caller isn’t a VIP."
    },
    {
      "name": "static var unentitled: CXErrorCodeIncomingCallError.Code",
      "desc": "The app doesn’t have the entitlement to receive incoming calls."
    },
    {
      "name": "static var unknown: CXErrorCodeIncomingCallError.Code",
      "desc": "An unknown error occurred."
    },
    {
      "name": "static func != (CXErrorCodeIncomingCallError, CXErrorCodeIncomingCallError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func == (CXErrorCodeIncomingCallError, CXErrorCodeIncomingCallError) -> Bool"
    },
    {
      "name": "enum CXErrorCodeIncomingCallError.Code",
      "desc": "Codes for errors that occur during incoming calls."
    }
  ],
  "declaration": "struct CXErrorCodeIncomingCallError"
}