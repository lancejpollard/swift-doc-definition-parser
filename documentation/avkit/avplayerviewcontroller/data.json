{
  "path": "/documentation/avkit/avplayerviewcontroller",
  "type": "Class",
  "name": "AVPlayerViewController",
  "desc": "A view controller that displays content from a player and presents a native user interface to control playback.",
  "items": [
    {
      "name": "var player: AVPlayer?",
      "desc": "The player object that provides the media content for the view controller to display."
    },
    {
      "name": "var delegate: AVPlayerViewControllerDelegate?",
      "desc": "The delegate object for the player view controller."
    },
    {
      "name": "protocol AVPlayerViewControllerDelegate",
      "desc": "A protocol that defines the methods to implement to respond to player view controller events."
    },
    {
      "name": "var videoBounds: CGRect",
      "desc": "The size and position of the video image within the bounds of the view controller’s view."
    },
    {
      "name": "var videoGravity: AVLayerVideoGravity",
      "desc": "A string that specifies how the video displays within the bounds of the view controller’s view."
    },
    {
      "name": "var appliesPreferredDisplayCriteriaAutomatically: Bool",
      "desc": "A Boolean value that indicates whether the view controller automatically sets the screen’s display criteria to match that of the currently playing asset."
    },
    {
      "name": "var playbackControlsIncludeTransportBar: Bool",
      "desc": "A Boolean value that indicates whether the player shows the transport bar and related controls."
    },
    {
      "name": "var playbackControlsIncludeInfoViews: Bool",
      "desc": "A Boolean value that indicates whether the player presents video metadata, navigation markers, and playback settings views when the user requests them."
    },
    {
      "name": "var transportBarIncludesTitleView: Bool",
      "desc": "A Boolean value that indicates whether the player user interface shows the title view above the scrubber."
    },
    {
      "name": "var transportBarCustomMenuItems: [UIMenuElement]",
      "desc": "An array of actions and menus to display with the default player controls."
    },
    {
      "name": "var customInfoViewControllers: [UIViewController]",
      "desc": "An array of view controllers to display as content tabs in the player user interface."
    },
    {
      "name": "var infoViewActions: [UIAction]",
      "desc": "An array of actions to present in the Info content view."
    },
    {
      "name": "var contextualActions: [UIAction]",
      "desc": "An array of action controls to present contextually during playback."
    },
    {
      "name": "var customOverlayViewController: UIViewController?",
      "desc": "A view controller that presents custom content over the player view."
    },
    {
      "name": "var unobscuredContentGuide: UILayoutGuide",
      "desc": "A layout guide that represents an area that fixed-position playback controls don’t obscure when visible."
    },
    {
      "name": "var allowsPictureInPicturePlayback: Bool",
      "desc": "A Boolean value that indicates whether the player allows Picture in Picture playback."
    },
    {
      "name": "var canStartPictureInPictureAutomaticallyFromInline: Bool",
      "desc": "A Boolean value that indicates whether Picture in Picture starts automatically when transitioning to the background when the view controller presents its content inline."
    },
    {
      "name": "var entersFullScreenWhenPlaybackBegins: Bool",
      "desc": "A Boolean value that determines whether the player automatically displays in full screen when the user taps the play button."
    },
    {
      "name": "var exitsFullScreenWhenPlaybackEnds: Bool",
      "desc": "A Boolean value that indicates whether the player exits full-screen mode when playback ends."
    },
    {
      "name": "var requiresLinearPlayback: Bool",
      "desc": "A Boolean value that determines whether the player allows the user to skip media content."
    },
    {
      "name": "var isSkipForwardEnabled: Bool",
      "desc": "A Boolean value that indicates whether forward-skipping is available."
    },
    {
      "name": "var isSkipBackwardEnabled: Bool",
      "desc": "A Boolean value that indicates whether backward-skipping is available."
    },
    {
      "name": "var skippingBehavior: AVPlayerViewControllerSkippingBehavior",
      "desc": "The behavior that skipping gestures perform."
    },
    {
      "name": "enum AVPlayerViewControllerSkippingBehavior",
      "desc": "Constants that represent the player view controller’s skipping behavior."
    },
    {
      "name": "var isReadyForDisplay: Bool",
      "desc": "A Boolean value that indicates whether the player item’s first video frame is ready for display."
    },
    {
      "name": "var contentOverlayView: UIView?",
      "desc": "A view that displays between the video content and the playback controls."
    },
    {
      "name": "var showsTimecodes: Bool",
      "desc": "A Boolean value that determines whether the player view displays timecodes, if available."
    },
    {
      "name": "var showsPlaybackControls: Bool",
      "desc": "A Boolean value that indicates whether the player view controller shows playback controls."
    },
    {
      "name": "var contentProposalViewController: AVContentProposalViewController!",
      "desc": "The view controller responsible for the presentation of content proposals."
    },
    {
      "name": "class AVContentProposalViewController",
      "desc": "A view controller that proposes content to watch next."
    },
    {
      "name": "var allowedSubtitleOptionLanguages: [String]?",
      "desc": "An array of language codes that restrict the set of subtitle languages available to the user."
    },
    {
      "name": "var requiresFullSubtitles: Bool",
      "desc": "A Boolean value that indicates whether the user can disable the display of subtitles."
    },
    {
      "name": "var updatesNowPlayingInfoCenter: Bool",
      "desc": "A Boolean value that indicates whether the view controller updates Now Playing information."
    },
    {
      "name": "var pixelBufferAttributes: [String : Any]?",
      "desc": "The pixel buffer attributes of the video frames the view controller presents."
    }
  ],
  "declaration": "class AVPlayerViewController : UIViewController",
  "inheritsFrom": [
    "UIViewController"
  ]
}