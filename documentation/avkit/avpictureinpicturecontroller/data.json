{
  "path": "/documentation/avkit/avpictureinpicturecontroller",
  "type": "Class",
  "name": "AVPictureInPictureController",
  "desc": "A controller that responds to user-initiated Picture in Picture playback of video in a floating, resizable window.",
  "items": [
    {
      "name": "init(contentSource: AVPictureInPictureController.ContentSource)",
      "desc": "Creates a Picture in Picture controller with a content source."
    },
    {
      "name": "init?(playerLayer: AVPlayerLayer)",
      "desc": "Creates a Picture in Picture controller with a player layer."
    },
    {
      "name": "var contentSource: AVPictureInPictureController.ContentSource?",
      "desc": "The source of the controller’s content."
    },
    {
      "name": "class AVPictureInPictureController.ContentSource",
      "desc": "An object that represents the source of the content to present in Picture in Picture."
    },
    {
      "name": "var playerLayer: AVPlayerLayer",
      "desc": "The layer that displays the video content."
    },
    {
      "name": "var requiresLinearPlayback: Bool",
      "desc": "A Boolean value that determines whether the controller allows the user to skip media content."
    },
    {
      "name": "var delegate: AVPictureInPictureControllerDelegate?",
      "desc": "A delegate object for a Picture in Picture controller."
    },
    {
      "name": "protocol AVPictureInPictureControllerDelegate",
      "desc": "A protocol to adopt to respond to Picture in Picture events."
    },
    {
      "name": "class func isPictureInPictureSupported() -> Bool",
      "desc": "Returns a Boolean value that indicates whether the current device supports Picture in Picture."
    },
    {
      "name": "var isPictureInPicturePossible: Bool",
      "desc": "A Boolean value that indicates whether Picture in Picture playback is currently possible."
    },
    {
      "name": "var isPictureInPictureActive: Bool",
      "desc": "A Boolean value that indicates whether the Picture in Picture window is onscreen."
    },
    {
      "name": "var isPictureInPictureSuspended: Bool",
      "desc": "A Boolean value that indicates whether the system suspends the controller’s Picture in Picture window."
    },
    {
      "name": "var canStopPictureInPicture: Bool",
      "desc": "A Boolean value that indicates whether Picture in Picture is active and is able to stop."
    },
    {
      "name": "var canStartPictureInPictureAutomaticallyFromInline: Bool",
      "desc": "A Boolean value that indicates whether Picture in Picture starts automatically when the controller embeds its content inline and the app transitions to the background."
    },
    {
      "name": "func startPictureInPicture()",
      "desc": "Starts Picture in Picture, if possible."
    },
    {
      "name": "func stopPictureInPicture()",
      "desc": "Stops Picture in Picture, if active."
    },
    {
      "name": "class var pictureInPictureButtonStartImage: UIImage",
      "desc": "A system-default template image for the button that starts Picture in Picture in your app."
    },
    {
      "name": "class var pictureInPictureButtonStopImage: UIImage",
      "desc": "A system-default template image for the button that stops Picture in Picture in your app."
    },
    {
      "name": "class func pictureInPictureButtonStartImage(compatibleWith: UITraitCollection?) -> UIImage",
      "desc": "Returns a system-default template image that’s compatible with a trait collection for the button that starts Picture in Picture in your app."
    },
    {
      "name": "class func pictureInPictureButtonStopImage(compatibleWith: UITraitCollection?) -> UIImage",
      "desc": "Returns a system-default template image that’s compatible with a trait collection for the button that stops Picture in Picture in your app."
    }
  ],
  "declaration": "class AVPictureInPictureController : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}