{
  "path": "/documentation/quartzcore/catransaction",
  "type": "Class",
  "name": "CATransaction",
  "desc": "A mechanism for grouping multiple layer-tree operations into atomic updates to the render tree.",
  "items": [
    {
      "name": "class func begin()",
      "desc": "Begin a new transaction for the current thread."
    },
    {
      "name": "class func commit()",
      "desc": "Commit all changes made during the current transaction."
    },
    {
      "name": "class func flush()",
      "desc": "Flushes any extant implicit transaction."
    },
    {
      "name": "class func animationDuration() -> CFTimeInterval",
      "desc": "Returns the animation duration used by all animations within this transaction group."
    },
    {
      "name": "class func setAnimationDuration(CFTimeInterval)",
      "desc": "Sets the animation duration used by all animations within this transaction group."
    },
    {
      "name": "class func animationTimingFunction() -> CAMediaTimingFunction?",
      "desc": "Returns the timing function used for all animations within this transaction group."
    },
    {
      "name": "class func setAnimationTimingFunction(CAMediaTimingFunction?)",
      "desc": "Sets the timing function used for all animations within this transaction group."
    },
    {
      "name": "class func disableActions() -> Bool",
      "desc": "Returns whether actions triggered as a result of property changes made within this transaction group are suppressed."
    },
    {
      "name": "class func setDisableActions(Bool)",
      "desc": "Sets whether actions triggered as a result of property changes made within this transaction group are suppressed."
    },
    {
      "name": "class func completionBlock() -> (() -> Void)?",
      "desc": "Returns the completion block object."
    },
    {
      "name": "class func setCompletionBlock((() -> Void)?)",
      "desc": "Sets the completion block object."
    },
    {
      "name": "class func lock()",
      "desc": "Attempts to acquire a recursive spin-lock lock, ensuring that returned layer values are valid until unlocked."
    },
    {
      "name": "class func unlock()",
      "desc": "Relinquishes a previously acquired transaction lock."
    },
    {
      "name": "class func setValue(Any?, forKey: String)",
      "desc": "Sets the arbitrary keyed-data for the specified key."
    },
    {
      "name": "class func value(forKey: String) -> Any?",
      "desc": "Returns the arbitrary keyed-data specified by the given key."
    }
  ],
  "declaration": "class CATransaction : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}