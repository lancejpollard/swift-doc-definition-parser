{
  "path": "/documentation/quartzcore/caemitterlayeremittershape",
  "type": "Structure",
  "name": "CAEmitterLayerEmitterShape",
  "desc": "No overview available.",
  "items": [
    {
      "name": "init(rawValue: String)"
    },
    {
      "name": "static let circle: CAEmitterLayerEmitterShape",
      "desc": "Particles are emitted from a circle centered at (emitterPosition.x, emitterPosition.y, emitterZPosition) of radius emitterSize.width."
    },
    {
      "name": "static let cuboid: CAEmitterLayerEmitterShape",
      "desc": "Particles are emitted from a cuboid (3D rectangle) with opposite corners: [emitterPosition.x - emitterSize.width/2, emitterPosition.y - emitterSize.height/2, emitterZPosition - emitterDepth/2], [emitterPosition.x + emitterSize.width/2, emitterPosition.y + emitterSize.height/2, emitterZPosition+emitterDepth/2]."
    },
    {
      "name": "static let line: CAEmitterLayerEmitterShape",
      "desc": "Particles are emitted along a line from (emitterPosition.x - emitterSize.width/2, emitterPosition.y, emitterZPosition) to (emitterPosition.x + emitterSize.width/2, emitterPosition.y, emitterZPosition)."
    },
    {
      "name": "static let point: CAEmitterLayerEmitterShape",
      "desc": "Particles are emitted from a single point at (emitterPosition.x, emitterPosition.y, emitterZPosition)"
    },
    {
      "name": "static let rectangle: CAEmitterLayerEmitterShape",
      "desc": "Particles are emitted from a rectangle with opposite corners [emitterPosition.x - emitterSize.width/2, emitterPosition.y - emitterSize.height/2, emitterZPosition], [emitterPosition.x + emitterSize.width/2, emitterPosition.y + emitterSize.height/2, emitterZPosition]."
    },
    {
      "name": "static let sphere: CAEmitterLayerEmitterShape",
      "desc": "Particles are emitted from a sphere centered at (emitterPosition.x, emitterPosition.y, emitterZPosition) of radius emitterSize.width."
    }
  ],
  "declaration": "struct CAEmitterLayerEmitterShape, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}