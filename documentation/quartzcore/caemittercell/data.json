{
  "path": "/documentation/quartzcore/caemittercell",
  "type": "Class",
  "name": "CAEmitterCell",
  "desc": "The definition of a particle emitted by a CAEmitterLayer.",
  "items": [
    {
      "name": "var contents: Any?",
      "desc": "An object that provides the contents of the layer. Animatable."
    },
    {
      "name": "var contentsRect: CGRect",
      "desc": "A rectangle (in the unit coordinate space) that specifies the portion of contents that the receiver should draw. Animatable."
    },
    {
      "name": "var emitterCells: [CAEmitterCell]?",
      "desc": "An optional array containing the sub-cells of this cell."
    },
    {
      "name": "var isEnabled: Bool",
      "desc": "A Boolean value indicating whether or not cells from this emitter are rendered."
    },
    {
      "name": "var color: CGColor?",
      "desc": "The color of each emitted object. Animatable."
    },
    {
      "name": "var redRange: Float",
      "desc": "The amount by which the red color component of the cell can vary. Animatable."
    },
    {
      "name": "var greenRange: Float",
      "desc": "The amount by which the green color component of the cell can vary. Animatable."
    },
    {
      "name": "var blueRange: Float",
      "desc": "The amount by which the blue color component of the cell can vary. Animatable."
    },
    {
      "name": "var alphaRange: Float",
      "desc": "The amount by which the alpha component of the cell can vary. Animatable."
    },
    {
      "name": "var redSpeed: Float",
      "desc": "The speed, in seconds, at which the red color component changes over the lifetime of the cell. Animatable."
    },
    {
      "name": "var greenSpeed: Float",
      "desc": "The speed, in seconds, at which the green color component changes over the lifetime of the cell. Animatable."
    },
    {
      "name": "var blueSpeed: Float",
      "desc": "The speed, in seconds, at which the blue color component changes over the lifetime of the cell. Animatable."
    },
    {
      "name": "var alphaSpeed: Float",
      "desc": "The speed, in seconds, at which the alpha component changes over the lifetime of the cell. Animatable."
    },
    {
      "name": "var magnificationFilter: String",
      "desc": "The filter used when increasing the size of the content."
    },
    {
      "name": "var minificationFilter: String",
      "desc": "The filter used when reducing the size of the content."
    },
    {
      "name": "var minificationFilterBias: Float",
      "desc": "The bias factor used by the minification filter to determine the levels of detail."
    },
    {
      "name": "var scale: CGFloat",
      "desc": "Specifies the scale factor applied to the cell. Animatable."
    },
    {
      "name": "var scaleRange: CGFloat",
      "desc": "Specifies the range over which the scale value can vary. Animatable."
    },
    {
      "name": "var contentsScale: CGFloat",
      "desc": "The scale factor of the cell contents."
    },
    {
      "name": "var name: String?",
      "desc": "The name of the cell."
    },
    {
      "name": "var style: [AnyHashable : Any]?",
      "desc": "An optional dictionary containing additional style values that are not explicitly defined by the receiver."
    },
    {
      "name": "var spin: CGFloat",
      "desc": "The rotational velocity, measured in radians per second, to apply to the cell. Animatable."
    },
    {
      "name": "var spinRange: CGFloat",
      "desc": "The amount by which the spin of the cell can vary over its lifetime. Animatable."
    },
    {
      "name": "var emissionLatitude: CGFloat",
      "desc": "The latitudinal orientation of the emission angle. Animatable."
    },
    {
      "name": "var emissionLongitude: CGFloat",
      "desc": "The longitudinal orientation of the emission angle. Animatable."
    },
    {
      "name": "var emissionRange: CGFloat",
      "desc": "The angle, in radians, defining a cone around the emission angle. Animatable."
    },
    {
      "name": "var lifetime: Float",
      "desc": "The lifetime of the cell, in seconds. Animatable."
    },
    {
      "name": "var lifetimeRange: Float",
      "desc": "The mean value by which the lifetime of the cell can vary. Animatable."
    },
    {
      "name": "var birthRate: Float",
      "desc": "The number of emitted objects created every second. Animatable."
    },
    {
      "name": "var scaleSpeed: CGFloat",
      "desc": "The speed at which the scale changes over the lifetime of the cell. Animatable."
    },
    {
      "name": "var velocity: CGFloat",
      "desc": "The initial velocity of the cell. Animatable."
    },
    {
      "name": "var velocityRange: CGFloat",
      "desc": "The amount by which the velocity of the cell can vary. Animatable."
    },
    {
      "name": "var xAcceleration: CGFloat",
      "desc": "The x component of an acceleration vector applied to cell."
    },
    {
      "name": "var yAcceleration: CGFloat",
      "desc": "The y component of an acceleration vector applied to cell."
    },
    {
      "name": "var zAcceleration: CGFloat",
      "desc": "The z component of an acceleration vector applied to cell."
    },
    {
      "name": "class func defaultValue(forKey: String) -> Any?",
      "desc": "Returns the default value of the property with the specified key."
    },
    {
      "name": "func shouldArchiveValue(forKey: String) -> Bool",
      "desc": "Returns a Boolean value indicating whether the value for a given key should be archived."
    }
  ],
  "declaration": "class CAEmitterCell : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "CAMediaTiming",
    "NSSecureCoding"
  ]
}