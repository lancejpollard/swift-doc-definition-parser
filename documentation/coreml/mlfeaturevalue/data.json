{
  "path": "/documentation/coreml/mlfeaturevalue",
  "type": "Class",
  "name": "MLFeatureValue",
  "desc": "A generic wrapper around an underlying value and the value’s type.",
  "items": [
    {
      "name": "init(int64: Int64)",
      "desc": "Creates a feature value that contains an integer."
    },
    {
      "name": "init(double: Double)",
      "desc": "Creates a feature value that contains a double."
    },
    {
      "name": "init(string: String)",
      "desc": "Creates a feature value that contains a string."
    },
    {
      "name": "init(multiArray: MLMultiArray)",
      "desc": "Creates a feature value that contains a multidimensional array."
    },
    {
      "name": "init<Scalar>(shapedArray: MLShapedArray<Scalar>)",
      "desc": "Creates a feature value that contains a shaped array."
    },
    {
      "name": "init(dictionary: [AnyHashable : NSNumber])",
      "desc": "Creates a feature value that contains a dictionary of numbers."
    },
    {
      "name": "init(sequence: MLSequence)",
      "desc": "Creates a feature value that contains a sequence."
    },
    {
      "name": "init(pixelBuffer: CVPixelBuffer)",
      "desc": "Creates a feature value that contains an image from a pixel buffer."
    },
    {
      "name": "init(cgImage: CGImage, pixelsWide: Int, pixelsHigh: Int, pixelFormatType: OSType, options: [MLFeatureValue.ImageOption : Any]?)",
      "desc": "Creates a feature value that contains an image defined by a core graphics image and its size and pixel format."
    },
    {
      "name": "init(cgImage: CGImage, orientation: CGImagePropertyOrientation, pixelsWide: Int, pixelsHigh: Int, pixelFormatType: OSType, options: [MLFeatureValue.ImageOption : Any]?)",
      "desc": "Creates a feature value that contains an image defined by a core graphics image and its orientation, size, and pixel format."
    },
    {
      "name": "init(cgImage: CGImage, constraint: MLImageConstraint, options: [MLFeatureValue.ImageOption : Any]?)",
      "desc": "Creates a feature value that contains an image defined by a core graphics image and a constraint."
    },
    {
      "name": "init(cgImage: CGImage, orientation: CGImagePropertyOrientation, constraint: MLImageConstraint, options: [MLFeatureValue.ImageOption : Any]?)",
      "desc": "Creates a feature value that contains an image defined by a core graphics image, an orientation, and a constraint."
    },
    {
      "name": "init(imageAt: URL, pixelsWide: Int, pixelsHigh: Int, pixelFormatType: OSType, options: [MLFeatureValue.ImageOption : Any]?)",
      "desc": "Creates a feature value that contains an image defined by an image URL and the image’s size and pixel format."
    },
    {
      "name": "init(imageAt: URL, orientation: CGImagePropertyOrientation, pixelsWide: Int, pixelsHigh: Int, pixelFormatType: OSType, options: [MLFeatureValue.ImageOption : Any]?)",
      "desc": "Creates a feature value that contains an image defined by an image URL and the image’s orientation, size, and pixel format."
    },
    {
      "name": "init(imageAt: URL, constraint: MLImageConstraint, options: [MLFeatureValue.ImageOption : Any]?)",
      "desc": "Creates a feature value that contains an image defined by an image URL and a constraint."
    },
    {
      "name": "init(imageAt: URL, orientation: CGImagePropertyOrientation, constraint: MLImageConstraint, options: [MLFeatureValue.ImageOption : Any]?)",
      "desc": "Creates a feature value that contains an image defined by an image URL, an orientation, and a constraint."
    },
    {
      "name": "class MLImageConstraint",
      "desc": "The width, height, and pixel format constraints of an image feature."
    },
    {
      "name": "struct MLFeatureValue.ImageOption",
      "desc": "The initializer options you use to crop and scale an image when creating an image feature value."
    },
    {
      "name": "init(undefined: MLFeatureType)",
      "desc": "Creates a feature value with a type that represents an undefined or missing value."
    },
    {
      "name": "var type: MLFeatureType",
      "desc": "The type of the feature value."
    },
    {
      "name": "var isUndefined: Bool",
      "desc": "A Boolean value that indicates whether the feature value is undefined or missing."
    },
    {
      "name": "var int64Value: Int64",
      "desc": "The underlying integer of the feature value."
    },
    {
      "name": "var doubleValue: Double",
      "desc": "The underlying double of the feature value."
    },
    {
      "name": "var stringValue: String",
      "desc": "The underlying string of the feature value."
    },
    {
      "name": "var imageBufferValue: CVPixelBuffer?",
      "desc": "The underlying image of the feature value as a pixel buffer."
    },
    {
      "name": "func shapedArrayValue<Scalar>(of: Scalar.Type) -> MLShapedArray<Scalar>?",
      "desc": "Returns the underlying shaped array of the feature value."
    },
    {
      "name": "var multiArrayValue: MLMultiArray?",
      "desc": "The underlying multiarray of the feature value."
    },
    {
      "name": "var sequenceValue: MLSequence?",
      "desc": "The underlying sequence of the feature value."
    },
    {
      "name": "var dictionaryValue: [AnyHashable : NSNumber]",
      "desc": "The underlying dictionary of the feature value."
    },
    {
      "name": "func isEqual(to: MLFeatureValue) -> Bool",
      "desc": "Returns a Boolean value that indicates whether a feature value is equal to another."
    },
    {
      "name": "enum MLFeatureType",
      "desc": "The possible types for feature values, input features, and output features."
    },
    {
      "name": "struct MLShapedArray",
      "desc": "A machine learning collection type that stores scalar values in a multidimensional array."
    },
    {
      "name": "protocol MLShapedArrayProtocol",
      "desc": "An interface that defines a shaped array type."
    },
    {
      "name": "class MLMultiArray",
      "desc": "A machine learning collection type that stores numeric values in an array with multiple dimensions."
    },
    {
      "name": "class MLSequence",
      "desc": "A machine learning collection type that stores a series of strings or integers."
    }
  ],
  "declaration": "class MLFeatureValue : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSSecureCoding"
  ]
}