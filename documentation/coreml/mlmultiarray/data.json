{
  "path": "/documentation/coreml/mlmultiarray",
  "type": "Class",
  "name": "MLMultiArray",
  "desc": "A machine learning collection type that stores numeric values in an array with multiple dimensions.",
  "items": [
    {
      "name": "init<C>(C)",
      "desc": "Creates a multiarray from a collection of integers."
    },
    {
      "name": "init<C>(C)",
      "desc": "Creates a multiarray from a collection of floats."
    },
    {
      "name": "init<C>(C)",
      "desc": "Creates a multiarray from a collection of doubles."
    },
    {
      "name": "init(shape: [NSNumber], dataType: MLMultiArrayDataType)",
      "desc": "Creates a multidimensional array with a shape and type."
    },
    {
      "name": "init<ShapedArray>(ShapedArray)",
      "desc": "Creates a multiarray from a shaped array."
    },
    {
      "name": "init(dataPointer: UnsafeMutableRawPointer, shape: [NSNumber], dataType: MLMultiArrayDataType, strides: [NSNumber], deallocator: ((UnsafeMutableRawPointer) -> Void)?)",
      "desc": "Creates a multiarray from a data pointer."
    },
    {
      "name": "init(concatenating: [MLMultiArray], axis: Int, dataType: MLMultiArrayDataType)",
      "desc": "Merges an array of multiarrays into one multiarray along an axis."
    },
    {
      "name": "enum MLMultiArrayDataType",
      "desc": "Constants that define the underlying element types a multiarray can store."
    },
    {
      "name": "var count: Int",
      "desc": "The total number of elements in the multiarray."
    },
    {
      "name": "var dataType: MLMultiArrayDataType",
      "desc": "The underlying type of the multiarray."
    },
    {
      "name": "var shape: [NSNumber]",
      "desc": "The multiarray’s multidimensional shape as a number array in which each element’s value is the size of the corresponding dimension."
    },
    {
      "name": "var strides: [NSNumber]",
      "desc": "A number array in which each element is the number of memory locations that span the length of the corresponding dimension."
    },
    {
      "name": "subscript(Int) -> NSNumber",
      "desc": "Accesses the multiarray by using a linear offset."
    },
    {
      "name": "subscript([NSNumber]) -> NSNumber",
      "desc": "Accesses the multiarray by using a number array that has an element for each dimension."
    },
    {
      "name": "var dataPointer: UnsafeMutableRawPointer",
      "desc": "A pointer to the multiarray’s underlying memory."
    },
    {
      "name": "init(pixelBuffer: CVPixelBuffer, shape: [NSNumber])"
    },
    {
      "name": "var pixelBuffer: CVPixelBuffer?"
    }
  ],
  "declaration": "class MLMultiArray : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSSecureCoding"
  ]
}