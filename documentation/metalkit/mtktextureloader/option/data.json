{
  "path": "/documentation/metalkit/mtktextureloader/option",
  "type": "Structure",
  "name": "MTKTextureLoader.Option",
  "desc": "Keys and values used to specify loading options.",
  "items": [
    {
      "name": "init(rawValue: String)",
      "desc": "Creates a texture loader option from a raw string value."
    },
    {
      "name": "static let allocateMipmaps: MTKTextureLoader.Option",
      "desc": "A key used to specify whether the texture loader should allocate memory for mipmaps in the texture."
    },
    {
      "name": "static let generateMipmaps: MTKTextureLoader.Option",
      "desc": "A key used to specify whether the texture loader should generate mipmaps for the texture."
    },
    {
      "name": "static let textureCPUCacheMode: MTKTextureLoader.Option",
      "desc": "A key used to specify the CPU cache mode for the texture."
    },
    {
      "name": "static let textureStorageMode: MTKTextureLoader.Option",
      "desc": "A key used to specify the storage mode for the texture."
    },
    {
      "name": "static let textureUsage: MTKTextureLoader.Option",
      "desc": "A key used to specify the intended usage of the texture."
    },
    {
      "name": "static let origin: MTKTextureLoader.Option",
      "desc": "A key used to specify when to flip the pixel coordinates of the texture."
    },
    {
      "name": "struct MTKTextureLoader.Origin",
      "desc": "Options for specifying when to flip the pixel coordinates of the texture."
    },
    {
      "name": "static let cubeLayout: MTKTextureLoader.Option",
      "desc": "A key used to specify how cube texture data is arranged in the source image."
    },
    {
      "name": "struct MTKTextureLoader.CubeLayout",
      "desc": "Options for specifying how cube texture data is arranged in the source image."
    },
    {
      "name": "static let SRGB: MTKTextureLoader.Option",
      "desc": "A key used to specify whether the texture data is stored as sRGB image data."
    }
  ],
  "declaration": "struct Option, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}