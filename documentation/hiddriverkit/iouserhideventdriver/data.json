{
  "path": "/documentation/hiddriverkit/iouserhideventdriver",
  "type": "Class",
  "name": "IOUserHIDEventDriver",
  "desc": "A complete driver object that dispatches keyboard, digitizer, scrolling, and pointer events originating from a HID device.",
  "items": [
    {
      "name": "- init",
      "desc": "Handles the basic initialization of the event service."
    },
    {
      "name": "- Start",
      "desc": "Starts the current event driver and associates it with the specified provider object."
    },
    {
      "name": "- free",
      "desc": "Performs any final cleanup for the service."
    },
    {
      "name": "- parseElements",
      "desc": "Parses the specified array of elements."
    },
    {
      "name": "- parsePointerElement",
      "desc": "Parses an element to see if it supports pointer usages."
    },
    {
      "name": "- parseDigitizerElement",
      "desc": "Parses an element to see if it supports digitizer usages."
    },
    {
      "name": "- parseKeyboardElement",
      "desc": "Parses an element to see if it contains keyboard-related information."
    },
    {
      "name": "- parseScrollElement",
      "desc": "Parses an element to see if it supports scroll usages."
    },
    {
      "name": "- parseLEDElement",
      "desc": "Parses an element to see if it supports LED usages."
    },
    {
      "name": "- handleReport",
      "desc": "Processes the information in a new device report and dispatches any relevant events in response."
    },
    {
      "name": "- handleKeyboardReport",
      "desc": "Iterates through keyboard elements and dispatches them if the element value has been updated."
    },
    {
      "name": "- handleRelativePointerReport",
      "desc": "Iterates through relative pointer elements and dispatches them if the element value has been updated."
    },
    {
      "name": "- handleAbsolutePointerReport",
      "desc": "Iterates through absolute pointer elements and dispatches them if the element value has been updated."
    },
    {
      "name": "- handleScrollReport",
      "desc": "Iterates through scroll elements and dispatches them if the element value has been updated."
    },
    {
      "name": "- handleDigitizerReport",
      "desc": "Processes the digitizer elements and dispatches events for any updated values."
    },
    {
      "name": "- createEventForDigitizerCollection",
      "desc": "Creates a HID event object that represents a digitizer collection."
    },
    {
      "name": "- SetLED",
      "desc": "Sets the state of an LED on the device."
    },
    {
      "name": "- setAccelerationProperties"
    },
    {
      "name": "- setSurfaceDimensions"
    },
    {
      "name": "- setTipThreshold"
    },
    {
      "name": "- SetProperties"
    },
    {
      "name": "- calibrateCenteredPreferredStateElement"
    },
    {
      "name": "- calibrateJustifiedPreferredStateElement"
    },
    {
      "name": "- checkGameControllerElement"
    },
    {
      "name": "- copyKeyboardEvent"
    },
    {
      "name": "- getButtonStateFromElements"
    },
    {
      "name": "- handleCopyMatchingEvent"
    },
    {
      "name": "- handleGameControllerReport"
    },
    {
      "name": "- handleProximityReport"
    },
    {
      "name": "- parseElement"
    },
    {
      "name": "- parseGameControllerElement"
    },
    {
      "name": "- parseProximityElement"
    },
    {
      "name": "- parseRemainingElement"
    },
    {
      "name": "- parseRemainingElements"
    },
    {
      "name": "- postProcessElements"
    },
    {
      "name": "- postProcessElements_internal"
    },
    {
      "name": "- processDigitizerElements"
    },
    {
      "name": "- processGameControllerElements"
    },
    {
      "name": "- setDigitizerProperties"
    },
    {
      "name": "- setGameControllerProperties"
    },
    {
      "name": "- setKeyboardProperties"
    },
    {
      "name": "- setLEDProperties"
    },
    {
      "name": "- setRelativeProperties"
    },
    {
      "name": "- setScrollProperties"
    }
  ],
  "declaration": "class IOUserHIDEventDriver : IOUserHIDEventService",
  "inheritsFrom": [
    "IOUserHIDEventService"
  ]
}