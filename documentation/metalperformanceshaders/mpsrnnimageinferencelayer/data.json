{
  "path": "/documentation/metalperformanceshaders/mpsrnnimageinferencelayer",
  "type": "Class",
  "name": "MPSRNNImageInferenceLayer",
  "desc": "A recurrent neural network layer for inference on Metal Performance Shaders images.",
  "items": [
    {
      "name": "init?(coder: NSCoder, device: MTLDevice)"
    },
    {
      "name": "init(device: MTLDevice, rnnDescriptor: MPSRNNDescriptor)"
    },
    {
      "name": "init(device: MTLDevice, rnnDescriptors: [MPSRNNDescriptor])"
    },
    {
      "name": "class MPSRNNDescriptor",
      "desc": "A description of a recursive neural network block or layer."
    },
    {
      "name": "var bidirectionalCombineMode: MPSRNNBidirectionalCombineMode"
    },
    {
      "name": "enum MPSRNNBidirectionalCombineMode",
      "desc": "Modes that define how two images or matrices are combined."
    },
    {
      "name": "var numberOfLayers: Int"
    },
    {
      "name": "var recurrentOutputIsTemporary: Bool"
    },
    {
      "name": "var storeAllIntermediateStates: Bool"
    },
    {
      "name": "var inputFeatureChannels: Int"
    },
    {
      "name": "var outputFeatureChannels: Int"
    },
    {
      "name": "func copy(with: NSZone?, device: MTLDevice?) -> Self"
    },
    {
      "name": "func encodeBidirectionalSequence(commandBuffer: MTLCommandBuffer, sourceSequence: [MPSImage], destinationForwardImages: [MPSImage], destinationBackwardImages: [MPSImage]?)"
    },
    {
      "name": "func encodeSequence(commandBuffer: MTLCommandBuffer, sourceImages: [MPSImage], destinationImages: [MPSImage], recurrentInputState: MPSRNNRecurrentImageState?, recurrentOutputStates: NSMutableArray?)"
    },
    {
      "name": "class MPSRNNRecurrentImageState",
      "desc": "A class that holds all the data that's passed from one sequence iteration of the image-based recurrent neural network layer (stack) to the next."
    }
  ],
  "declaration": "class MPSRNNImageInferenceLayer : MPSCNNKernel",
  "inheritsFrom": [
    "MPSCNNKernel"
  ]
}