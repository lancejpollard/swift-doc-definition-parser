{
  "path": "/documentation/scenekit/scncamera",
  "type": "Class",
  "name": "SCNCamera",
  "desc": "A set of camera attributes that can be attached to a node to provide a point of view for displaying the scene.",
  "items": [
    {
      "name": "var name: String?",
      "desc": "A name associated with the camera object."
    },
    {
      "name": "var zNear: Double",
      "desc": "The camera's near depth limit. Animatable."
    },
    {
      "name": "var zFar: Double",
      "desc": "The camera’s far depth limit. Animatable."
    },
    {
      "name": "var automaticallyAdjustsZRange: Bool",
      "desc": "A Boolean value that determines whether the camera automatically adjusts its zNear and zFar depth limits."
    },
    {
      "name": "var fieldOfView: CGFloat",
      "desc": "The vertical or horizontal viewing angle of the camera."
    },
    {
      "name": "var focalLength: CGFloat",
      "desc": "The camera's focal length, in millimeters."
    },
    {
      "name": "var sensorHeight: CGFloat",
      "desc": "The vertical size of the camera's imaging plane, in millimeters."
    },
    {
      "name": "var projectionDirection: SCNCameraProjectionDirection",
      "desc": "The axis used to determine field of view or orthographic scale."
    },
    {
      "name": "enum SCNCameraProjectionDirection",
      "desc": "Options for the axis used to determine field of view or orthographic projection."
    },
    {
      "name": "var projectionTransform: SCNMatrix4",
      "desc": "The camera’s projection transformation."
    },
    {
      "name": "var usesOrthographicProjection: Bool",
      "desc": "A Boolean value that determines whether the camera uses an orthographic projection."
    },
    {
      "name": "var orthographicScale: Double",
      "desc": "Specifies the camera’s magnification factor when using an orthographic projection."
    },
    {
      "name": "var categoryBitMask: Int",
      "desc": "A mask that defines which categories this camera belongs to."
    },
    {
      "name": "var wantsDepthOfField: Bool",
      "desc": "A Boolean value that determines whether SceneKit renders depth-of-field blur effects for the camera."
    },
    {
      "name": "var focusDistance: CGFloat",
      "desc": "The distance from the camera at which objects appear in sharp focus. Animatable."
    },
    {
      "name": "var fStop: CGFloat",
      "desc": "The physical camera aperture simulated by SceneKit for depth-of-field effects. Animatable."
    },
    {
      "name": "var apertureBladeCount: Int",
      "desc": "The number of physical camera aperture blades simulated by SceneKit for depth-of-field effects."
    },
    {
      "name": "var focalBlurSampleCount: Int",
      "desc": "The number of pixel samples SceneKit uses to create depth-of-field blur effects."
    },
    {
      "name": "var motionBlurIntensity: CGFloat",
      "desc": "A factor that determines the intensity of motion blur effects. Animatable."
    },
    {
      "name": "var wantsHDR: Bool",
      "desc": "A Boolean value that determines whether SceneKit applies High Dynamic Range (HDR) postprocessing effects to a scene."
    },
    {
      "name": "var exposureOffset: CGFloat",
      "desc": "A logarithmic bias that adjusts the results of SceneKit’s tone mapping operation, brightening or darkening the visible scene."
    },
    {
      "name": "var averageGray: CGFloat",
      "desc": "The luminance level to use as the midpoint of a tone mapping curve."
    },
    {
      "name": "var whitePoint: CGFloat",
      "desc": "The luminance level to use as the upper end of a tone mapping curve."
    },
    {
      "name": "var minimumExposure: CGFloat",
      "desc": "The minimum exposure value to use in tone mapping."
    },
    {
      "name": "var maximumExposure: CGFloat",
      "desc": "The minimum exposure value to use in tone mapping."
    },
    {
      "name": "var wantsExposureAdaptation: Bool",
      "desc": "A Boolean value that determines whether SceneKit automatically adjusts the exposure level."
    },
    {
      "name": "var exposureAdaptationBrighteningSpeedFactor: CGFloat",
      "desc": "The relative duration of automatically animated exposure transitions from dark to bright areas."
    },
    {
      "name": "var exposureAdaptationDarkeningSpeedFactor: CGFloat",
      "desc": "The relative duration of automatically animated exposure transitions from bright to dark areas."
    },
    {
      "name": "var contrast: CGFloat",
      "desc": "An adjustment factor to apply to the overall visual contrast of the rendered scene."
    },
    {
      "name": "var saturation: CGFloat",
      "desc": "An adjustment factor to apply to the overall color saturation of the rendered scene."
    },
    {
      "name": "var colorGrading: SCNMaterialProperty",
      "desc": "A texture for applying color grading effects to the entire rendered scene."
    },
    {
      "name": "var bloomIntensity: CGFloat",
      "desc": "The magnitude of bloom effect to apply to highlights in the rendered scene. Animatable."
    },
    {
      "name": "var bloomThreshold: CGFloat",
      "desc": "The brightness threshold at which to apply a bloom effect to highlights in the rendered scene. Animatable."
    },
    {
      "name": "var bloomBlurRadius: CGFloat",
      "desc": "The radius, in pixels, for the blurring portion of the bloom effect applied to highlights in the rendered scene. Animatable."
    },
    {
      "name": "var colorFringeIntensity: CGFloat",
      "desc": "The blend factor for fading the color fringing effect applied to the rendered scene."
    },
    {
      "name": "var colorFringeStrength: CGFloat",
      "desc": "The magnitude of color fringing effect to apply to the rendered scene."
    },
    {
      "name": "var vignettingIntensity: CGFloat",
      "desc": "The magnitude of vignette (darkening around edges) effect to apply to the rendered scene."
    },
    {
      "name": "var vignettingPower: CGFloat",
      "desc": "The amount of the rendered scene to darken with a vignette effect."
    },
    {
      "name": "var screenSpaceAmbientOcclusionIntensity: CGFloat",
      "desc": "The intensity of the screen-space ambient occlusion effect applied in camera rendering."
    },
    {
      "name": "var screenSpaceAmbientOcclusionRadius: CGFloat",
      "desc": "The distance, in units of scene space, at which ambient occlusion takes effect."
    },
    {
      "name": "var screenSpaceAmbientOcclusionBias: CGFloat",
      "desc": "An offset for modulating ambient occlusion effects."
    },
    {
      "name": "var screenSpaceAmbientOcclusionDepthThreshold: CGFloat",
      "desc": "The maximum depth difference, in units of scene space, at which to apply ambient occlusion effects."
    },
    {
      "name": "var screenSpaceAmbientOcclusionNormalThreshold: CGFloat",
      "desc": "The magnitude of the blur effect applied to create ambient occlusion shadows."
    },
    {
      "name": "var bloomIterationCount: Int"
    },
    {
      "name": "var bloomIterationSpread: CGFloat"
    },
    {
      "name": "var grainIntensity: CGFloat"
    },
    {
      "name": "var grainIsColored: Bool"
    },
    {
      "name": "var grainScale: CGFloat"
    },
    {
      "name": "var whiteBalanceTemperature: CGFloat"
    },
    {
      "name": "var whiteBalanceTint: CGFloat"
    },
    {
      "name": "func projectionTransform(withViewportSize: CGSize) -> SCNMatrix4"
    }
  ],
  "declaration": "class SCNCamera : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSSecureCoding",
    "SCNAnimatable",
    "SCNTechniqueSupport"
  ]
}