{
  "path": "/documentation/scenekit/scnhittestoption",
  "type": "Structure",
  "name": "SCNHitTestOption",
  "desc": "Options affecting the behavior of SceneKit hit-testing methods.",
  "items": [
    {
      "name": "static let backFaceCulling: SCNHitTestOption",
      "desc": "An option to ignore faces not oriented toward the camera."
    },
    {
      "name": "static let boundingBoxOnly: SCNHitTestOption",
      "desc": "An option to search for objects by bounding box only."
    },
    {
      "name": "static let categoryBitMask: SCNHitTestOption",
      "desc": "An option to search only for objects matching a specified bitmask."
    },
    {
      "name": "static let clipToZRange: SCNHitTestOption",
      "desc": "An option to search for objects only within the depth range of the current point of view."
    },
    {
      "name": "static let ignoreChildNodes: SCNHitTestOption",
      "desc": "An option to ignore child nodes when searching."
    },
    {
      "name": "static let ignoreHiddenNodes: SCNHitTestOption",
      "desc": "An option to ignore hidden nodes when searching."
    },
    {
      "name": "static let rootNode: SCNHitTestOption",
      "desc": "The root of the node hierarchy to be searched."
    },
    {
      "name": "static let searchMode: SCNHitTestOption",
      "desc": "An option for the number and order of hit test results to provide."
    },
    {
      "name": "enum SCNHitTestSearchMode",
      "desc": "Possible values for the searchMode option used with hit-testing methods."
    },
    {
      "name": "static let firstFoundOnly: SCNHitTestOption",
      "desc": "An option to return only the first object found."
    },
    {
      "name": "static let sortResults: SCNHitTestOption",
      "desc": "An option to sort the results of a hit-test."
    },
    {
      "name": "init(rawValue: String)"
    },
    {
      "name": "static let ignoreLightArea: SCNHitTestOption"
    }
  ],
  "declaration": "struct SCNHitTestOption, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}