{
  "path": "/documentation/scenekit/scngeometryelement",
  "type": "Class",
  "name": "SCNGeometryElement",
  "desc": "A container for index data describing how vertices connect to define a three-dimensional object, or geometry.",
  "items": [
    {
      "name": "init<IndexType>(indices: [IndexType], primitiveType: SCNGeometryPrimitiveType)",
      "desc": "Creates a geometry element from the specified array of index values."
    },
    {
      "name": "init(data: Data?, primitiveType: SCNGeometryPrimitiveType, primitiveCount: Int, bytesPerIndex: Int)",
      "desc": "Creates a geometry element from the specified data and options."
    },
    {
      "name": "var data: Data",
      "desc": "The data describing the geometry element."
    },
    {
      "name": "var bytesPerIndex: Int",
      "desc": "The number of bytes that represent each index value in the element’s data."
    },
    {
      "name": "var primitiveType: SCNGeometryPrimitiveType",
      "desc": "The drawing primitive that connects vertices when rendering the geometry element."
    },
    {
      "name": "enum SCNGeometryPrimitiveType",
      "desc": "The drawing primitive that connects vertices when rendering a geometry element, used by the primitiveType property to specify how SceneKit interprets the geometry element’s data."
    },
    {
      "name": "var primitiveCount: Int",
      "desc": "The number of primitives in the element."
    },
    {
      "name": "var primitiveRange: NSRange",
      "desc": "The range of primitives from the geometry element to render."
    },
    {
      "name": "var pointSize: CGFloat",
      "desc": "The width of each point in the geometry element, as measured in the geometry's local 3D coordinate space."
    },
    {
      "name": "var minimumPointScreenSpaceRadius: CGFloat",
      "desc": "The smallest radius, measured in screen points, at which to render any point in the geometry element."
    },
    {
      "name": "var maximumPointScreenSpaceRadius: CGFloat",
      "desc": "The largest radius, measured in screen points, at which to render any point in the geometry element."
    },
    {
      "name": "init(buffer: MTLBuffer, primitiveType: SCNGeometryPrimitiveType, primitiveCount: Int, bytesPerIndex: Int)"
    }
  ],
  "declaration": "class SCNGeometryElement : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSSecureCoding"
  ]
}