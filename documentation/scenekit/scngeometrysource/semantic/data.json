{
  "path": "/documentation/scenekit/scngeometrysource/semantic",
  "type": "Structure",
  "name": "SCNGeometrySource.Semantic",
  "desc": "No overview available.",
  "items": [
    {
      "name": "static let vertex: SCNGeometrySource.Semantic",
      "desc": "The semantic for vertex position data."
    },
    {
      "name": "static let normal: SCNGeometrySource.Semantic",
      "desc": "The semantic for surface normal data."
    },
    {
      "name": "static let texcoord: SCNGeometrySource.Semantic",
      "desc": "The semantic for texture coordinate data."
    },
    {
      "name": "static let color: SCNGeometrySource.Semantic",
      "desc": "The semantic for per-vertex color data."
    },
    {
      "name": "static let tangent: SCNGeometrySource.Semantic",
      "desc": "The semantic for surface tangent vector data."
    },
    {
      "name": "static let edgeCrease: SCNGeometrySource.Semantic",
      "desc": "The semantic for edge crease data, used for subdividing surfaces."
    },
    {
      "name": "static let vertexCrease: SCNGeometrySource.Semantic",
      "desc": "The semantic for vertex crease data, used for subdividing surfaces."
    },
    {
      "name": "static let boneIndices: SCNGeometrySource.Semantic",
      "desc": "The semantic for bone index data, used for skeletal animation of skinned surfaces."
    },
    {
      "name": "static let boneWeights: SCNGeometrySource.Semantic",
      "desc": "The semantic for bone weight data, used for skeletal animation of skinned surfaces."
    },
    {
      "name": "init(String)"
    },
    {
      "name": "init(rawValue: String)"
    }
  ],
  "declaration": "struct Semantic, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}