{
  "path": "/documentation/addressbook/absearchcomparison",
  "type": "Type Alias",
  "name": "ABSearchComparison",
  "desc": "Constants used to specify the type of comparison beingmade.",
  "items": [
    {
      "name": "var kABEqual: _ABSearchComparison",
      "desc": "Search for elements that are equal to the value."
    },
    {
      "name": "var kABNotEqual: _ABSearchComparison",
      "desc": "Search for elements that are not equal to thevalue."
    },
    {
      "name": "var kABNotEqualCaseInsensitive: _ABSearchComparison",
      "desc": "Search for elements that are not equal to the value, ignoring case."
    },
    {
      "name": "var kABLessThan: _ABSearchComparison",
      "desc": "Search for elements that are less than thevalue."
    },
    {
      "name": "var kABLessThanOrEqual: _ABSearchComparison",
      "desc": "Search for elements that are less than or equalto the value."
    },
    {
      "name": "var kABGreaterThan: _ABSearchComparison",
      "desc": "Search for elements that are greater than thevalue."
    },
    {
      "name": "var kABGreaterThanOrEqual: _ABSearchComparison",
      "desc": "Search for elements that are greater than orequal to the value."
    },
    {
      "name": "var kABEqualCaseInsensitive: _ABSearchComparison",
      "desc": "Search for elements that are equal to the value,ignoring case."
    },
    {
      "name": "var kABContainsSubString: _ABSearchComparison",
      "desc": "Search for elements that contain the value."
    },
    {
      "name": "var kABContainsSubStringCaseInsensitive: _ABSearchComparison",
      "desc": "Search for elements that contain the value,ignoring case."
    },
    {
      "name": "var kABPrefixMatch: _ABSearchComparison",
      "desc": "Search for elements that begin with the value."
    },
    {
      "name": "var kABPrefixMatchCaseInsensitive: _ABSearchComparison",
      "desc": "Search for elements that begin with the value, ignoring case."
    },
    {
      "name": "var kABSuffixMatch: _ABSearchComparison",
      "desc": "Search for elements that end with the value."
    },
    {
      "name": "var kABSuffixMatchCaseInsensitive: _ABSearchComparison",
      "desc": "Search for elements that end with the value, ignoring case."
    },
    {
      "name": "var kABBitsInBitFieldMatch: _ABSearchComparison",
      "desc": "Search for elements that match the bits in ABPersonFlags."
    },
    {
      "name": "var kABDoesNotContainSubString: _ABSearchComparison",
      "desc": "Search for elements that do not contain the value."
    },
    {
      "name": "var kABDoesNotContainSubStringCaseInsensitive: _ABSearchComparison",
      "desc": "Search for elements that do not contain the value, ignoring case."
    },
    {
      "name": "var kABWithinIntervalAroundToday: _ABSearchComparison",
      "desc": "Search for elements that are within a time interval (in seconds) forward or backward from today."
    },
    {
      "name": "var kABWithinIntervalAroundTodayYearless: _ABSearchComparison",
      "desc": "Search for elements that are within a time interval (in seconds) forward or backward from this day in any year."
    },
    {
      "name": "var kABNotWithinIntervalAroundToday: _ABSearchComparison",
      "desc": "Search for elements that are not within a time interval (in seconds) forward or backward from today."
    },
    {
      "name": "var kABNotWithinIntervalAroundTodayYearless: _ABSearchComparison",
      "desc": "Search for elements that are not within a time interval (in seconds) forward or backward from this day in any year."
    },
    {
      "name": "var kABWithinIntervalFromToday: _ABSearchComparison",
      "desc": "Search for elements that are within a time interval (in seconds) forward from today."
    },
    {
      "name": "var kABWithinIntervalFromTodayYearless: _ABSearchComparison",
      "desc": "Search for elements that are within a time interval (in seconds) forward from this day in any year."
    },
    {
      "name": "var kABNotWithinIntervalFromToday: _ABSearchComparison",
      "desc": "Search for elements that are not within a time interval (in seconds) forward from today."
    },
    {
      "name": "var kABNotWithinIntervalFromTodayYearless: _ABSearchComparison",
      "desc": "Search for elements that are not within a time interval (in seconds) forward from this day in any year."
    }
  ],
  "declaration": "typealias ABSearchComparison = CFIndex"
}