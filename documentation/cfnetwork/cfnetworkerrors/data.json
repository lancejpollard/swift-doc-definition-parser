{
  "path": "/documentation/cfnetwork/cfnetworkerrors",
  "type": "Enumeration",
  "name": "CFNetworkErrors",
  "desc": "This enumeration contains error codes returned under the error domain kCFErrorDomainCFNetwork.",
  "items": [
    {
      "name": "case cfHostErrorHostNotFound",
      "desc": "The specified host wasn’t found."
    },
    {
      "name": "case cfHostErrorUnknown",
      "desc": "An unknown error."
    },
    {
      "name": "case cfsocksErrorUnknownClientVersion",
      "desc": "The SOCKS server rejected access because it doesn’t support connections with the requested SOCKS version."
    },
    {
      "name": "case cfsocksErrorUnsupportedServerVersion",
      "desc": "The SOCKS server doesn’t support the requested version."
    },
    {
      "name": "case cfsocks4ErrorRequestFailed",
      "desc": "The server rejected the request, or the request failed."
    },
    {
      "name": "case cfsocks4ErrorIdentdFailed",
      "desc": "The server couldn’t connect to the identd daemon on the client and rejected the request."
    },
    {
      "name": "case cfsocks4ErrorIdConflict",
      "desc": "The server rejected the request because the client program and the identd daemon reported different user IDs."
    },
    {
      "name": "case cfsocks4ErrorUnknownStatusCode",
      "desc": "The server returned an unknown status code."
    },
    {
      "name": "case cfsocks5ErrorBadState",
      "desc": "The stream isn’t in a state that allows the requested operation."
    },
    {
      "name": "case cfsocks5ErrorBadResponseAddr",
      "desc": "The address type returned isn’t supported."
    },
    {
      "name": "case cfsocks5ErrorBadCredentials",
      "desc": "The SOCKS server refused the client connection because of bad login credentials."
    },
    {
      "name": "case cfsocks5ErrorUnsupportedNegotiationMethod",
      "desc": "The requested method isn’t supported."
    },
    {
      "name": "case cfsocks5ErrorNoAcceptableMethod",
      "desc": "The client and server couldn’t find a mutually agreeable authentication method."
    },
    {
      "name": "case cfftpErrorUnexpectedStatusCode",
      "desc": "The server returned an unexpected status code."
    },
    {
      "name": "case cfErrorHTTPAuthenticationTypeUnsupported",
      "desc": "The client and server couldn’t agree on a supported authentication type."
    },
    {
      "name": "case cfErrorHTTPBadCredentials",
      "desc": "The server rejected the credentials provided for an authenticated connection."
    },
    {
      "name": "case cfErrorHTTPConnectionLost",
      "desc": "The connection to the server was dropped."
    },
    {
      "name": "case cfErrorHTTPParseFailure",
      "desc": "The HTTP server response couldn’t be parsed."
    },
    {
      "name": "case cfErrorHTTPRedirectionLoopDetected",
      "desc": "Too many HTTP redirects occurred before reaching a page that didn’t redirect the client to another page."
    },
    {
      "name": "case cfErrorHTTPBadURL",
      "desc": "The requested URL couldn’t be retrieved."
    },
    {
      "name": "case cfErrorHTTPProxyConnectionFailure",
      "desc": "A connection to the HTTPS proxy couldn’t be established."
    },
    {
      "name": "case cfErrorHTTPBadProxyCredentials",
      "desc": "The proxy rejected the authentication credentials provided for logging in."
    },
    {
      "name": "case cfErrorPACFileError",
      "desc": "An error occurred with the proxy autoconfiguration file."
    },
    {
      "name": "case cfErrorPACFileAuth",
      "desc": "The authentication credentials provided by the proxy autoconfiguration file were rejected."
    },
    {
      "name": "case cfErrorHTTPSProxyConnectionFailure",
      "desc": "A connection couldn’t be established to the HTTPS proxy."
    },
    {
      "name": "case cfStreamErrorHTTPSProxyFailureUnexpectedResponseToCONNECTMethod",
      "desc": "The HTTPS proxy returned an unexpected status code, such as a 3xx redirect."
    },
    {
      "name": "case cfurlErrorUnknown",
      "desc": "An unknown error occurred."
    },
    {
      "name": "case cfurlErrorCancelled",
      "desc": "The connection was cancelled."
    },
    {
      "name": "case cfurlErrorBadURL",
      "desc": "The connection failed due to a malformed URL."
    },
    {
      "name": "case cfurlErrorTimedOut",
      "desc": "The connection timed out."
    },
    {
      "name": "case cfurlErrorUnsupportedURL",
      "desc": "The connection failed due to an unsupported URL scheme."
    },
    {
      "name": "case cfurlErrorCannotFindHost",
      "desc": "The connection failed because the host couldn’t be found."
    },
    {
      "name": "case cfurlErrorCannotConnectToHost",
      "desc": "The connection failed because a connection can’t be made to the host."
    },
    {
      "name": "case cfurlErrorNetworkConnectionLost",
      "desc": "The connection failed because the network connection was lost."
    },
    {
      "name": "case cfurlErrorDNSLookupFailed",
      "desc": "The connection failed because the DNS lookup failed."
    },
    {
      "name": "case cfurlErrorHTTPTooManyRedirects",
      "desc": "The HTTP connection failed due to too many redirects."
    },
    {
      "name": "case cfurlErrorResourceUnavailable",
      "desc": "The connection’s resource is unavailable."
    },
    {
      "name": "case cfurlErrorNotConnectedToInternet",
      "desc": "The connection failed because the device isn’t connected to the internet."
    },
    {
      "name": "case cfurlErrorRedirectToNonExistentLocation",
      "desc": "The connection was redirected to a nonexistent location."
    },
    {
      "name": "case cfurlErrorBadServerResponse",
      "desc": "The connection received an invalid server response."
    },
    {
      "name": "case cfurlErrorUserCancelledAuthentication",
      "desc": "The connection failed because the user cancelled required authentication."
    },
    {
      "name": "case cfurlErrorUserAuthenticationRequired",
      "desc": "The connection failed because it requires authentication."
    },
    {
      "name": "case cfurlErrorZeroByteResource",
      "desc": "The resource retrieved by the connection is zero bytes."
    },
    {
      "name": "case cfurlErrorCannotDecodeRawData",
      "desc": "The connection can’t decode data encoded with a known content encoding."
    },
    {
      "name": "case cfurlErrorCannotDecodeContentData",
      "desc": "The connection can’t decode data encoded with an unknown content encoding."
    },
    {
      "name": "case cfurlErrorCannotParseResponse",
      "desc": "The connection can’t parse the server’s response."
    },
    {
      "name": "case cfurlErrorInternationalRoamingOff",
      "desc": "The connection failed because international roaming is disabled on the device."
    },
    {
      "name": "case cfurlErrorCallIsActive",
      "desc": "The connection failed because a call is active."
    },
    {
      "name": "case cfurlErrorDataNotAllowed",
      "desc": "The connection failed because data use isn’t currently allowed on the device."
    },
    {
      "name": "case cfurlErrorRequestBodyStreamExhausted",
      "desc": "The connection failed because the request’s body stream was exhausted."
    },
    {
      "name": "case cfurlErrorFileDoesNotExist",
      "desc": "The file operation failed because the file doesn’t exist."
    },
    {
      "name": "case cfurlErrorFileIsDirectory",
      "desc": "The file operation failed because the file is a directory."
    },
    {
      "name": "case cfurlErrorNoPermissionsToReadFile",
      "desc": "The file operation failed because it doesn’t have permission to read the file."
    },
    {
      "name": "case cfurlErrorDataLengthExceedsMaximum",
      "desc": "The file operation failed because the file is too large."
    },
    {
      "name": "case cfurlErrorSecureConnectionFailed",
      "desc": "The secure connection failed for an unknown reason."
    },
    {
      "name": "case cfurlErrorServerCertificateHasBadDate",
      "desc": "The secure connection failed because the server’s certificate has an invalid date."
    },
    {
      "name": "case cfurlErrorServerCertificateUntrusted",
      "desc": "The secure connection failed because the server’s certificate isn’t trusted."
    },
    {
      "name": "case cfurlErrorServerCertificateHasUnknownRoot",
      "desc": "The secure connection failed because the server’s certificate has an unknown root."
    },
    {
      "name": "case cfurlErrorServerCertificateNotYetValid",
      "desc": "The secure connection failed because the server’s certificate isn’t valid yet."
    },
    {
      "name": "case cfurlErrorClientCertificateRejected",
      "desc": "The secure connection failed because the client’s certificate was rejected."
    },
    {
      "name": "case cfurlErrorClientCertificateRequired",
      "desc": "The secure connection failed because the server requires a client certificate."
    },
    {
      "name": "case cfurlErrorCannotLoadFromNetwork",
      "desc": "The connection failed because it’s being required to return a cached resource, but one isn’t available."
    },
    {
      "name": "case cfurlErrorCannotCreateFile",
      "desc": "The file can’t be created."
    },
    {
      "name": "case cfurlErrorCannotOpenFile",
      "desc": "The file can’t be opened."
    },
    {
      "name": "case cfurlErrorCannotCloseFile",
      "desc": "The file can’t be closed."
    },
    {
      "name": "case cfurlErrorCannotWriteToFile",
      "desc": "The file can’t be written."
    },
    {
      "name": "case cfurlErrorCannotRemoveFile",
      "desc": "The file can’t be removed."
    },
    {
      "name": "case cfurlErrorCannotMoveFile",
      "desc": "The file can’t be moved."
    },
    {
      "name": "case cfurlErrorDownloadDecodingFailedMidStream",
      "desc": "The download failed because decoding of the downloaded data failed midstream."
    },
    {
      "name": "case cfurlErrorDownloadDecodingFailedToComplete",
      "desc": "The download failed because decoding of the downloaded data failed to complete."
    },
    {
      "name": "case cfhttpCookieCannotParseCookieFile",
      "desc": "The cookie file can’t be parsed."
    },
    {
      "name": "case cfNetServiceErrorUnknown",
      "desc": "An error of unknown type has occurred."
    },
    {
      "name": "case cfNetServiceErrorCollision",
      "desc": "An attempt was made to use a name that’s already in use."
    },
    {
      "name": "case cfNetServiceErrorNotFound",
      "desc": "This error isn’t used."
    },
    {
      "name": "case cfNetServiceErrorInProgress",
      "desc": "A new search couldn’t be started because a search is already in progress."
    },
    {
      "name": "case cfNetServiceErrorBadArgument",
      "desc": "A required argument either wasn’t provided or wasn’t valid."
    },
    {
      "name": "case cfNetServiceErrorCancel",
      "desc": "The search or service was canceled."
    },
    {
      "name": "case cfNetServiceErrorInvalid",
      "desc": "Invalid data was passed to a CFNetServices function."
    },
    {
      "name": "case cfNetServiceErrorTimeout",
      "desc": "Resolution failed because the timeout was reached."
    },
    {
      "name": "case cfNetServiceErrorDNSServiceFailure",
      "desc": "The DNS service discovery returned an error."
    },
    {
      "name": "case cfurlErrorAppTransportSecurityRequiresSecureConnection",
      "desc": "The connection failed because the App Transport Security configuration requires a secure connection."
    },
    {
      "name": "case cfurlErrorBackgroundSessionInUseByAnotherProcess",
      "desc": "The background session failed because it was in use by another process."
    },
    {
      "name": "case cfurlErrorBackgroundSessionWasDisconnected",
      "desc": "The background session failed because it was disconnected."
    },
    {
      "name": "case cfurlErrorFileOutsideSafeArea",
      "desc": "The file is outside of the safe area."
    }
  ],
  "declaration": "enum CFNetworkErrors : Int32, @unchecked Sendable",
  "conformsTo": [
    "Sendable"
  ]
}