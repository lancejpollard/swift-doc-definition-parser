{
  "path": "/documentation/tvuikit/tvmediaitemcontentconfiguration/textproperties",
  "type": "Structure",
  "name": "TVMediaItemContentConfiguration.TextProperties",
  "desc": "Properties that affect the media item content configuration’s text.",
  "items": [
    {
      "name": "var font: UIFont",
      "desc": "The font for the text."
    },
    {
      "name": "var color: UIColor",
      "desc": "The color of the text."
    },
    {
      "name": "var transform: TVMediaItemContentConfiguration.TextProperties.TextTransform",
      "desc": "The transform to apply to the text before displaying it."
    },
    {
      "name": "enum TVMediaItemContentConfiguration.TextProperties.TextTransform",
      "desc": "Constants that specify the transform to apply to the text."
    },
    {
      "name": "var customMirror: Mirror",
      "desc": "The custom mirror for this instance."
    },
    {
      "name": "var description: String",
      "desc": "A textual representation of this instance."
    },
    {
      "name": "var debugDescription: String",
      "desc": "A textual representation that’s suitable for output during debugging."
    },
    {
      "name": "static func == (TVMediaItemContentConfiguration.TextProperties, TVMediaItemContentConfiguration.TextProperties) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are equal."
    },
    {
      "name": "static func != (TVMediaItemContentConfiguration.TextProperties, TVMediaItemContentConfiguration.TextProperties) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are not equal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the value by passing them into the hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    }
  ],
  "declaration": "struct TVMediaItemContentConfiguration.TextProperties",
  "conformsTo": [
    "CustomDebugStringConvertible",
    "CustomReflectable",
    "CustomStringConvertible",
    "Hashable"
  ]
}