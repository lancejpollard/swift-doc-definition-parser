{
  "path": "/documentation/groupactivities/groupactivitymetadata",
  "type": "Structure",
  "name": "GroupActivityMetadata",
  "desc": "Text and image content that describes an activity to potential participants.",
  "items": [
    {
      "name": "init()",
      "desc": "Creates a new instance for storing descriptive information about an activity."
    },
    {
      "name": "init(from: Decoder) throws",
      "desc": "Creates a new instance by decoding from the given decoder."
    },
    {
      "name": "var title: String?",
      "desc": "The localized string to display as the title of your activity."
    },
    {
      "name": "var subtitle: String?",
      "desc": "The localized string that provides additional information about the activity."
    },
    {
      "name": "var previewImage: CGImage?",
      "desc": "The image to display for the current activity."
    },
    {
      "name": "var fallbackURL: URL?",
      "desc": "A URL that offers participants a way to identify or join the activity from a web browser."
    },
    {
      "name": "var type: GroupActivityMetadata.ActivityType",
      "desc": "The type of shared experience."
    },
    {
      "name": "struct ActivityType",
      "desc": "Constants that indicate the group activityâ€™s type to the system."
    },
    {
      "name": "var supportsContinuationOnTV: Bool",
      "desc": "A Boolean value that indicates whether your app supports activity continuation on an Apple TV."
    },
    {
      "name": "var preferredBroadcastOptions: BroadcastOptions",
      "desc": "Preferences for how to present audio and video on the main communication channel."
    },
    {
      "name": "struct BroadcastOptions",
      "desc": "Options for how to broadcast media on the shared communications channel."
    },
    {
      "name": "static func != (Self, Self) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "static func == (GroupActivityMetadata, GroupActivityMetadata) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    },
    {
      "name": "func encode(to: Encoder) throws",
      "desc": "Encodes this value into the given encoder."
    }
  ],
  "declaration": "struct GroupActivityMetadata",
  "conformsTo": [
    "Decodable",
    "Encodable",
    "Equatable"
  ]
}