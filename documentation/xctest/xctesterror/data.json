{
  "path": "/documentation/xctest/xctesterror",
  "type": "Structure",
  "name": "XCTestError",
  "desc": "A type of error that can occur while the test waits to fulfill expectations.",
  "items": [
    {
      "name": "init(Code, userInfo: [String : Any])",
      "desc": "Creates an error with an error code and user information."
    },
    {
      "name": "var code: Code",
      "desc": "A code that represents an error the test encountered while waiting to fulfill expectations."
    },
    {
      "name": "var errorCode: Int",
      "desc": "An integer value that corresponds to a code that represents an error the test encountered while waiting to fulfill expectations."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "A dictionary of user information associated with an error the test encountered while waiting to fulfill expectations."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized description of an error the test encountered while waiting to fulfill expectations."
    },
    {
      "name": "var userInfo: [String : Any]",
      "desc": "A dictionary of user information associated with an error the test encountered while waiting to fulfill expectations."
    },
    {
      "name": "static var timeoutWhileWaiting: XCTestError.Code",
      "desc": "A code that represents a timeout the test encountered while waiting to fulfill expectations."
    },
    {
      "name": "static var failureWhileWaiting: XCTestError.Code",
      "desc": "A code that represents a test failure the test encountered while waiting to fulfill expectations."
    },
    {
      "name": "enum XCTestError.Code",
      "desc": "Error codes for errors that can occur while the test is waiting to fulfill expectations."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The error domain for errors that can occur while the test is waiting to fulfill expectations."
    },
    {
      "name": "let XCTestErrorDomain: String",
      "desc": "The error domain for errors that can occur while the test is waiting to fulfill expectations."
    },
    {
      "name": "static func == (XCTestError, XCTestError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    },
    {
      "name": "static func != (XCTestError, XCTestError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of the error by feeding them into the hasher you specify."
    }
  ],
  "declaration": "struct XCTestError"
}