{
  "path": "/documentation/xctest/xcuielement/attributename",
  "type": "Structure",
  "name": "XCUIElement.AttributeName",
  "desc": "A set of string constants that serves as keys for storing element attributes in a dictionary.",
  "items": [
    {
      "name": "static let children: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying an element’s children."
    },
    {
      "name": "static let elementType: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying an element’s type."
    },
    {
      "name": "static let enabled: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying whether an element is enabled."
    },
    {
      "name": "static let frame: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying an element’s frame."
    },
    {
      "name": "static let hasFocus: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying whether an element has focus."
    },
    {
      "name": "static let horizontalSizeClass: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying an element’s horizontal size class."
    },
    {
      "name": "static let identifier: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying an element’s identifier."
    },
    {
      "name": "static let label: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying an element’s label."
    },
    {
      "name": "static let placeholderValue: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying an element’s placeholder value."
    },
    {
      "name": "static let selected: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying whether an element is selected."
    },
    {
      "name": "static let title: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying an element’s title."
    },
    {
      "name": "static let value: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying an element’s value."
    },
    {
      "name": "static let verticalSizeClass: XCUIElement.AttributeName",
      "desc": "A string constant that serves as a dictionary key identifying an element’s vertical size class."
    },
    {
      "name": "init(rawValue: String)",
      "desc": "Creates an attribute name dictionary key from a string value."
    }
  ],
  "declaration": "struct AttributeName, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}