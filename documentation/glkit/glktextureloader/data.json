{
  "path": "/documentation/glkit/glktextureloader",
  "type": "Class",
  "name": "GLKTextureLoader",
  "desc": "A utility class that simplifies loading OpenGL or OpenGL ES texture datas from a variety of image file formats.",
  "items": [
    {
      "name": "init(sharegroup: EAGLSharegroup)",
      "desc": "Initializes a new texture loader object."
    },
    {
      "name": "init(share: NSOpenGLContext)",
      "desc": "Initializes a new texture loader object."
    },
    {
      "name": "class func texture(withContentsOfFile: String, options: [String : NSNumber]?) -> GLKTextureInfo",
      "desc": "Loads a 2D texture image from a file and creates a new texture from the data."
    },
    {
      "name": "func texture(withContentsOfFile: String, options: [String : NSNumber]?, queue: DispatchQueue?, completionHandler: GLKTextureLoaderCallback)",
      "desc": "Asynchronously loads a 2D texture image from a file and creates a new texture from the data."
    },
    {
      "name": "class func texture(withContentsOf: URL, options: [String : NSNumber]?) -> GLKTextureInfo",
      "desc": "Loads a 2D texture image from a URL and creates a new texture from the data."
    },
    {
      "name": "func texture(withContentsOf: URL, options: [String : NSNumber]?, queue: DispatchQueue?, completionHandler: GLKTextureLoaderCallback)",
      "desc": "Asynchronously loads a 2D texture image from a URL and creates a new texture from the data."
    },
    {
      "name": "class func texture(withContentsOf: Data, options: [String : NSNumber]?) -> GLKTextureInfo",
      "desc": "Loads a 2D texture image from a memory range and creates a new texture from the data."
    },
    {
      "name": "func texture(withContentsOf: Data, options: [String : NSNumber]?, queue: DispatchQueue?, completionHandler: GLKTextureLoaderCallback)",
      "desc": "Asynchronously loads a 2D texture image from a memory range and creates a new texture from the data."
    },
    {
      "name": "class func texture(with: CGImage, options: [String : NSNumber]?) -> GLKTextureInfo",
      "desc": "Loads a 2D texture image from a Quartz image and creates a new texture from the data."
    },
    {
      "name": "func texture(with: CGImage, options: [String : NSNumber]?, queue: DispatchQueue?, completionHandler: GLKTextureLoaderCallback)",
      "desc": "Asynchronously loads a 2D texture image from a Quartz image and creates a new texture from the data."
    },
    {
      "name": "class func cubeMap(withContentsOfFile: String, options: [String : NSNumber]?) -> GLKTextureInfo",
      "desc": "Loads a cube map texture image from a single file and creates a new texture from the data."
    },
    {
      "name": "func cubeMap(withContentsOfFile: String, options: [String : NSNumber]?, queue: DispatchQueue?, completionHandler: GLKTextureLoaderCallback)",
      "desc": "Asynchronously loads a cube map texture image from a single file and creates a new texture from the data."
    },
    {
      "name": "class func cubeMap(withContentsOfFiles: [Any], options: [String : NSNumber]?) -> GLKTextureInfo",
      "desc": "Loads a cube map texture image from a series of files and creates a new texture from the data."
    },
    {
      "name": "func cubeMap(withContentsOfFiles: [Any], options: [String : NSNumber]?, queue: DispatchQueue?, completionHandler: GLKTextureLoaderCallback)",
      "desc": "Asynchronously loads a cube map texture image from a series of files and creates a new texture from the data."
    },
    {
      "name": "class func cubeMap(withContentsOf: URL, options: [String : NSNumber]?) -> GLKTextureInfo",
      "desc": "Loads a cube map texture image from a single URL and creates a new texture from the data."
    },
    {
      "name": "func cubeMap(withContentsOf: URL, options: [String : NSNumber]?, queue: DispatchQueue?, completionHandler: GLKTextureLoaderCallback)",
      "desc": "Asynchronously loads a cube map texture image from a single URL and creates a new texture from the data."
    },
    {
      "name": "typealias GLKTextureLoaderCallback",
      "desc": "Signature for the block executed after an asynchronous texture loading operation completes."
    },
    {
      "name": "enum GLKTextureLoaderError.Code",
      "desc": "Values to be returned in an NSError when a texture loader encounters an error."
    },
    {
      "name": "func texture(withName: String, scaleFactor: CGFloat, bundle: Bundle?, options: [String : NSNumber]?, queue: DispatchQueue?, completionHandler: GLKTextureLoaderCallback)"
    },
    {
      "name": "class func texture(withName: String, scaleFactor: CGFloat, bundle: Bundle?, options: [String : NSNumber]?) -> GLKTextureInfo"
    }
  ],
  "declaration": "class GLKTextureLoader : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}