{
  "path": "/documentation/exceptionhandling/nsexceptionhandler",
  "type": "Class",
  "name": "NSExceptionHandler",
  "desc": "The NSExceptionHandler class provides facilities for monitoring and debugging exceptional conditions in Objective-C programs. It works by installing a special uncaught exception handler via the  NSSetUncaughtExceptionHandler(_:) function. Consequently, to use the services of NSExceptionHandler, you must not install your own custom uncaught exception handler.",
  "items": [
    {
      "name": "class func `default`() -> NSExceptionHandler!",
      "desc": "Returns the singleton NSExceptionHandler instance."
    },
    {
      "name": "func exceptionHandlingMask() -> Int",
      "desc": "Returns a bit mask representing the types of exceptions monitored by the receiver and its handling and logging behavior."
    },
    {
      "name": "func exceptionHangingMask() -> Int",
      "desc": "Returns a bit mask representing the types of exceptions that will halt execution for debugging."
    },
    {
      "name": "func setExceptionHandlingMask(Int)",
      "desc": "Sets the bit mask of constants specifying the types of exceptions monitored by the receiver and its handling and logging behavior."
    },
    {
      "name": "func setExceptionHangingMask(Int)",
      "desc": "Sets the bit mask of constants specifying the types of exceptions that will halt execution for debugging."
    },
    {
      "name": "func delegate() -> Any!",
      "desc": "Returns the delegate of the NSExceptionHandler object."
    },
    {
      "name": "func setDelegate(Any!)",
      "desc": "Sets the delegate of the NSExceptionHandler object."
    }
  ],
  "declaration": "class NSExceptionHandler : NSObject",
  "inheritsFrom": [
    "NSObject"
  ]
}