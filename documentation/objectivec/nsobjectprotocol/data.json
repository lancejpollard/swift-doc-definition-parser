{
  "path": "/documentation/objectivec/nsobjectprotocol",
  "type": "Protocol",
  "name": "NSObjectProtocol",
  "desc": "The group of methods that are fundamental to all Objective-C objects.",
  "items": [
    {
      "name": "var superclass: AnyClass?",
      "desc": "Returns the class object for the receiverâ€™s superclass."
    },
    {
      "name": "func isEqual(Any?) -> Bool",
      "desc": "Returns a Boolean value that indicates whether the receiver and a given object are equal."
    },
    {
      "name": "var hash: Int",
      "desc": "Returns an integer that can be used as a table address in a hash table structure."
    },
    {
      "name": "func `self`() -> Self",
      "desc": "Returns the receiver."
    },
    {
      "name": "func isKind(of: AnyClass) -> Bool",
      "desc": "Returns a Boolean value that indicates whether the receiver is an instance of given class or an instance of any class that inherits from that class."
    },
    {
      "name": "func isMember(of: AnyClass) -> Bool",
      "desc": "Returns a Boolean value that indicates whether the receiver is an instance of a given class."
    },
    {
      "name": "func responds(to: Selector!) -> Bool",
      "desc": "Returns a Boolean value that indicates whether the receiver implements or inherits a method that can respond to a specified message."
    },
    {
      "name": "func conforms(to: Protocol) -> Bool",
      "desc": "Returns a Boolean value that indicates whether the receiver conforms to a given protocol."
    },
    {
      "name": "var description: String",
      "desc": "A textual representation of the receiver."
    },
    {
      "name": "var debugDescription: String",
      "desc": "A textual representation of the receiver to use with a debugger."
    },
    {
      "name": "func perform(Selector!) -> Unmanaged<AnyObject>!",
      "desc": "Sends a specified message to the receiver and returns the result of the message."
    },
    {
      "name": "func perform(Selector!, with: Any!) -> Unmanaged<AnyObject>!",
      "desc": "Sends a message to the receiver with an object as the argument."
    },
    {
      "name": "func perform(Selector!, with: Any!, with: Any!) -> Unmanaged<AnyObject>!",
      "desc": "Sends a message to the receiver with two objects as arguments."
    },
    {
      "name": "func isProxy() -> Bool",
      "desc": "Returns a Boolean value that indicates whether the receiver does not descend from NSObject."
    }
  ],
  "declaration": "protocol NSObjectProtocol"
}