{
  "path": "/documentation/sirikit/inintenterror",
  "type": "Structure",
  "name": "INIntentError",
  "desc": "Errors returned by SiriKit.",
  "items": [
    {
      "name": "static var decodingGeneric: INIntentError.Code"
    },
    {
      "name": "static var encodingFailed: INIntentError.Code"
    },
    {
      "name": "static var encodingGeneric: INIntentError.Code"
    },
    {
      "name": "static var imageGeneric: INIntentError.Code"
    },
    {
      "name": "static var imageLoadingFailed: INIntentError.Code"
    },
    {
      "name": "static var imageNoServiceAvailable: INIntentError.Code"
    },
    {
      "name": "static var imageServiceFailure: INIntentError.Code"
    },
    {
      "name": "static var imageProxyInvalid: INIntentError.Code"
    },
    {
      "name": "static var imageProxyLoop: INIntentError.Code"
    },
    {
      "name": "static var imageProxyTimeout: INIntentError.Code"
    },
    {
      "name": "static var imageRetrievalFailed: INIntentError.Code"
    },
    {
      "name": "static var imageStorageFailed: INIntentError.Code"
    },
    {
      "name": "static var imageScalingFailed: INIntentError.Code"
    },
    {
      "name": "static var permissionDenied: INIntentError.Code"
    },
    {
      "name": "static var voiceShortcutCreationFailed: INIntentError.Code"
    },
    {
      "name": "static var voiceShortcutDeleteFailed: INIntentError.Code"
    },
    {
      "name": "static var voiceShortcutGetFailed: INIntentError.Code"
    },
    {
      "name": "static var interactionOperationNotSupported: INIntentError.Code",
      "desc": "The INInteraction object could not be donated or deleted because those capabilities are not supported on the current device."
    },
    {
      "name": "static var donatingInteraction: INIntentError.Code",
      "desc": "The INInteraction object could not be donated to the system."
    },
    {
      "name": "static var deletingAllInteractions: INIntentError.Code",
      "desc": "The system was unable to delete all donated INInteraction objects."
    },
    {
      "name": "static var deletingInteractionWithIdentifiers: INIntentError.Code",
      "desc": "The system was unable to delete the specified set of INInteraction objects."
    },
    {
      "name": "static var deletingInteractionWithGroupIdentifier: INIntentError.Code",
      "desc": "The system was unable to delete the INInteraction objects using their group identifier."
    },
    {
      "name": "static var intentSupportedByMultipleExtension: INIntentError.Code",
      "desc": "An intent was supported by more than one Intents extension in the same app."
    },
    {
      "name": "static var restrictedIntentsNotSupportedByExtension: INIntentError.Code",
      "desc": "An intent was listed in the IntentsRestrictedWhileLocked key of the appâ€™s Info.plist, but not in the IntentsSupported key."
    },
    {
      "name": "static var noHandlerProvidedForIntent: INIntentError.Code",
      "desc": "No object was provided to handle the specified intent."
    },
    {
      "name": "static var invalidIntentName: INIntentError.Code",
      "desc": "The extension declared support for a nonexistent intent."
    },
    {
      "name": "static var noAppAvailable: INIntentError.Code"
    },
    {
      "name": "static var extensionLaunchingTimeout: INIntentError.Code",
      "desc": "The extension failed to launch in a timely manner."
    },
    {
      "name": "static var extensionBringUpFailed: INIntentError.Code",
      "desc": "There was an error while trying to communicate with the extension."
    },
    {
      "name": "static var invalidUserVocabularyFileLocation: INIntentError.Code",
      "desc": "An invalid location was specified for the user vocabulary file."
    },
    {
      "name": "static var requestTimedOut: INIntentError.Code",
      "desc": "The underlying request timed out."
    },
    {
      "name": "static var missingInformation: INIntentError.Code"
    },
    {
      "name": "var errorCode: Int"
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The SiriKit error domain."
    },
    {
      "name": "var errorUserInfo: [String : Any]"
    },
    {
      "name": "var localizedDescription: String"
    },
    {
      "name": "static func != (INIntentError, INIntentError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "static func == (INIntentError, INIntentError) -> Bool"
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "enum INIntentError.Code",
      "desc": "Constants for error codes returned by the framework."
    }
  ],
  "declaration": "struct INIntentError"
}