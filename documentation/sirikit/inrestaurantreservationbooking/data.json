{
  "path": "/documentation/sirikit/inrestaurantreservationbooking",
  "type": "Class",
  "name": "INRestaurantReservationBooking",
  "desc": "A potential reservation that a user can book.",
  "items": [
    {
      "name": "init(restaurant: INRestaurant, booking: Date, partySize: Int, bookingIdentifier: String)",
      "desc": "Initializes the reservation object with the specified information and status."
    },
    {
      "name": "var restaurant: INRestaurant",
      "desc": "The restaurant associated with the reservation."
    },
    {
      "name": "var partySize: Int",
      "desc": "The total number of guests in the party."
    },
    {
      "name": "var offers: [INRestaurantOffer]?",
      "desc": "An array of special offers from the restaurant."
    },
    {
      "name": "var bookingIdentifier: String",
      "desc": "The unique identifier associated with this reservation."
    },
    {
      "name": "var isBookingAvailable: Bool",
      "desc": "A Boolean value indicating whether the time slot is available for booking."
    },
    {
      "name": "var bookingDate: Date",
      "desc": "The date and time of the reservation."
    },
    {
      "name": "var bookingDescription: String?",
      "desc": "An optional description of the booking."
    },
    {
      "name": "var requiresName: Bool",
      "desc": "A Boolean indicating whether the reservation requires a guest name before booking."
    },
    {
      "name": "var requiresEmailAddress: Bool",
      "desc": "A Boolean indicating whether the reservation requires an email address before it booking."
    },
    {
      "name": "var requiresPhoneNumber: Bool",
      "desc": "A Boolean indicating whether the reservation requires a phone number before booking."
    },
    {
      "name": "var requiresManualRequest: Bool",
      "desc": "A Boolean indicating whether the reservation requires manually contacting the restaurant to confirm the details."
    }
  ],
  "declaration": "class INRestaurantReservationBooking : NSObject",
  "inheritsFrom": [
    "NSObject"
  ],
  "conformsTo": [
    "NSCopying",
    "NSSecureCoding"
  ]
}