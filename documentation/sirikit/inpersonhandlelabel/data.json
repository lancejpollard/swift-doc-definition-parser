{
  "path": "/documentation/sirikit/inpersonhandlelabel",
  "type": "Structure",
  "name": "INPersonHandleLabel",
  "desc": "Constants describing how the person handle relates to the user.",
  "items": [
    {
      "name": "init(String)",
      "desc": "Creates a person handle label with the specified raw value."
    },
    {
      "name": "init(rawValue: String)",
      "desc": "Creates a person handle label with the specified raw value."
    },
    {
      "name": "static let home: INPersonHandleLabel",
      "desc": "A constant indicating that the handle is associated with the user's home."
    },
    {
      "name": "static let homeFax: INPersonHandleLabel",
      "desc": "A constant indicating that the handle represents a home fax number."
    },
    {
      "name": "static let iPhone: INPersonHandleLabel",
      "desc": "A constant indicating that the handle is associated with the user's iPhone."
    },
    {
      "name": "static let main: INPersonHandleLabel",
      "desc": "A constant indicating that the handle is the primary way to contact the user."
    },
    {
      "name": "static let mobile: INPersonHandleLabel",
      "desc": "A constant indicating that the handle is associated with a mobile device."
    },
    {
      "name": "static let other: INPersonHandleLabel",
      "desc": "A constant indicating that the handle is associated with a location or device not specified by any other constant."
    },
    {
      "name": "static let pager: INPersonHandleLabel",
      "desc": "A constant indicating that the handle is associated with the user's pager."
    },
    {
      "name": "static let work: INPersonHandleLabel",
      "desc": "A constant indicating that the handle is associated with the user's work."
    },
    {
      "name": "static let workFax: INPersonHandleLabel",
      "desc": "A constant indicating that the handle represents a work fax number."
    },
    {
      "name": "static let school: INPersonHandleLabel"
    }
  ],
  "declaration": "struct INPersonHandleLabel, @unchecked Sendable",
  "conformsTo": [
    "Equatable",
    "Hashable",
    "RawRepresentable",
    "Sendable"
  ]
}