{
  "path": "/documentation/gameplaykit/gkcompositebehavior",
  "type": "Class",
  "name": "GKCompositeBehavior",
  "desc": "A set of behaviors, each of which is a set of goals, that together influence the movement of an agent.",
  "items": [
    {
      "name": "init(behaviors: [GKBehavior])",
      "desc": "Creates a composite behavior from the specified individual behaviors."
    },
    {
      "name": "init(behaviors: [GKBehavior], andWeights: [NSNumber])",
      "desc": "Creates a behavior with the specified behaviors and weights."
    },
    {
      "name": "func setWeight(Float, for: GKBehavior)",
      "desc": "Sets the weight for the specified individual behavior’s influence on agents, adding that behavior to the composite behavior if it is not already present."
    },
    {
      "name": "func weight(for: GKBehavior) -> Float",
      "desc": "Returns the weight for the specified individual behavior’s influence on agents."
    },
    {
      "name": "func remove(GKBehavior)",
      "desc": "Removes the specified individual behavior from the composite behavior."
    },
    {
      "name": "func removeAllBehaviors()",
      "desc": "Removes all individual behaviors from the composite behavior."
    },
    {
      "name": "var behaviorCount: Int",
      "desc": "The number of individual behaviors in the composite behavior."
    },
    {
      "name": "subscript(GKBehavior) -> NSNumber",
      "desc": "Returns the weight associated with the behavior specified by subscript syntax."
    },
    {
      "name": "subscript(Int) -> GKBehavior",
      "desc": "Returns the individual behavior at the specified index in the composite behavior’s list of behaviors."
    }
  ],
  "declaration": "class GKCompositeBehavior : GKBehavior",
  "inheritsFrom": [
    "GKBehavior"
  ]
}