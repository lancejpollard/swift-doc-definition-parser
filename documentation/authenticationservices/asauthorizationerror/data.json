{
  "path": "/documentation/authenticationservices/asauthorizationerror",
  "type": "Structure",
  "name": "ASAuthorizationError",
  "desc": "Errors that can occur during authorization.",
  "items": [
    {
      "name": "init(Code, userInfo: [String : Any])",
      "desc": "Initializes a new instance of an error."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "var code: Code",
      "desc": "The error code."
    },
    {
      "name": "var userInfo: [String : Any]",
      "desc": "A dictionary of user-specific information."
    },
    {
      "name": "static var notInteractive: ASAuthorizationError.Code"
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The error’s domain."
    },
    {
      "name": "let ASAuthorizationErrorDomain: String",
      "desc": "The domain of authorization errors."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "Supplemental data that might be included in an authorization error."
    },
    {
      "name": "var errorCode: Int",
      "desc": "The error’s code."
    },
    {
      "name": "static var canceled: ASAuthorizationError.Code",
      "desc": "The user canceled the authorization attempt."
    },
    {
      "name": "static var failed: ASAuthorizationError.Code",
      "desc": "The authorization attempt failed."
    },
    {
      "name": "static var invalidResponse: ASAuthorizationError.Code",
      "desc": "The authorization request received an invalid response."
    },
    {
      "name": "static var notHandled: ASAuthorizationError.Code",
      "desc": "The authorization request wasn’t handled."
    },
    {
      "name": "static var unknown: ASAuthorizationError.Code",
      "desc": "The authorization attempt failed for an unknown reason."
    },
    {
      "name": "enum ASAuthorizationError.Code",
      "desc": "Codes that authorization errors can have."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A human-readable description of the error."
    },
    {
      "name": "static func == (ASAuthorizationError, ASAuthorizationError) -> Bool",
      "desc": "Checks whether two authorization errors are equal."
    },
    {
      "name": "static func != (ASAuthorizationError, ASAuthorizationError) -> Bool",
      "desc": "Checks whether two authorization errors are not equal."
    }
  ],
  "declaration": "struct ASAuthorizationError"
}