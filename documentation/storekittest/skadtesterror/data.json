{
  "path": "/documentation/storekittest/skadtesterror",
  "type": "Structure",
  "name": "SKAdTestError",
  "desc": "An error the testing environment returns for SKAdNetwork testing errors.",
  "items": [
    {
      "name": "static var errorDomain: String",
      "desc": "A string that identifies the error domain."
    },
    {
      "name": "var code: Code",
      "desc": "The error code."
    },
    {
      "name": "var errorCode: Int",
      "desc": "The integer error code."
    },
    {
      "name": "var userInfo: [String : Any]",
      "desc": "The user information dictionary associated with the error."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "The error user information dictionary associated with the error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized, human-readable explanation of the error."
    },
    {
      "name": "enum SKAdTestError.Code",
      "desc": "Enumerated error codes related to ad network testing in the testing environment."
    },
    {
      "name": "static var signatureInvalidKey: SKAdTestError.Code",
      "desc": "The public key isn’t a valid cryptographic key, in the testing environment."
    },
    {
      "name": "static var signatureInvalidOrder: SKAdTestError.Code",
      "desc": "The order of the parameters in the signature is invalid, in the testing environment."
    },
    {
      "name": "static var signatureMissingAdNetworkId: SKAdTestError.Code",
      "desc": "The signature is missing an ad network identifier, in the testing environment."
    },
    {
      "name": "static var signatureMissingAppAdamId: SKAdTestError.Code",
      "desc": "The signature is missing the app item identifier for the advertised app, in the testing environment."
    },
    {
      "name": "static var signatureMissingCampaignId: SKAdTestError.Code",
      "desc": "The signature is missing the campaign identifier, in the testing environment."
    },
    {
      "name": "static var signatureMissingFidelityType: SKAdTestError.Code",
      "desc": "The signature is missing the fidelity type, in the testing environment."
    },
    {
      "name": "static var signatureMissingNonce: SKAdTestError.Code",
      "desc": "The signature is missing the nonce, in the testing environment."
    },
    {
      "name": "static var signatureMissingSourceAppAdamId: SKAdTestError.Code",
      "desc": "The signature is missing the source app item identifier, in the testing environment."
    },
    {
      "name": "static var signatureMissingTimestamp: SKAdTestError.Code",
      "desc": "The signature is missing a timestamp, in the testing environment."
    },
    {
      "name": "static var signatureUnknownError: SKAdTestError.Code",
      "desc": "An unknown error occurred with the signature in the testing environment."
    },
    {
      "name": "static var signatureVerificationFailed: SKAdTestError.Code",
      "desc": "The signature verification failed in the testing environment."
    },
    {
      "name": "static var excessivePostbacks: SKAdTestError.Code",
      "desc": "Too many postbacks submitted to the test session."
    },
    {
      "name": "static var invalidConversionValue: SKAdTestError.Code",
      "desc": "The conversion value isn’t valid, in the testing environment."
    },
    {
      "name": "static var invalidRunnerUpPostback: SKAdTestError.Code",
      "desc": "A non-winning postback is defined with a version prior to version 3, in the testing environment."
    },
    {
      "name": "static var malformedPostbacks: SKAdTestError.Code",
      "desc": "The postback in the testing environment is malformed."
    },
    {
      "name": "static var missingPostbacks: SKAdTestError.Code",
      "desc": "The testing environment doesn’t have any postbacks."
    },
    {
      "name": "static var misplacedWinnerPostback: SKAdTestError.Code",
      "desc": "A winning postback wasn’t found in the first position, in the testing environment."
    },
    {
      "name": "static var missingWinningPostback: SKAdTestError.Code",
      "desc": "The testing environment is missing a winning postback."
    },
    {
      "name": "static var unknownError: SKAdTestError.Code",
      "desc": "An unknown error occurred in the testing environment."
    },
    {
      "name": "static func != (SKAdTestError, SKAdTestError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "static func == (SKAdTestError, SKAdTestError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "init(Code, userInfo: [String : Any])",
      "desc": "Initializes the error object with the supplied error code and user info dictionary."
    }
  ],
  "declaration": "struct SKAdTestError"
}