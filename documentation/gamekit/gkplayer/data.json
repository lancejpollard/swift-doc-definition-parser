{
  "path": "/documentation/gamekit/gkplayer",
  "type": "Class",
  "name": "GKPlayer",
  "desc": "A remote player who the local player running your game can invite and communicate with through Game Center.",
  "items": [
    {
      "name": "var gamePlayerID: String",
      "desc": "A unique identifier for a player of the game."
    },
    {
      "name": "var teamPlayerID: String",
      "desc": "A unique identifier for a player of all the games that you distribute using your developer account."
    },
    {
      "name": "func scopedIDsArePersistent() -> Bool",
      "desc": "Returns a Boolean value depending on whether the game and Team ID for this player are persistent or unique to this game instance."
    },
    {
      "name": "let GKPlayerIDNoLongerAvailable: String",
      "desc": "A constant for a player ID that’s no longer available."
    },
    {
      "name": "var alias: String",
      "desc": "A string the player chooses to identify themself to other players."
    },
    {
      "name": "var displayName: String",
      "desc": "A string to display for the player."
    },
    {
      "name": "var isInvitable: Bool",
      "desc": "A Boolean value that indicates whether the local player can send an invitation to the player."
    },
    {
      "name": "func loadPhoto(for: GKPlayer.PhotoSize, withCompletionHandler: ((UIImage?, Error?) -> Void)?)",
      "desc": "Loads a photo of the player from Game Center."
    },
    {
      "name": "enum GKPlayer.PhotoSize",
      "desc": "The size of a photo that Game Center loads."
    },
    {
      "name": "class func anonymousGuestPlayer(withIdentifier: String) -> Self",
      "desc": "Creates a guest player with the specified identifier."
    },
    {
      "name": "var guestIdentifier: String?",
      "desc": "A developer-created string that identifies a guest player."
    },
    {
      "name": "static let GKPlayerDidChangeNotificationName: NSNotification.Name",
      "desc": "A notification that posts when a player object’s data changes."
    }
  ],
  "declaration": "class GKPlayer : GKBasePlayer",
  "inheritsFrom": [
    "GKBasePlayer"
  ]
}