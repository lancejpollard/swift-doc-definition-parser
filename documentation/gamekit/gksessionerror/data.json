{
  "path": "/documentation/gamekit/gksessionerror",
  "type": "Structure",
  "name": "GKSessionError",
  "desc": "No overview available.",
  "items": [
    {
      "name": "var errorCode: Int"
    },
    {
      "name": "var errorUserInfo: [String : Any]"
    },
    {
      "name": "var localizedDescription: String"
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "static var cancelledError: GKSessionError.Code"
    },
    {
      "name": "static var cannotEnableError: GKSessionError.Code"
    },
    {
      "name": "static var connectionClosedError: GKSessionError.Code"
    },
    {
      "name": "static var connectionFailedError: GKSessionError.Code"
    },
    {
      "name": "static var connectivityError: GKSessionError.Code"
    },
    {
      "name": "static var dataTooBigError: GKSessionError.Code"
    },
    {
      "name": "static var declinedError: GKSessionError.Code"
    },
    {
      "name": "static var errorDomain: String"
    },
    {
      "name": "static var inProgressError: GKSessionError.Code"
    },
    {
      "name": "static var internalError: GKSessionError.Code"
    },
    {
      "name": "static var invalidParameterError: GKSessionError.Code"
    },
    {
      "name": "static var notConnectedError: GKSessionError.Code"
    },
    {
      "name": "static var peerNotFoundError: GKSessionError.Code"
    },
    {
      "name": "static var systemError: GKSessionError.Code"
    },
    {
      "name": "static var timedOutError: GKSessionError.Code"
    },
    {
      "name": "static var transportError: GKSessionError.Code"
    },
    {
      "name": "static var unknownError: GKSessionError.Code"
    },
    {
      "name": "static func != (GKSessionError, GKSessionError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "static func == (GKSessionError, GKSessionError) -> Bool"
    },
    {
      "name": "enum GKSessionError.Code",
      "desc": "Error codes for the GKSession error domain."
    }
  ],
  "declaration": "struct GKSessionError"
}