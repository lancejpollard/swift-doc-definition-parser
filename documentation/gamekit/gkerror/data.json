{
  "path": "/documentation/gamekit/gkerror",
  "type": "Structure",
  "name": "GKError",
  "desc": "The error structure used by this framework.",
  "items": [
    {
      "name": "init(Code, userInfo: [String : Any])",
      "desc": "Initializes an error."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "The user information dictionary associated with the error."
    },
    {
      "name": "var userInfo: [String : Any]",
      "desc": "The user information dictionary."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A localized, human-readable description of the error."
    },
    {
      "name": "var errorCode: Int",
      "desc": "The integer representation for the error code."
    },
    {
      "name": "var code: Code",
      "desc": "A code that indicates the cause of the error."
    },
    {
      "name": "enum GKError.Code",
      "desc": "Error codes for the GameKit error domain."
    },
    {
      "name": "static var authenticationInProgress: GKError.Code",
      "desc": "The system can’t complete the requested operation because the local player is already authenticating."
    },
    {
      "name": "static var cancelled: GKError.Code",
      "desc": "The system canceled the requested operation or the user disabled it."
    },
    {
      "name": "static var challengeInvalid: GKError.Code",
      "desc": "The challenge request failed due to invalid challenge data."
    },
    {
      "name": "static var communicationsFailure: GKError.Code",
      "desc": "The system can’t complete the requested operation due to an error communicating with the server."
    },
    {
      "name": "static var gameSessionRequestInvalid: GKError.Code",
      "desc": "The properties of the game session request are impossible to fulfill."
    },
    {
      "name": "static var gameUnrecognized: GKError.Code",
      "desc": "The system can’t complete the requested operation because Game Center doesn’t recognize the app."
    },
    {
      "name": "static var invalidCredentials: GKError.Code",
      "desc": "The system can’t complete the requested operation because the user name or password are incorrect."
    },
    {
      "name": "static var invalidParameter: GKError.Code",
      "desc": "The system can’t complete the requested operation because one or more parameters are invalid."
    },
    {
      "name": "static var invalidPlayer: GKError.Code",
      "desc": "The system can’t complete the requested operation because the player is invalid."
    },
    {
      "name": "static var invitationsDisabled: GKError.Code",
      "desc": "The system can’t complete the requested operation because the receiving player has disabled invitations."
    },
    {
      "name": "static var matchNotConnected: GKError.Code",
      "desc": "The system can’t complete the requested operation because the match isn’t connected to other players."
    },
    {
      "name": "static var matchRequestInvalid: GKError.Code",
      "desc": "The system can’t complete the requested operation because the match request is invalid."
    },
    {
      "name": "static var notAuthenticated: GKError.Code",
      "desc": "The system can’t complete the requested operation because the system hasn’t authenticated the local player."
    },
    {
      "name": "static var notSupported: GKError.Code",
      "desc": "The app doesn’t have Game Center enabled."
    },
    {
      "name": "static var parentalControlsBlocked: GKError.Code",
      "desc": "The system can’t complete the requested operation because the user disabled this feature in Restrictions."
    },
    {
      "name": "static var playerPhotoFailure: GKError.Code",
      "desc": "The system can’t complete the requested operation to retrieve a player’s photo."
    },
    {
      "name": "static var playerStatusExceedsMaximumLength: GKError.Code",
      "desc": "The player’s status exceeds the maximum length."
    },
    {
      "name": "static var playerStatusInvalid: GKError.Code",
      "desc": "The player’s status is invalid."
    },
    {
      "name": "static var scoreNotSet: GKError.Code",
      "desc": "The system can’t complete the requested operation because the system hasn’t set the score."
    },
    {
      "name": "static var turnBasedInvalidParticipant: GKError.Code",
      "desc": "The system can’t complete the requested operation because the specified participant is invalid."
    },
    {
      "name": "static var turnBasedInvalidState: GKError.Code",
      "desc": "The system can’t complete the requested operation because the session is in an invalid state."
    },
    {
      "name": "static var turnBasedInvalidTurn: GKError.Code",
      "desc": "The system can’t complete the requested operation because the participant doesn’t have the required turn state."
    },
    {
      "name": "static var turnBasedMatchDataTooLarge: GKError.Code",
      "desc": "The system can’t complete the requested operation because the match data is too large."
    },
    {
      "name": "static var turnBasedTooManySessions: GKError.Code",
      "desc": "The system can’t complete the requested operation because it exceeds the maximum number of sessions."
    },
    {
      "name": "static var ubiquityContainerUnavailable: GKError.Code",
      "desc": "The system can’t complete the requested operation because the user hasn’t signed in to iCloud or hasn’t enabled iCloud Drive."
    },
    {
      "name": "static var underage: GKError.Code",
      "desc": "The system can’t complete the requested operation because this feature isn’t available to underage players."
    },
    {
      "name": "static var unexpectedConnection: GKError.Code",
      "desc": "An unexpected player has connected to a match."
    },
    {
      "name": "static var unknown: GKError.Code",
      "desc": "The system can’t complete the requested operation due to an unknown error."
    },
    {
      "name": "static var userDenied: GKError.Code",
      "desc": "The system can’t complete the requested operation because the user denied it."
    },
    {
      "name": "static var restrictedToAutomatch: GKError.Code",
      "desc": "The system can’t complete the requested operation because the player is using automatch."
    },
    {
      "name": "static var apiNotAvailable: GKError.Code",
      "desc": "The system can’t complete the requested operation because the API isn’t available."
    },
    {
      "name": "static var notAuthorized: GKError.Code",
      "desc": "The system can’t complete the requested operation because the system hasn’t authorized the player."
    },
    {
      "name": "static var connectionTimeout: GKError.Code",
      "desc": "The system can’t complete the requested operation because the connection timed out."
    },
    {
      "name": "static var apiObsolete: GKError.Code",
      "desc": "The system can’t complete the requested operation because Apple deprecated the API."
    },
    {
      "name": "static var friendListDescriptionMissing: GKError.Code",
      "desc": "The system denies access to the local player’s friends list because the game didn’t provide a reason."
    },
    {
      "name": "static var friendListRestricted: GKError.Code",
      "desc": "The system restricts access to the local player’s friends list."
    },
    {
      "name": "static var friendListDenied: GKError.Code",
      "desc": "The local player denies access to their friends list."
    },
    {
      "name": "static var friendRequestNotAvailable: GKError.Code",
      "desc": "The player can’t send a friend request at this time from this device."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "The domain for this error."
    },
    {
      "name": "static func == (GKError, GKError) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values are equal."
    },
    {
      "name": "static func != (GKError, GKError) -> Bool",
      "desc": "Returns a Boolean value that indicates whether two values aren’t equal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of a value by feeding them into the given function."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The computed hash value of the error."
    }
  ],
  "declaration": "struct GKError"
}