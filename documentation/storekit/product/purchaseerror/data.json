{
  "path": "/documentation/storekit/product/purchaseerror",
  "type": "Enumeration",
  "name": "Product.PurchaseError",
  "desc": "Error information for product purchase errors.",
  "items": [
    {
      "name": "case invalidOfferIdentifier",
      "desc": "The promotional offer identifier provided in the purchase options is invalid."
    },
    {
      "name": "case productUnavailable",
      "desc": "The product isn’t available."
    },
    {
      "name": "case purchaseNotAllowed",
      "desc": "The user isn’t allowed to make purchases."
    },
    {
      "name": "case ineligibleForOffer",
      "desc": "The user isn't eligible for the offer."
    },
    {
      "name": "case invalidOfferPrice",
      "desc": "The price of the offer isn't valid."
    },
    {
      "name": "case invalidOfferSignature",
      "desc": "The offer signature isn't valid."
    },
    {
      "name": "case invalidQuantity",
      "desc": "The quantity the app to the purchase is invalid."
    },
    {
      "name": "case missingOfferParameters",
      "desc": "Offer parameters are missing."
    },
    {
      "name": "var localizedDescription: String"
    },
    {
      "name": "static func != (Product.PurchaseError, Product.PurchaseError) -> Bool"
    },
    {
      "name": "static func == (Product.PurchaseError, Product.PurchaseError) -> Bool"
    },
    {
      "name": "var hashValue: Int"
    },
    {
      "name": "func hash(into: inout Hasher)"
    },
    {
      "name": "var errorDescription: String?"
    },
    {
      "name": "var failureReason: String?"
    },
    {
      "name": "var helpAnchor: String?"
    },
    {
      "name": "var recoverySuggestion: String?"
    }
  ],
  "declaration": "enum PurchaseError",
  "conformsTo": [
    "Error",
    "LocalizedError"
  ]
}