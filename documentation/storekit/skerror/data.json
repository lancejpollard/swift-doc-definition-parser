{
  "path": "/documentation/storekit/skerror",
  "type": "Structure",
  "name": "SKError",
  "desc": "StoreKit error descriptions, codes, and domain.",
  "items": [
    {
      "name": "var errorCode: Int",
      "desc": "The error code that this instance represents."
    },
    {
      "name": "var errorUserInfo: [String : Any]",
      "desc": "An info dictionary for providing additional details about an error."
    },
    {
      "name": "var localizedDescription: String",
      "desc": "A string containing the localized description of the error."
    },
    {
      "name": "var code: Code"
    },
    {
      "name": "var userInfo: [String : Any]"
    },
    {
      "name": "enum SKError.Code",
      "desc": "Error codes for StoreKit errors."
    },
    {
      "name": "static var unknown: SKError.Code",
      "desc": "Error code indicating that an unknown or unexpected error occurred."
    },
    {
      "name": "static var clientInvalid: SKError.Code",
      "desc": "Error code indicating that the client is not allowed to perform the attempted action."
    },
    {
      "name": "static var paymentCancelled: SKError.Code",
      "desc": "Error code indicating that the user canceled a payment request."
    },
    {
      "name": "static var paymentInvalid: SKError.Code",
      "desc": "Error code indicating that one of the payment parameters was not recognized by the App Store."
    },
    {
      "name": "static var paymentNotAllowed: SKError.Code",
      "desc": "Error code indicating that the user is not allowed to authorize payments."
    },
    {
      "name": "static var storeProductNotAvailable: SKError.Code",
      "desc": "Error code indicating that the requested product is not available in the store."
    },
    {
      "name": "static var cloudServicePermissionDenied: SKError.Code",
      "desc": "Error code indicating that the user has not allowed access to Cloud service information."
    },
    {
      "name": "static var cloudServiceNetworkConnectionFailed: SKError.Code",
      "desc": "Error code indicating that the device could not connect to the network."
    },
    {
      "name": "static var cloudServiceRevoked: SKError.Code",
      "desc": "Error code indicating that the user has revoked permission to use this cloud service."
    },
    {
      "name": "static var privacyAcknowledgementRequired: SKError.Code",
      "desc": "Error code indicating that the user has not yet acknowledged Apple’s privacy policy for Apple Music."
    },
    {
      "name": "static var unauthorizedRequestData: SKError.Code",
      "desc": "Error code indicating that the app is attempting to use a property for which it does not have the required entitlement."
    },
    {
      "name": "static var invalidOfferIdentifier: SKError.Code",
      "desc": "Error code indicating that the offer identifier cannot be found or is not active."
    },
    {
      "name": "static var invalidOfferPrice: SKError.Code",
      "desc": "Error code indicating that the price you specified in App Store Connect is no longer valid."
    },
    {
      "name": "static var invalidSignature: SKError.Code",
      "desc": "Error code indicating that the signature in a payment discount is not valid."
    },
    {
      "name": "static var missingOfferParams: SKError.Code",
      "desc": "Error code indicating that parameters are missing in a payment discount."
    },
    {
      "name": "static var ineligibleForOffer: SKError.Code",
      "desc": "An error code that indicates the user is ineligible for the subscription offer."
    },
    {
      "name": "static var overlayCancelled: SKError.Code",
      "desc": "An error code that indicates the cancellation of an overlay."
    },
    {
      "name": "static var overlayInvalidConfiguration: SKError.Code",
      "desc": "An error code that indicates the overlay’s configuration is invalid."
    },
    {
      "name": "static var overlayPresentedInBackgroundScene: SKError.Code"
    },
    {
      "name": "static var overlayTimeout: SKError.Code",
      "desc": "An error code that indicates the timing out of an overlay."
    },
    {
      "name": "static var unsupportedPlatform: SKError.Code",
      "desc": "An error code that indicates the current platform doesn’t support overlays."
    },
    {
      "name": "static var errorDomain: String",
      "desc": "Gets the error domain that identifies an error as a StoreKit error."
    },
    {
      "name": "let SKErrorDomain: String",
      "desc": "The error domain name for StoreKit errors."
    },
    {
      "name": "static func != (SKError, SKError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are not equal."
    },
    {
      "name": "static func == (SKError, SKError) -> Bool",
      "desc": "Returns a Boolean value indicating whether two values are equal."
    },
    {
      "name": "func hash(into: inout Hasher)",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher."
    },
    {
      "name": "var hashValue: Int",
      "desc": "The hash value."
    },
    {
      "name": "init(Code, userInfo: [String : Any])"
    }
  ],
  "declaration": "struct SKError"
}